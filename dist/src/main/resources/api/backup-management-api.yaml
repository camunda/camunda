openapi: "3.0.2"
info:
  title: Backup Management API
  version: "1.0"
  description: Management endpoint to query, take, and delete backups of Camunda.
servers:
  - url: "{schema}://{host}:{port}/actuator/"
    variables:
      host:
        default: localhost
        description: Management server hostname
      port:
        default: "9600"
        description: Management server port
      schema:
        default: http
        description: Management server schema
paths:
  # Runtime backups
  /backupRuntime:
    post:
      summary: Takes a backup of runtime data
      description: Start taking a backup with the given backupId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TakeBackupRuntimeRequest'
      responses:
        '202':
          description: A backup has been successfully scheduled
          $ref: '#/components/responses/TakeBackupRuntimeResponse'
        '400':
          description: Backup is not enabled or configured on the brokers or the given BackupId is not valid.
          $ref: '#/components/responses/Error'
        '409':
          description: A backup with same or higher id already exists
          $ref: '#/components/responses/Error'
        '500':
          description: Internal Error
          $ref: '#/components/responses/Error'
        '502':
          description: Gateway failed to send request to the broker.
          $ref: '#/components/responses/Error'
        '504':
          description: Request from gateway to broker timed out
          $ref: '#/components/responses/Error'
    get:
      summary: Lists all available runtime backups
      description: |
        Returns a list of all available backups with their state and additional info,
        sorted in descending order of backupId.
      responses:
        '200':
          description: OK
          $ref: '#/components/responses/BackupList'
        '400':
          description: Backup is not enabled or configured on the brokers
          $ref: '#/components/responses/Error'
        '500':
          description: Internal Error
          $ref: '#/components/responses/Error'
        '502':
          description: Gateway failed to send request to the broker.
          $ref: '#/components/responses/Error'
        '504':
          description: Request from gateway to broker timed out
          $ref: '#/components/responses/Error'
  /backupRuntime/{backupId}:
    get:
      summary: Get information of a runtime backup
      description: A detailed information of the backup with the give backup id.
      parameters:
        - $ref: '#/components/parameters/BackupId'
      responses:
        '200':
          description: OK
          $ref: '#/components/responses/BackupInfo'
        '400':
          description: Backup is not enabled or configured on the brokers
          $ref: '#/components/responses/Error'
        '404':
          description: A backup with given backupId does not exist
          $ref: '#/components/responses/Error'
        '500':
          description: Internal Error
          $ref: '#/components/responses/Error'
        '502':
          description: Gateway failed to send request to the broker.
          $ref: '#/components/responses/Error'
        '504':
          description: Request from gateway to broker timed out
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a runtime backup
      description: Delete a backup with the given id
      parameters:
        - $ref: '#/components/parameters/BackupId'
      responses:
        '204':
          description: Backup is deleted
        '500':
          description: Internal error
          $ref: '#/components/responses/Error'
        '502':
          description: Gateway failed to send request to the broker.
          $ref: '#/components/responses/Error'
        '504':
          description: Request from gateway to broker timed out
          $ref: '#/components/responses/Error'

  # Section on historic backups
  /backupHistory:
    post:
      summary: Takes a backup of history data
      description: Start taking a backup with the given backupId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TakeBackupHistoryRequest'
      responses:
        '202':
          description: A backup has been successfully scheduled
          $ref: '#/components/responses/TakeBackupHistoryResponse'
        '400':
          description: In case something is wrong with backupId, e.g. the same backup ID already exists.
          $ref: '#/components/responses/Error'
        '500':
          description: All other errors, e.g. ES returned error response when attempting to create a snapshot.
          $ref: '#/components/responses/Error'
        '502':
          description: Elasticsearch is not accessible, the request can be retried when it is back.
          $ref: '#/components/responses/Error'
    get:
      summary: Lists all available historic backups
      description: |
        Returns a list of all available backups with their state and additional info,
        sorted in descending order of backupId.
      parameters:
        - in: query
          name: verbose
          schema:
            type: boolean
            default: true
          description: |
            Set to false to improve the query performance. However, the response will not contain
            fields startTime, failures, failureReason.
            This parameter is forwarded to Elasticsearch/Opensearch /_snapshot/ API.
        - in: query
          name: pattern
          schema:
            type: string
            default: '*'
          description: |
            Provide a possible prefix for filtering the backups. Since the backupId is a number,
            this pattern can only contain digits and the wildcard '*'.
      responses:
        '200':
          description: OK
          $ref: '#/components/responses/HistoryBackupList'
        '404':
          description: Backup repository is not configured.
          $ref: '#/components/responses/Error'
        '500':
          description: All other errors, e.g. ES returned error response when attempting to create a snapshot.
          $ref: '#/components/responses/Error'
        '502':
          description: Elasticsearch is not accessible, the request can be retried when it is back.
          $ref: '#/components/responses/Error'
  /backupHistory/{backupId}:
    get:
      summary: Get information of a historic backup
      description: A detailed information of the backup with the give backup id.
      parameters:
        - $ref: '#/components/parameters/BackupId'
      responses:
        '200':
          description: OK
          $ref: '#/components/responses/HistoryBackupDetail'
        '404':
          description: Backup with given ID does not exist.
          $ref: '#/components/responses/Error'
        '500':
          description: All other errors, e.g. ES returned error response when attempting to create a snapshot.
          $ref: '#/components/responses/Error'
        '502':
          description: Elasticsearch is not accessible, the request can be retried when it is back.
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a historic backup
      description: Delete a backup with the given id
      parameters:
        - $ref: '#/components/parameters/BackupId'
      responses:
        '204':
          description: Backup is deleted
        '404':
          description: Not a single snapshot corresponding to given ID exist.
          $ref: '#/components/responses/Error'
        '500':
          description: All other errors, e.g. ES returned error response when attempting to create a snapshot.
          $ref: '#/components/responses/Error'
        '502':
          description: Elasticsearch is not accessible, the request can be retried when it is back.
          $ref: '#/components/responses/Error'

components:
  parameters:
    BackupId:
      name: backupId
      required: true
      in: path
      description: Id of the backup
      schema:
        $ref: '#/components/schemas/BackupId'

  responses:
    Error:
      description: Generic error response
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"

    BackupList:
      description: |
       List of all available backups.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BackupList'
    HistoryBackupList:
      description: |
        List of all available backups.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoryBackupList'

    BackupInfo:
      description: Detailed information of a backup
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BackupInfo'

    HistoryBackupDetail:
      description: Detailed information of a backup
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoryBackupDetail'

    TakeBackupRuntimeResponse:
      description: Response for take backup request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TakeBackupRuntimeResponse'

    TakeBackupHistoryResponse:
      description: Response for take backup request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TakeBackupHistoryResponse'
  schemas:
    Error:
      title: Error response
      description: Generic response for all errors
      type: object
      properties:
        message:
          description: Error message
          type: string
          example: something failed

    BackupId:
      title: Backup ID
      description: |
        The ID of the backup. The ID of the backup must be a positive numerical value. As backups
        are logically ordered by their IDs (ascending), each successive backup must use a higher
        ID than the previous one.
      type: integer
      format: int64
      example: 1
      minimum: 0

    PartitionId:
      title: Partition ID
      description: |
        The ID of a partition. This is always a positive number greater than or equal to 1.
      type: integer
      format: int32
      minimum: 1
      example: 3

    StateCode:
      title: Runtime Backup State
      description: The state of the backup.
      type: string
      enum:
        - DOES_NOT_EXIST
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - INCOMPLETE
        - INCOMPATIBLE
      example: IN_PROGRESS

    HistoryStateCode:
      title: History Backup State
      description: The state of the backup.
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - INCOMPATIBLE
        - INCOMPLETE
      example: IN_PROGRESS
    BackupList:
      title: List of backups
      description: List of backups with their state and additional info
      type: array
      items:
        $ref: '#/components/schemas/BackupInfo'

    BackupInfo:
      title: Backup Info
      description: |
        Detailed status of a backup. The aggregated state is computed from the backup state of each partition as:
        - If the backup of all partitions is in state 'COMPLETED', then the overall state is 'COMPLETED'.
        - If one is 'FAILED', then the overall state is 'FAILED'.
        - Otherwise, if one is 'DOES_NOT_EXIST', then the overall state is 'INCOMPLETE'.
        - Otherwise, if one is 'IN_PROGRESS', then the overall state is 'IN_PROGRESS'.
      type: object
      properties:
        backupId:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BackupId'
        state:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/StateCode'
        failureReason:
          description: Reason for failure if the state is 'FAILED'
          type: string
          example: ""
        details:
          readOnly: true
          description: |
            Detailed list of the status of the backup per partition. It should always contain all
            partitions known to the cluster.
          type: array
          items:
            $ref: '#/components/schemas/PartitionBackupInfo'
      required:
        - backupId
        - state
        - details

    PartitionBackupInfo:
      title: Partition's Backup Info
      description: Detailed info of the backup for a given partition.
      type: object
      properties:
        partitionId:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PartitionId'
        state:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/StateCode'
        failureReason:
          description: Failure reason if stats is 'FAILED'
          type: string
          example: ""
        createdAt:
          description: The timestamp at which the backup was started on this partition.
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-15T13:10:38.176514094Z"
        lastUpdatedAt:
          description: |
            The timestamp at which the backup was last updated on this partition, e.g. changed
            state from IN_PROGRESS to COMPLETED.
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-15T13:10:38.176514094Z"
        snapshotId:
          description: The ID of the snapshot which is included in this backup.
          type: string
          readOnly: true
          example: 238632143-55-690906332-690905294
        checkpointPosition:
          description: The position of the checkpoint for this backup.
          type: integer
          format: int64
          readOnly: true
          example: 10
        brokerId:
          description: The ID of the broker from which the backup was taken for this partition.
          type: integer
          format: int32
          readOnly: true
          example: 0
          minimum: 0
        brokerVersion:
          description: The version of the broker from which the backup was taken for this partition.
          type: string
          readOnly: true
          example: 8.1.2
      required:
        - partitionId
        - state

    TakeBackupRuntimeRequest:
      title: TakeBackupRequest
      description: Request body for take backup
      type: object
      required:
        - backupId
      properties:
        backupId:
          description: The ID of the backup to be taken
          allOf:
            - $ref: '#/components/schemas/BackupId'

    TakeBackupRuntimeResponse:
      title: TakeBackupRuntimeResponse
      description: Response body for take backup
      type: object
      properties:
        message:
           description: A message indicating backup has been triggered
           type: string

    TakeBackupHistoryRequest:
      title: TakeBackupRequest
      description: Request body for take backup
      type: object
      required:
        - backupId
      properties:
        backupId:
          description: The ID of the backup to be taken
          allOf:
            - $ref: '#/components/schemas/BackupId'

    TakeBackupHistoryResponse:
      title: TakeBackupResponse
      description: Request body for take backup
      type: object
      properties:
        scheduledSnapshots:
          type: array
          items:
            type: string
            description: Snapshot identifier following the pattern camunda_operate_[id]_[version]_part_[current]_of_[total]
            example: "camunda_operate_123_8.2.0_part_1_of_6"

    HistoryBackupDetail:
      type: object
      properties:
        snapshotName:
          type: string
          description: Name of the snapshot
          example: "backup-snapshot-001"
        state:
          type: string
          description: Current state of the backup as reported by ElasticSearch/OpenSearch
          example: "SUCCESS"
        startTime:
          type: string
          format: date-time
          description: Timestamp when the backup started
          example: "2023-01-01T10:10:10.100+0000"
        failures:
          type: array
          items:
            type: string
          description: List of failure messages
      required:
        - snapshotName
        - state
        - startTime
        - failures

    HistoryBackupInfo:
      type: object
      properties:
        backupId:
          type: number
          description: Id of the backup
        state:
          $ref: '#/components/schemas/HistoryStateCode'
        failureReason:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/HistoryBackupDetail'
      required:
        - backupId
        - state
        - details

    HistoryBackupList:
      type: array
      items:
        $ref: '#/components/schemas/HistoryBackupInfo'
