{
  "enabled": true,
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended"
  ],
  "commitMessagePrefix": "deps:",
  "baseBranchPatterns": [
    "/^stable\\/8\\.([5-9]|[1-9][0-9])/",
    "stable/operate-8.5",
    "main"
  ],
  "dependencyDashboard": true,
  "prConcurrentLimit": 50,
  "prHourlyLimit": 10,
  "updateNotScheduled": false,
  "schedule": [
    "* 20-23,0-8 * * 1-5",
    "* * * * 0,6"
  ],
  "labels": ["dependencies"],
  "vulnerabilityAlerts": {
    "labels": [
      "dependencies",
      "area/security"
    ],
    "enabled": true
  },
  "lockFileMaintenance": {
    "enabled": true,
    "automerge": true,
    "addLabels": [
      "automerge"
    ]
  },
  "hostRules": [
    {
      "timeout": 10000
    }
  ],
  "packageRules": [
    {
      "description": "This rule is a Renovate performance optimization specifying only one URL to avoid redundant Maven Central lookups in mirrors.",
      "matchDatasources": [
        "maven"
      ],
      "registryUrls": [
        "https://repo.maven.apache.org/maven2"
      ]
    },
    {
      "description": "Enable separateMinorPatch so updates to latest patch are not ignored in maintenance branches.",
      "separateMinorPatch": true,
      "matchBaseBranches": [
        "/^stable\\/8\\..*/",
        "stable/operate-8.5"
      ]
    },
    {
      "description": "Only patch updates for our maintenance branches to avoid breaking changes.",
      "matchBaseBranches": [
        "/^stable\\/8\\..*/",
        "stable/operate-8.5"
      ],
      "matchUpdateTypes": [
        "minor",
        "major"
      ],
      "enabled": false
    },
    {
      "description": "Identify updates related to builds, tooling, etc. that should be routed to Monorepo DevOps team.",
      "matchManagers": [
        "dockerfile",
        "maven-wrapper",
        "github-actions",
        "nvm",
        "helmv3"
      ],
      "addLabels": [
        "area/build",
        "component/build-pipeline"
      ]
    },
    {
      "description": "Identify updates related to builds, tooling, etc. that should be routed to Monorepo DevOps team.",
      "matchManagers": [
        "regex"
      ],
      "matchFileNames": [
        ".github/**"
      ],
      "addLabels": [
        "area/build",
        "component/build-pipeline"
      ]
    },
    {
      "description": "Allow minor updates for Spring and Spring-boot for stable branches where the Spring support window is not matching the Camunda support window yet. Right now these are 8.6+. Since Spring has a 1-year support cycle while C8 is supported for 18 months, we allow minor updates to help mitigate security risks.",
      "matchBaseBranches": [
        "/^stable\\/8\\.([6-9]|\\d\\d)/",
        "stable/operate-8.5"
      ],
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "org.springframework**"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "org.opensearch.client**",
        "org.elasticsearch**",
        "co.elastic**"
      ],
      "matchUpdateTypes": [
        "minor",
        "major"
      ],
      "enabled": false
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "elasticsearch",
        "opensearchproject/opensearch"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
      "enabled": false
    },
    {
      "description": "Skip lucene major updates to avoid breaking changes.",
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "org.apache.lucene**"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "enabled": false
    },
    {
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "com.graphql-java**"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "enabled": false
    },
    {
      "description": "Digest updates cover all use cases since they are used as base, so we disable other types.",
      "matchManagers": [
        "dockerfile"
      ],
      "matchFileNames": [
        "Dockerfile",
        "camunda.Dockerfile"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch"
      ],
      "enabled": false
    },
    {
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "org.jacoco**"
      ],
      "allowedVersions": "!/0.8.9/"
    },
    {
      "description": "Exclude SNAPSHOT versions, renovate may suggest them for pre-release values.",
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "/.*/"
      ],
      "allowedVersions": "!/-SNAPSHOT$/"
    },
    {
      "description": "Exclude internal Maven modules and Maven dependencies lacking metadata.",
      "matchManagers": [
        "maven"
      ],
      "matchPackageNames": [
        "/io.camunda:operate-parent/",
        "/io.camunda:operate-qa/",
        "/io.camunda:operate-qa-migration-tests-parent/",
        "/io.camunda:tasklist-qa/",
        "/io.camunda:tasklist-qa-migration-tests-parent/",
        "/net.jcip:jcip-annotations/"
      ],
      "enabled": false
    },
    {
      "description": "This additional prefix is used to skip Operate backend tests based on branch name.",
      "matchManagers": [
        "npm",
        "nvm"
      ],
      "additionalBranchPrefix": "fe-"
    },
    {
      "description": "This additional prefix is used to skip Operate backend tests based on branch name.",
      "matchPackageNames": [
        "mcr.microsoft.com/playwright"
      ],
      "additionalBranchPrefix": "fe-"
    },
    {
      "description": "Exclude frontend deps until Optimize migrates to react-router v6 & remove enzyme",
      "matchManagers": [
        "npm",
        "nvm"
      ],
      "matchFileNames": [
        "optimize/**"
      ],
      "matchPackageNames": [
        "/@carbon/react/",
        "/old-bpmn-js/",
        "/react-router/",
        "/react-router-dom/",
        "/@types/react-router-dom/",
        "/react-18/",
        "/react-dom-18/"
      ],
      "enabled": false
    },
    {
      "description": "Exclude Optimize backend dependencies",
      "matchManagers": [
        "maven"
      ],
      "matchFileNames": [
        "optimize/**"
      ],
      "matchPackageNames": [
        "/io.camunda.optimize:camunda-optimize/",
        "/io.camunda.optimize:util/",
        "/io.camunda:zeebe-client-java/",
        "/io.camunda:zeebe-protocol/",
        "/ant-contrib:ant-contrib/"
      ],
      "enabled": false
    },
    {
      "description": "Exclude Maven packages detected as parent root",
      "matchManagers": [
        "maven"
      ],
      "matchDepTypes": [
        "parent-root"
      ],
      "enabled": false
    },
    {
      "matchPackageNames": [
        "@types{/,}**"
      ],
      "groupName": "definitelyTyped"
    },
    {
      "extends": [
        "monorepo:react"
      ],
      "groupName": "react monorepo"
    },
    {
      "extends": [
        "monorepo:react-router"
      ],
      "groupName": "react-router monorepo"
    },
    {
      "matchManagers": [
        "npm",
        "nvm"
      ],
      "matchPackageNames": [
        "*"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "groupName": "all non-major dependencies",
      "groupSlug": "all-minor-patch"
    },
    {
      "description": "For known GitHub repositories that use GitHub tags/releases of format/ 'v1.2.3' and where we ignore the 'v' prefix, we also tell Renovate to ignore it via extractVersion when updating .tool-version file",
      "matchFileNames": [
        ".github/workflows/*.yml"
      ],
      "matchPackageNames": [
        "rhysd/actionlint"
      ],
      "extractVersion": "^v(?<version>.*)$"
    },
    {
      "description": "Both dependencies need to be updated at once for green CI.",
      "matchPackageNames": [
        "@playwright/test",
        "mcr.microsoft.com/playwright"
      ],
      "groupName": "playwright"
    },
    {
      "description": "Automerge all updates with green CI.",
      "matchPackageNames": [
        "*"
      ],
      "automerge": true,
      "addLabels": [
        "automerge"
      ]
    }
  ],
  "dockerfile": {
    "managerFilePatterns": [
      "/(^|\\/)([\\w-]+\\.)?[Dd]ockerfile$/"
    ],
    "ignorePaths": [
      "zeebe/load-tests/**",
      "clients/go/vendor/**"
    ]
  },
  "customManagers": [
    {
      "managerFilePatterns": [
        "/\\.yml$/"
      ],
      "customType": "regex",
      "matchStrings": [
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.* '(?<currentValue>.*)'\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/package\\.json/"
      ],
      "matchStrings": [
        "mcr\\.microsoft\\.com\\/playwright:(?<currentValue>.*?)\\s"
      ],
      "depNameTemplate": "mcr.microsoft.com/playwright",
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/optimize\\/docker\\/test\\/docker-labels\\.golden\\.json/"
      ],
      "matchStrings": [
        "(?<depName>docker\\.io\\/library\\/alpine):(?<currentValue>\\d+\\.\\d+\\.\\d+)"
      ],
      "datasourceTemplate": "docker"
    }
  ]
}
