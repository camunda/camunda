name: Operate Run Tests
on:
  workflow_call:
    inputs:
      command:
        description: "Maven command to trigger the test"
        required: true
        type: string
      forkCount:
        description: "The number of VMs to fork in parallel in order to execute the tests"
        required: false
        default: 4
        type: number
env:
  JAVA_VERSION: "21"
  LIMITS_CPU: ${{ inputs.forkCount }}
jobs:
  run-test:
    runs-on: gcp-perf-core-4-default
    timeout-minutes: 30
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/github.com/organizations/camunda NEXUS_USR;
            secret/data/github.com/organizations/camunda NEXUS_PSW;
            secret/data/products/operate/ci/github-actions OPERATE_CI_ALERT_WEBHOOK_URL;
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"
      - name: Setup Maven
        uses: ./.github/actions/setup-maven-dist
        with:
          maven-version: 3.8.8
          set-mvnw: true
      - name: Configure Maven
        uses: ./.github/actions/setup-maven-cache
        with:
          maven-cache-key-modifier: operate-tests
      - name: "Create settings.xml"
        uses: s4u/maven-settings-action@v3.0.0
        with:
          githubServer: false
          servers: |
            [{
               "id": "camunda-nexus",
               "username": "${{ steps.secrets.outputs.NEXUS_USR }}",
               "password": "${{ steps.secrets.outputs.NEXUS_PSW }}"
             }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*", "name": "camunda Nexus"}]'
      - name: Build Operate
        run: ./mvnw -B -T1C -DskipChecks -DskipTests -P skipFrontendBuild clean install
      - name: Run Tests
        run: ${{ inputs.command }} -T${{ env.LIMITS_CPU }}
      - name: Upload failed test results
        uses: ./.github/actions/collect-test-artifacts
        if: failure()
        with:
          name: operate-test-results
          path: |
            **/failsafe-reports/
            **/surefire-reports/
          retention-days: 1

