# description: This workflow runs e2e tests weekly. It runs each test suite against the development head (e.g. main).
#  As this is meant to be run via scheduling, the workflow itself only runs on the default branch (e.g. main), so any changes you make will affect any other branches we test via this workflow.
# type: CI
# owner: @camunda/core-features
name: Zeebe Weekly E2E tests

on:
  workflow_dispatch: { }
  schedule:
    # Run at 7:00 on every monday
    - cron: '0 7 * * 1'

jobs:
  # This job will figure out the last supported versions based on the latest tags.
  #
  # Versions around found by sorting the tags, removing any that doesn't match semantic version,
  # and ignoring those with suffixes, and sort in natural order reversed. To get the second-highest
  # minor branch, we do the same, but we also filter out any versions which match the minor version
  # of the latest stable version.
  get-versions:
    name: Compute branch matrix
    runs-on: ubuntu-latest
    outputs:
      latest-version: ${{ env.LATEST_VERSION }}
      second-last-version: ${{ env.SECOND_LAST_VERSION }}
      third-last-version: ${{ env.THIRD_LAST_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --tags
      - run: |
          mapfile -t versions < <(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sed -E -e 's/\.[0-9]+$//' | sort -Vr | uniq)

          latest="${versions[0]}"
          second_last="${versions[1]}"
          third_last="${versions[2]}"
          if [ -n "$latest" ] && [ -n "$second_last" ] && [ -n "$third_last" ]; then
            echo "Successfully computed latest versions: ${latest} and ${second_last} and ${third_last}"
          else
            echo "Failed to compute latest versions"
          fi
          {
            echo "LATEST_VERSION=${latest}"
            echo "SECOND_LAST_VERSION=${second_last}"
            echo "THIRD_LAST_VERSION=${third_last}"
          } >> "$GITHUB_ENV"

  e2e:
    needs:
      - get-versions
    strategy:
      # do not cancel other jobs if one fails
      fail-fast: false
      matrix:
        branch:
          - 'main'
          - ${{ format('stable/{0}', needs.get-versions.outputs.latest-version) }}
          - ${{ format('stable/{0}', needs.get-versions.outputs.second-last-version) }}
          - ${{ format('stable/{0}', needs.get-versions.outputs.third-last-version) }}
        include:
          - branch: 'main'
            generation_template: 'Zeebe SNAPSHOT'
          - branch: ${{ format('stable/{0}', needs.get-versions.outputs.latest-version) }}
            generation_template: ${{ format('Camunda {0}+gen1', needs.get-versions.outputs.latest-version) }}
          - branch: ${{ format('stable/{0}', needs.get-versions.outputs.second-last-version) }}
            generation_template: ${{ format('Camunda {0}+gen1', needs.get-versions.outputs.second-last-version) }}
          - branch: ${{ format('stable/{0}', needs.get-versions.outputs.third-last-version) }}
            generation_template: ${{ format('Camunda {0}.0', needs.get-versions.outputs.third-last-version) }}
    runs-on: ubuntu-latest
    name: Weekly E2E
    steps:
      - uses: actions/checkout@v4
      - name: Trigger Weekly E2E on ${{ matrix.branch }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh workflow run --ref ${{ matrix.branch }} zeebe-e2e-testbench.yaml -F generation='${{ matrix.generation_template }}' -F branch=${{ matrix.branch }} -F maxTestDuration='P5D' -F maxInstanceDuration='40m' -F clusterPlan='Production - M'

  e2e-multiregion-failover:
    name: Multi-region failover with data loss
    uses: ./.github/workflows/zeebe-e2e-testbench.yaml
    with:
      branch: main
      generation: Zeebe SNAPSHOT
      maxTestDuration: P1D
      clusterPlan: Multiregion test simulation
      fault: '"2-region-dataloss-failover"'
      maxInstanceDuration: 40m
    secrets: inherit

  e2e-scaling-brokers:
    name: Scaling brokers
    uses: ./.github/workflows/zeebe-e2e-testbench.yaml
    with:
      branch: main
      generation: Zeebe SNAPSHOT
      maxTestDuration: PT4H
      clusterPlan: Production - M
      fault: '"scale-brokers"'
      maxInstanceDuration: 40m
    secrets: inherit
