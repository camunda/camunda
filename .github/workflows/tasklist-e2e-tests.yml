# description: This is a Workflow for running end to end FE tests on Tasklist. Starts an instance of Tasklist and uses that instance to run tests on
# test location: /tasklist/client/e2e
# type: CI
# owner: @camunda/core-features
---
name: Tasklist E2E Tests
on:
  push:
    branches:
      - "main"
      - "stable/**"
      - "release**"
  pull_request:

# Limit workflow to 1 concurrent run per ref (branch): new commit -> old runs are canceled to save costs
# Exception for main branch: complete builds for every commit needed for confidenence
concurrency:
  cancel-in-progress: true
  group: ${{ format('{0}-{1}', github.workflow, github.ref == 'refs/heads/main' && github.sha || github.ref) }}

jobs:
  detect-changes:
    outputs:
      tasklist-backend-changes: ${{ steps.filter.outputs.tasklist-backend-changes }}
      tasklist-frontend-changes: ${{ steps.filter.outputs.tasklist-frontend-changes }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      # Detect changes against the base branch
      - name: Detect changes
        uses: ./.github/actions/paths-filter
        id: filter

  test:
    runs-on: ubuntu-latest
    needs: [detect-changes]
    if: ${{ needs.detect-changes.outputs.tasklist-backend-changes == 'true' || needs.detect-changes.outputs.tasklist-frontend-changes == 'true' }}
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.18.3
        env:
          discovery.type: single-node
          cluster.name: docker-cluster
          bootstrap.memory_lock: true
          xpack.security.enabled: false
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          action.destructive_requires_name: false
        ports:
          - 9200:9200
          - 9300:9300

    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@b022ecdb0c75c75ceb164232485b392254f981f4
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/github.com/organizations/camunda NEXUS_USR;
            secret/data/github.com/organizations/camunda NEXUS_PSW;

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install node dependencies
        working-directory: qa/c8-orchestration-cluster-e2e-test-suite
        run: yarn install

      - name: Install frontend dependencies
        working-directory: ./tasklist/client
        run: yarn install

      - name: Add Yarn binaries to Path
        working-directory: ./tasklist/client
        run: |
          yarn bin >> "$GITHUB_PATH"
          yarn global bin >> "$GITHUB_PATH"

      - name: Install Playwright
        run: yarn exec playwright install -- --with-deps chromium
        working-directory: qa/c8-orchestration-cluster-e2e-test-suite

      - name: Build frontend
        working-directory: ./tasklist/client
        run: yarn build

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"

      - name: Setup Maven
        uses: ./.github/actions/setup-maven-dist
        with:
          maven-version: "3.9.6"
          set-mvnw: true

      # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml
      - name: "Create settings.xml"
        uses: s4u/maven-settings-action@v3.1.0
        with:
          githubServer: false
          servers: |
            [{
              "id": "camunda-nexus",
              "username": "${{ steps.secrets.outputs.NEXUS_USR }}",
              "password": "${{ steps.secrets.outputs.NEXUS_PSW }}"
            }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*", "name": "camunda Nexus"}]'

      - name: Build backend
        # Currently, the e2e environment of tasklist conflicts with the optimize build. For the moment,
        # we're excluding optimize from the build, not to impact this tasklist's workflow.
        run: ./mvnw clean install -T1C -DskipChecks -PskipFrontendBuild -DskipTests=true -B -DskipRemoteStaging=true -Dmaven.deploy.skip=true
      - name: Start Tasklist
        env:
          CAMUNDA_SECURITY_INITIALIZATION_USERS_0_USERNAME: demo
          CAMUNDA_SECURITY_INITIALIZATION_USERS_0_PASSWORD: demo
          CAMUNDA_SECURITY_INITIALIZATION_USERS_0_NAME: Demo
          CAMUNDA_SECURITY_INITIALIZATION_USERS_0_EMAIL: demo@example.com
          CAMUNDA_SECURITY_INITIALIZATION_DEFAULTROLES_ADMIN_USERS_0: demo
        run: >
          ./mvnw -q -B spring-boot:start -pl dist
          -Dspring-boot.run.main-class=io.camunda.application.StandaloneCamunda
          -Dspring-boot.run.fork=true
          -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=e2e-test,dev,tasklist,consolidated-auth,broker -Dzeebe.broker.exporters.camundaexporter.classname=io.camunda.exporter.CamundaExporter -Dzeebe.broker.exporters.camundaexporter.args.connect.url=http://localhost:9200 -Dzeebe.broker.exporters.camundaexporter.args.bulk.size=100 -Dzeebe.broker.exporters.camundaexporter.args.index.shouldWaitForImporters=false -Dzeebe.broker.backpressure.enabled=false -Dcamunda.security.initialization.users[0].name=Demo -Dcamunda.security.initialization.users[0].email=demo@demo.com -Dcamunda.security.initialization.users[0].username=demo -Dcamunda.security.initialization.users[0].password=demo -Dcamunda.security.initialization.defaultRoles.admin.users[0]=demo"
          -Dspring-boot.run.arguments="--camunda.tasklist.cloud.clusterId=449ac2ad-d3c6-4c73-9c68-7752e39ae616 --camunda.tasklist.csrfPreventionEnabled=false"

      - name: Python setup
        if: always()
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Run tests
        shell: bash
        env:
          LOCAL_TEST: "false"
          CORE_APPLICATION_TASKLIST_URL: http://localhost:8080
          CORE_APPLICATION_OPERATE_URL: http://localhost:8081
          CAMUNDA_AUTH_STRATEGY: "BASIC"
          CAMUNDA_BASIC_AUTH_USERNAME: "demo"
          CAMUNDA_BASIC_AUTH_PASSWORD: "demo"
          ZEEBE_REST_ADDRESS: "http://localhost:8080"
        run: npm run test -- --project=tasklist-v1-e2e
        working-directory: qa/c8-orchestration-cluster-e2e-test-suite
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: C8 Orchestration Cluster E2E Test Result
          path: qa/c8-orchestration-cluster-e2e-test-suite/html-report
          retention-days: 30

      - name: Observe build status
        if: always()
        continue-on-error: true
        uses: ./.github/actions/observe-build-status
        with:
          build_status: ${{ job.status }}
          secret_vault_secretId: ${{ secrets.VAULT_SECRET_ID }}
          secret_vault_address: ${{ secrets.VAULT_ADDR }}
          secret_vault_roleId: ${{ secrets.VAULT_ROLE_ID }}
