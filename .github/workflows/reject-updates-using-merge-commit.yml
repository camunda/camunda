# This workflow ensures that pull requests aren't updated using merge commits.
# To update a pull request with the latest changes you should rebase your branch on the base branch.
# See our contributing guide's section on 'Creating a pull request' for more information:
# https://github.com/camunda/camunda/blob/main/CONTRIBUTING.md#creating-a-pull-request
#
# It is allowed to have merge commits in a pull request.
# An example is a pull request that builds upon the work of another pull request.

name: Reject Merge Commits
on: [pull_request]

jobs:
  check-merge-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ github.event.pull_request.commits }}

      - name: Check for invalid merge commits
        run: |
          # Find the common ancestor between the base and the head
          common_ancestor=$(git merge-base origin/${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.head.sha }})

          # Get the list of merge commits in the pull request
          merge_commits=$(git rev-list --merges $common_ancestor..${{ github.event.pull_request.head.sha }})

          # Check each merge commit
          for merge_commit in $merge_commits; do
            # Get the parent commits of the merge commit
            parents=$(git rev-list --parents -n 1 $merge_commit | cut -d' ' -f2-)

            # Check if any parent commit exists in the base branch
            for parent in $parents; do
              if git merge-base --is-ancestor $parent origin/${{ github.event.pull_request.base.ref }}; then
                echo "Updating your pull request using a merge commit is allowed. Please update your pull request by rebasing your branch on the base branch."
                exit 1
              fi
            done
          done

          echo "No invalid merge commits found."
