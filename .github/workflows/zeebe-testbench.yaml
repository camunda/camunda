name: Start a Zeebe test in Testbench

on:
  workflow_call:
    inputs:
      variables:
        description: 'Process instance variables'
        required: true
        type: string
      processId:
        description: 'Id of process to start in testbench (eg:- e2e-testbench-protocol)'
        required: true
        type: string
      branch:
        description: 'Branch to test'
        required: true
        type: string

jobs:
  testbench:
    name: Start a test in testbench
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      - name: Authenticate for zeebe image registry
        uses: google-github-actions/auth@v2
        id: auth-zeebe
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - name: Authenticate for saas image registry
        id: auth-saas
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/618877442292/locations/global/workloadIdentityPools/github/providers/camunda'
          service_account: 'github-actions-zeebe-io@camunda-saas-registry.iam.gserviceaccount.com'
      - name: Setup BuildKit
        uses: docker/setup-buildx-action@v3
      - name: Login to SaaS image registry
        uses: docker/login-action@v3
        with:
          registry: europe-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth-saas.outputs.access_token }}
      - name: Login to Zeebe image registry
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth-zeebe.outputs.access_token }}
      - uses: ./.github/actions/setup-build
        with:
          dockerhub-readonly: true
          vault-address: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
      - id: image-tag
        name: Calculate image tag
        shell: bash
        run: |
          # Replace dots and slashes with dashes
          branch=${BRANCH/[\/\.]/-}
          version=$(./mvnw help:evaluate -q -DforceStdout -D"expression=project.version")
          echo "image-tag=$version-$branch-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        env:
          BRANCH: ${{ inputs.branch }}
      - uses: ./.github/actions/build-zeebe
        id: build-zeebe
      - uses: ./.github/actions/build-platform-docker
        id: build-zeebe-docker
        with:
          repository: europe-docker.pkg.dev/camunda-saas-registry/zeebe-io/zeebe
          version: ${{ steps.image-tag.outputs.image-tag }}
          push: true
          distball: ${{ steps.build-zeebe.outputs.distball }}
      - name: Build and Push Starter Image
        run: ./mvnw -pl zeebe/benchmarks/project jib:build -P starter -D image="gcr.io/zeebe-io/starter:${{ steps.image-tag.outputs.image-tag }}"
      - name: Build and Push Worker Image
        run: ./mvnw -pl zeebe/benchmarks/project jib:build -P worker -D image="gcr.io/zeebe-io/worker:${{ steps.image-tag.outputs.image-tag }}"
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3.3.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/zeebe/ci/zeebe TESTBENCH_PROD_CLIENT_SECRET;
            secret/data/products/zeebe/ci/zeebe TESTBENCH_PROD_REST_ADDRESS;

      - name: Get Auth Token
        uses: fjogeleit/http-request-action@v1
        id: authorization
        with:
          url: 'https://login.cloud.camunda.io/oauth/token'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/x-www-form-urlencoded"}'
          data: 'grant_type=client_credentials&audience=zeebe.camunda.io&client_id=Jg9caDRuAWHchvM7JiaVlndL-qVFfp~0&client_secret=${{ steps.secrets.outputs.TESTBENCH_PROD_CLIENT_SECRET }}'

      - name: Set Auth Token
        id: token
        run: |
          echo "access_token=$(echo '${{ steps.authorization.outputs.response }}' | jq -r '.access_token')" >> $GITHUB_ENV

      - name: Start Test
        shell: bash
        run: |
          # Substitute environment variables in the JSON payload
          substituted_variables=$(echo '${{ inputs.variables }}' | envsubst)

          # Format the JSON to ensure itâ€™s correct
          variables=$(echo "$substituted_variables" | jq -c .)

          # Run the curl command with expanded variables
          curl -L -X POST "${{ steps.secrets.outputs.TESTBENCH_PROD_REST_ADDRESS }}/v2/process-instances" \
            -H "Authorization: Bearer $access_token" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            --data-raw "{
              \"processDefinitionId\": \"${{ inputs.processId }}\",
              \"variables\": $variables
            }"
        env:
          IMAGE: zeebe-io/zeebe:${{ steps.image-tag.outputs.image-tag }}
          access_token: ${{ env.access_token }}

