# description: Deploys new zeebe benchmarks weekly. Old benchmarks are removed. Multiple kinds of benchmarks are created - Data, Normal, Mixed, Latency
# type: CI
# owner @camunda/core-features
name: Zeebe Weekly medic benchmark
on:
  workflow_dispatch:
     inputs:
      reuse-tag:
        description: 'Docker image tag, that should be reused for the medic benchmarks. Allows to skip the docker image build step, can be used for recreating previous weekly benchmarks.'
        type: string
        default: ""
        required: false
  schedule:
    # Runs at 1am every monday https://crontab.guru/#0_1_*_*_1
    - cron: 0 1 * * 1

jobs:
  delete-old-benchmarks:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - uses: google-github-actions/get-gke-credentials@v2.3.4
        with:
          cluster_name: zeebe-cluster
          location: europe-west1-b
      - name: Collect benchmark data
        id: data
        run: |
          # Count normal weekly namespaces
          echo "count=$(kubectl get ns -o name | grep -c -E "namespace/medic-y-[0-9]+-cw-[0-9]+-[a-z0-9]+-benchmark$")" >> "$GITHUB_OUTPUT"
          # Get all namespaces, filter for medic benchmarks and select the oldest one
          echo "normal=$(kubectl get ns -o name | grep -E "namespace/medic-y-[0-9]+-cw-[0-9]+-[a-z0-9]+-benchmark$" | sort -V | head -n1)" >> "$GITHUB_OUTPUT"
      - name: Delete benchmarks
        run: |
          COUNT="${{ steps.data.outputs.count }}"
          if [[  $COUNT -ge 4 ]];
          then
            # We want to have always at least 4 benchmarks running
            echo "Delete namespaces for ${{ steps.data.outputs.normal }}"
            kubectl delete ${{ steps.data.outputs.normal }}
            kubectl delete ${{ steps.data.outputs.normal }}-mixed
            kubectl delete ${{ steps.data.outputs.normal }}-latency
          else
            echo "Detected only ${{ steps.data.outputs.count }} benchmarks. Do not delete the oldest."
          fi
  benchmark-data:
    name: Collect benchmark data
    runs-on: ubuntu-latest
    outputs:
      full-ref: ${{ steps.data.outputs.full-ref }}
      benchmark: ${{ steps.data.outputs.benchmark }}
      operate: ${{ steps.data.outputs.operate }}
    steps:
      - uses: actions/checkout@v4
      - name: Collect benchmark data
        id: data
        run: |
          var=${{ inputs.reuse-tag || '' }}
          # ${#var} will return the length of the string
          if [[ ${#var} -eq 0 ]]; then
            echo "Creating new weekly benchmark"
            echo "benchmark=medic-y-$(date +%Y)-cw-$(date +%V)-$(git rev-parse --short HEAD)-benchmark" >> "$GITHUB_OUTPUT"
          else
            # Example:
            # $ echo ${var%?}
            # medic-y-2025-cw-18-b1bd4006-benchmark-b1bd400
            # $ echo ${var%-*}
            # medic-y-2025-cw-18-b1bd4006-benchmark
            tag=${{ inputs.reuse-tag }}
            var=${tag%-*}
            echo "Re-creating weekly benchmark, with name: $var and tag: $tag"
            echo "benchmark=$var" >> "$GITHUB_OUTPUT"
          fi
          echo "full-ref=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  setup-normal-benchmark:
    name: Normal Benchmark
    needs:
      - benchmark-data
      - delete-old-benchmarks
    uses: ./.github/workflows/camunda-load-test.yml
    secrets: inherit
    with:
      name: ${{ needs.benchmark-data.outputs.benchmark }}
      cluster: zeebe-cluster
      cluster-region: europe-west1-b
      ref: ${{ needs.benchmark-data.outputs.full-ref }}
      reuse-tag: ${{ inputs.reuse-tag || '' }}
      publish: "slack"
  setup-mixed-benchmark:
    name: Mixed Benchmark
    uses: ./.github/workflows/camunda-load-test.yml
    secrets: inherit
    needs:
      - benchmark-data
      - delete-old-benchmarks
    with:
      name: ${{ needs.benchmark-data.outputs.benchmark }}-mixed
      cluster: zeebe-cluster
      cluster-region: europe-west1-b
      ref: ${{ needs.benchmark-data.outputs.full-ref }}
      reuse-tag: ${{ inputs.reuse-tag || '' }}
      realistic: true
  setup-latency-benchmark:
    name: Latency Benchmark
    uses: ./.github/workflows/camunda-load-test.yml
    secrets: inherit
    needs:
      - benchmark-data
      - delete-old-benchmarks
    with:
      name: ${{ needs.benchmark-data.outputs.benchmark }}-latency
      cluster: zeebe-cluster
      cluster-region: europe-west1-b
      ref: ${{ needs.benchmark-data.outputs.full-ref }}
      reuse-tag: ${{ inputs.reuse-tag || '' }}
      load-test-load: >
        --set starter.rate=1
        --set workers.worker.replicas=1

  notify:
    name: Notify on failure
    runs-on: ubuntu-latest
    needs: [ delete-old-benchmarks, setup-normal-benchmark, setup-mixed-benchmark, setup-latency-benchmark ]
    if: failure()
    steps:
      - uses: actions/checkout@v4
      - id: slack-notify
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: *Medic benchmark creation failed:*"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "@zeebe-medic Please check the related workflow execution: https://github.com/camunda/camunda/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
