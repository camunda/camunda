name: Camunda Platform Release Workflow
on:
  workflow_call:
    inputs:
      releaseBranch:
        description: 'The branch to perform the release on, defaults to `release-$releaseVersion`'
        type: string
        required: false
        default: ''
      releaseVersion:
        description: 'The version to be build and released. If no releaseBranch specified, expecting `release-$releaseVersion` to already exist.'
        type: string
        required: true
      nextDevelopmentVersion:
        description: 'Next development version, e.g. 8.X.X-SNAPSHOT.'
        type: string
        required: true
      isLatest:
        description: 'Whether this is the latest release and the docker image should be tagged as camunda/{component}:latest'
        type: boolean
        required: false
        default: false
      dryRun:
        description: 'Whether to perform a dry release where no changes or artifacts are pushed, defaults to true.'
        type: boolean
        default: true

defaults:
  run:
    shell: bash

env:
  RELEASE_BRANCH: ${{ inputs.releaseBranch != '' && inputs.releaseBranch || format('release-{0}', inputs.releaseVersion) }}
  RELEASE_VERSION: ${{ inputs.releaseVersion }}
  GH_TOKEN: ${{ github.token }} # needs to be available for the gh CLI tool
  GITHUB_TOKEN_USR: ${{ github.token }} # needs to be available for the SCM URL in pom.xml
jobs:
  github:
    name: Github Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
#      - uses: actions/checkout@v4
#        with:
#          ref: ${{ env.RELEASE_BRANCH }}
#          fetch-depth: 0 # To fetch tags as well - necessary for the changelog generation
      - name: Install Zeebe changelog tool
        run: |
          gh release download --repo camunda/zeebe-changelog --pattern '*_Linux_i386.tar.gz'
          tar -xzvf zeebe-changelog_*
          chmod +x zcl
      - name: Generate Changelog for patch release
        id: gen-changelog
        run: |
          # We set some bash properties to better fail/debug this script
          #
          # * https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
          # * https://explainshell.com/explain?cmd=set+-euox+pipefail
          #
          # set -euox pipefail

          ./zcl generate --label version:${{ inputs.releaseVersion }} --token=${{ secrets.GITHUB_TOKEN }}

          # Default changelog value
          changelog="Release ${{ inputs.releaseVersion }}"

          changelog=$(./zcl generate --label version:${{ inputs.releaseVersion }} --token=${{ secrets.GITHUB_TOKEN }})

          echo changelog:
          echo $changelog

          echo 'CHANGELOG<<EOF' >> $GITHUB_OUTPUT
          echo $changelog >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          # To show the changelog also as step summary
          echo "$changelog" >> $GITHUB_STEP_SUMMARY
      - name: Determine if Pre-Release
        id: pre-release
        run: |
          shopt -s nocasematch # set matching to case insensitive
          PRE_RELEASE=false
          echo "result=${PRE_RELEASE}" >> $GITHUB_OUTPUT
      - name: Create Github release
        uses: ncipollo/release-action@v1
        with:
          name: "test-28426-changelog"
#          artifacts: "release-artifacts/*"
          artifactErrorsFailBuild: true
          draft: true
          body: ${{ steps.gen-changelog.outputs.CHANGELOG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ steps.pre-release.outputs.result }}
          tag: ${{ inputs.releaseVersion }}

