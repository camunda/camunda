# NOTE:
# This pipeline is currently not active. For more info, see:
# https://github.com/camunda/camunda/issues/24886

name: Optimize e2e cloud test

on:
  pull_request:
    paths:
      - ".github/actions/**"
      - ".github/workflows/optimize-*"
      - "bom/*"
      - "parent/*"
      - "pom.xml"
      - "optimize/**"
      - "optimize.Dockerfile"
  push:
    branches:
      - "main"
      - "stable/**"
      - "release/**"
    paths:
      - ".github/actions/**"
      - ".github/workflows/optimize-*"
      - "bom/*"
      - "parent/*"
      - "pom.xml"
      - "optimize/**"
      - "optimize.Dockerfile"
  workflow_dispatch:

jobs:
  e2e-cloud-test:
    if: false # This deactivates the pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize AUTH0_CLIENTSECRET;
            secret/data/products/optimize/ci/camunda-optimize AUTH0_USEREMAIL;
            secret/data/products/optimize/ci/camunda-optimize AUTH0_USERPASSWORD;
      - name: Setup Maven
        uses: ./.github/actions/setup-build
        with:
          java-distribution: zulu
          maven-cache-key-modifier: optimize-tests
          maven-version: 3.8.6
          time-zone: Europe/Berlin
          vault-address: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
      - name: Setup Chrome
        shell: bash
        run: |
          # remove existing chrome
          sudo apt-get remove -y google-chrome-stable
          # install chrome 126
          wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_126.0.6478.182-1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./google-chrome-stable_126.0.6478.182-1_amd64.deb
      - name: "Read Java / Version Info"
        id: "pom-info"
        uses: YunaBraska/java-info-action@main
        with:
          work-dir: ./optimize
      - name: Start Elastic search
        uses: ./.github/actions/compose
        with:
          compose_file: .github/actions/compose/docker-compose.elasticsearch.yml
          project_name: elasticsearch
        env:
          ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch_test_version }}
          ELASTIC_JVM_MEMORY: 1
          ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_database_port }}
      - name: Build frontend
        uses: ./.github/actions/build-frontend
        with:
          directory: ./optimize/client
      - name: 'build backend & frontend'
        run: ./mvnw clean install -DskipTests -Dskip.docker -pl optimize/backend -am -PskipFrontendBuild
      - name: 'start backend'
        working-directory: ./optimize/client
        run: |
          yarn run start-backend-cloud ci &
      - name: Start frontend app
        working-directory: ./optimize/client
        run: yarn start &
      - name: Wait for backend to start
        run: ./.github/optimize/scripts/wait-for.sh http://localhost:8090/api/readyz
      - name: Wait for frontend to start
        run: ./.github/optimize/scripts/wait-for.sh http://localhost:3000/ready
      - name: 'start e2e test'
        working-directory: ./optimize/client
        env:
          AUTH0_CLIENTSECRET: "${{ steps.secrets.outputs.AUTH0_CLIENTSECRET }}"
          AUTH0_USEREMAIL: "${{ steps.secrets.outputs.AUTH0_USEREMAIL }}"
          AUTH0_USERPASSWORD: "${{ steps.secrets.outputs.AUTH0_USERPASSWORD }}"
        run: yarn run e2e:ci:cloud:headless
