name: Optimize Generate Upgrade Plan

on:
  workflow_dispatch:
    inputs:
      BRANCH:
        required: true
        description: "The branch to push the upgrade plan"
        default: "stable/0.0.0"
      FROM_VERSION:
        description: 'From version'
        required: true
      TO_VERSION:
        description: 'To version'
        required: true

jobs:
  generate-upgrade-plan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3.3.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        secrets: |
          secret/data/products/optimize/ci/camunda-optimize GITHUB_OPTIMIZE_APP_ID;
          secret/data/products/optimize/ci/camunda-optimize GITHUB_OPTIMIZE_APP_KEY;
  
    - name: Generate a GitHub token
      id: github-token
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2
      with:
        app_id: ${{ steps.secrets.outputs.GITHUB_OPTIMIZE_APP_ID }}
        private_key: ${{ steps.secrets.outputs.GITHUB_OPTIMIZE_APP_KEY }}
        
    - name: Generate Upgrade Plan class
      run: |
        # Extract branch, fromVersion, and toVersion
        BRANCH=${{ github.event.inputs.BRANCH }}
        FROM_VERSION=${{ github.event.inputs.FROM_VERSION }}
        TO_VERSION=${{ github.event.inputs.TO_VERSION }}
        FROM_VERSION_NO_DOTS=${FROM_VERSION//./}
        TO_VERSION_NO_DOTS=${TO_VERSION//./}
        GITHUB_APP_ID=${{ steps.secrets.outputs.GITHUB_OPTIMIZE_APP_ID }}
        GITHUB_APP_PRIVATE_KEY=${{ steps.github-token.outputs.token }}
        GITHUB_ACTOR=${{ github.actor }}
        GITHUB_ACTOR_ID=${{ github.actor_id }}

        # Define Java content using a Here Document
        cat <<EOF > optimize/upgrade/src/main/java/io/camunda/optimize/upgrade/plan/factories/Upgrade${FROM_VERSION_NO_DOTS}To${TO_VERSION_NO_DOTS}PlanFactory.java
        package io.camunda.optimize.upgrade.plan.factories;

        import io.camunda.optimize.upgrade.plan.UpgradeExecutionDependencies;
        import io.camunda.optimize.upgrade.plan.UpgradePlan;
        import io.camunda.optimize.upgrade.plan.UpgradePlanBuilder;

        public class Upgrade${FROM_VERSION_NO_DOTS}To${TO_VERSION_NO_DOTS}PlanFactory implements UpgradePlanFactory {

          @Override
          public UpgradePlan createUpgradePlan(final UpgradeExecutionDependencies dependencies) {
            return UpgradePlanBuilder.createUpgradePlan().fromVersion("${FROM_VERSION}").toVersion("${TO_VERSION}").build();
          }
        }
        EOF

        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
        git remote set-url origin "https://${GITHUB_APP_ID}:${GITHUB_APP_PRIVATE_KEY}@github.com/camunda/camunda-optimize.git"
        git add .
        git commit -m "chore: generate upgrade plan for ${FROM_VERSION} to ${TO_VERSION}"
        git push origin ${BRANCH}

        