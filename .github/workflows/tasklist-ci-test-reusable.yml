# This GitHub Actions workflow automates the CI test process for the 'tasklist' service.
# It triggers on a `workflow_call` event and accepts inputs for branch name[required] and fork count[optional]
#
# It consists of a several steps:
# 1. Setup: It checks out the specified branch, sets up Java and Maven with the provided inputs, and imports secrets from Vault.
# 2. Tests: Runs unit and integration tests.
# 3. Reports: Publishes the test results, even if some steps failed.
#
# Environment variables are used to control CPU limits.
# This workflow is designed to provide a comprehensive, automated CI process that ensures code quality, handles secrets securely,
# and enables detailed reporting of test results.

# CI IT test reusable GitHub Actions Workflow
# Triggers on a workflow_call event and accepts inputs for branch name and fork count
# Performs integration tests for the tasklist service with parallel execution.

name: Tasklist CI IT test reusable

on:
  workflow_call:
    inputs:
      branch:
        description: "The branch name to be used for the workflow"
        required: true
        type: string
      forkCount:
        description: "The number of VMs to fork in parallel in order to execute the tests"
        required: false
        default: 4
        type: number

defaults:
  run:
    shell: bash

# Define environment variable for concurrency
env:
  LIMITS_CPU: ${{ inputs.forkCount }}  # consumed by `maven-surefire-plugin` & `maven-failsafe-plugin` plugins defined in main `pom.xml` file

jobs:
  integration-tests:
    name: Test
    runs-on: gcp-perf-core-16-default
    strategy:
      fail-fast: false
      matrix:
        database: [ elasticsearch, opensearch ]
        include:
          - database: elasticsearch
            testProfile: docker-es
            url: http://localhost:9200
          - database: opensearch
            testProfile: docker-os
            url: http://localhost:9200
    env:
      ZEEBE_TEST_DOCKER_IMAGE: localhost:5000/camunda/zeebe
      ZEEBE_TEST_DOCKER_IMAGE_TAG: current-test
    services:
      # local registry is used as this job needs to push its docker image to be used by IT
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      # Setup: checkout branch
      - name: Checkout '${{ inputs.branch }}' branch
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          ref: refs/heads/${{ inputs.branch }}
          fetch-depth: 0 # fetches all history for all branches and tags

      # Setup: configure Java, Maven, settings.xml
      - uses: ./.github/actions/setup-build
        name: Build setup
        with:
          java-distribution: adopt
          maven-cache-key-modifier: tasklist-tests
          maven-version: 3.8.6
          vault-address: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
      - uses: ./.github/actions/build-zeebe
        id: build-camunda
        with:
          maven-extra-args: -PskipFrontendBuild
      - uses: ./.github/actions/build-platform-docker
        id: build-camunda-docker
        with:
          # we use a local registry for pushing
          repository: ${{ env.ZEEBE_TEST_DOCKER_IMAGE }}
          distball: ${{ steps.build-camunda.outputs.distball }}
          version: ${{ env.ZEEBE_TEST_DOCKER_IMAGE_TAG }}
          # push is needed to make accessible for integration tests
          push: true

      # Run integration tests in parallel
      - name: Run Integration Tests
        run: |
          ./mvnw verify \
            -f tasklist \
            -T${{ env.LIMITS_CPU }} \
            -P ${{ matrix.testProfile }},skipFrontendBuild \
            -B --fail-at-end \
            -Dfailsafe.rerunFailingTestsCount=2 \
            -Dcamunda.tasklist.database=${{ matrix.database }} \
            -Dcamunda.database.url=${{ matrix.url }} \
            -Dzeebe.currentVersion.docker.tag=${{ env.ZEEBE_TEST_DOCKER_IMAGE_TAG }} \
            -Dzeebe.currentVersion.docker.repo=${{ env.ZEEBE_TEST_DOCKER_IMAGE }}

      # Sanitize the branch name to replace non alphanumeric characters with `-`
      - id: sanitize
        uses: camunda/infra-global-github-actions/sanitize-branch-name@main
        with:
          branch: ${{ inputs.branch }}
          max_length: '50'

      - name: Upload failed test results
        uses: ./.github/actions/collect-test-artifacts
        if: failure()
        with:
          name: tasklist-test-results-${{ matrix.database }}
          path: |
            **/failsafe-reports/
            **/surefire-reports/
          retention-days: 1

      # Upload JaCoCo report
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        if: ${{ (success() || failure()) }}
        with:
          name: jacoco-report-${{ steps.sanitize.outputs.branch_name }}-${{ matrix.database }}
          path: ${{ github.workspace }}/test-coverage/target/site/jacoco-aggregate/
          retention-days: 2

      # Send metrics about CI health
      - name: Observe build status
        if: always()
        continue-on-error: true
        uses: ./.github/actions/observe-build-status
        with:
          build_status: ${{ job.status }}
          secret_vault_secretId: ${{ secrets.VAULT_SECRET_ID }}
          secret_vault_address: ${{ secrets.VAULT_ADDR }}
          secret_vault_roleId: ${{ secrets.VAULT_ROLE_ID }}
