# type: Preview Environment
# owner: @camunda/monorepo-devops-team
---
name: Preview Environment Build and Deploy

on:
  pull_request:
    types: [labeled, synchronize]

# Limit workflow to 1 concurrent run per ref (branch): new commit -> old runs are canceled to save costs
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}

defaults:
  run:
    # use bash shell by default to ensure pipefail behavior is the default
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

jobs:
  build-optimize:
    if: >
      github.event.pull_request.state != 'closed' && (
        contains(github.event.label.name, 'deploy-preview') ||
        contains(github.event.pull_request.labels.*.name, 'deploy-preview')
      )
    name: Optimize Build
    uses: ./.github/workflows/optimize-ci-build-reusable.yml
    secrets: inherit
    with:
      branch: ${{ github.head_ref }}
      pushDocker: true

  deploy-preview:
    name: Deploy Preview Environment C8SM
    needs:
    - build-optimize
    # permission needed for the camunda/infra-global-github-actions/preview-env/create
    # action to have access to Kubernetes events
    permissions:
      contents: read
      deployments: write
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
    #########################################################################
    # Sanitize the branch name to remove dependabot/,renovate/ and transform the name
    - id: sanitize
      uses: camunda/infra-global-github-actions/sanitize-branch-name@main
      with:
        branch: ${{ github.head_ref }}
        max_length: '15'

    #########################################################################
    # Setup: import secrets from vault
    - name: Import secrets
      id: secrets
      uses: hashicorp/vault-action@4c06c5ccf5c0761b6029f56cfb1dcf5565918a3b # v3.4.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        secrets: |
          secret/data/products/camunda/ci/camunda ARGOCD_TOKEN;

    #########################################################################
    # Setup: checkout code. This is required because we are using
    # composite actions and deployment manifests.
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    #########################################################################
    # Determine the argocd arguments that need to be passed to the create app command
    - name: Determine Argocd Arguments for c8sm
      shell: bash
      run: |
        echo "argocd_arguments=--dest-namespace ${app_name} \
          --file .ci/preview-environments/argo/c8sm.yml \
          --helm-set global.preview.git.branch=${revision} \
          --helm-set global.preview.ingress.domain=camunda.camunda.cloud \
          --helm-set camunda-platform.optimize.image.tag=${docker_tag} \
          --name ${app_name} \
          --revision ${revision} \
          --helm-set git.branch=${revision} \
          --upsert" >> "$GITHUB_ENV"
      env:
        docker_tag: "pr-${{ github.event.pull_request.head.sha }}"
        revision: ${{ github.head_ref }}
        app_name: camunda-${{ steps.sanitize.outputs.branch_name }}

    #########################################################################
    # Create a preview environment
    - name: Deploy Preview Environment for c8sm
      uses: camunda/infra-global-github-actions/preview-env/create@main
      with:
        revision: ${{ github.head_ref }}
        argocd_token: ${{ steps.secrets.outputs.ARGOCD_TOKEN }}
        app_name: camunda-${{ steps.sanitize.outputs.branch_name }}
        app_url: https://${{ steps.sanitize.outputs.branch_name }}.camunda.camunda.cloud
        argocd_arguments: ${{ env.argocd_arguments }}
        argocd_server: argocd.int.camunda.com
        argocd_wait_for_sync_timeout: "1800" # waits up to 30 minutes
        github_token: ${{ secrets.GITHUB_TOKEN }}

  clean:
    if: always() && needs.deploy-preview.result != 'skipped' && needs.deploy-preview.result != 'cancelled'
    name: Clean Preview Environment
    needs: [deploy-preview]
    uses: camunda/camunda/.github/workflows/preview-env-clean.yml@main
    secrets: inherit
    with:
      pull-request: ${{ github.event.pull_request.number }}

  comment:
    if: always() && needs.deploy-preview.result != 'skipped' && needs.deploy-preview.result != 'cancelled'
    name: Create Deployment Result Summary
    runs-on: ubuntu-latest
    needs: [deploy-preview]
    steps:
    - uses: camunda/infra-global-github-actions/preview-env/comment@main
