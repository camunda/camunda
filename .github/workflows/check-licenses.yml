---
name: Check Licenses

# owner: @camunda/monorepo-devops-team

on:
  push:
    branches:
    - main
    - stable/*
    tags:
    - '*'
  pull_request:
    types:
    - opened
    - synchronize

jobs:
  analyze:
    name: Analyze dependencies
    permissions: {}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # The matrix is necessary to run separate analyses
      matrix:
        project:
        - name: c8run
          path: ./c8run
        - name: optimize
          path: ./optimize
          maven-config: |
            -DskipQaBuild=true
        - name: single-app
          path: ./
          maven-config: |
            -Dquickly=true
            -DskipQaBuild=true
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
    # Import FOSSA_API_KEY secret from Vault
    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v3.3.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        secrets: |
          secret/data/products/camunda/ci/camunda FOSSA_API_KEY;
    - uses: ./.github/actions/setup-build
      if: contains(fromJson('["optimize", "single-app"]'), matrix.project.name)
      with:
        vault-address: ${{ secrets.VAULT_ADDR }}
        vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
        vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
    - uses: actions/setup-go@v5
      if: matrix.project.name == 'c8run'
      with:
        go-version: '>=1.23.1'
        cache: false  # disabling since not working anyways without a cache-dependency-path specified
    - name: Update Maven configs
      if: matrix.project.maven-config != ''
      env:
        MAVEN_CONFIG: ${{ matrix.project.maven-config }}
      run: |
        echo "${MAVEN_CONFIG}" | tee ./.mvn/maven.config
    - name: Setup fossa-cli
      uses: camunda/infra-global-github-actions/fossa/setup@e69e67a1f623d13e474bdf0362de5750e4bb9062
    - name: Get context info
      id: info
      uses: camunda/infra-global-github-actions/fossa/info@e69e67a1f623d13e474bdf0362de5750e4bb9062
    - name: Adjust pom.xml files for FOSSA
      if: contains(fromJson('["optimize", "single-app"]'), matrix.project.name)
      run: |
        # The bom/pom.xml must be the actual root, otherwise, FOSSA won't detect the hierarchy correctly
        yq -i \
          '.project.modules.module += "./.."' \
          parent/pom.xml
        yq -i \
          '.project.modules.module += "./../parent"' \
          bom/pom.xml
        # Remove bom and parent from the list of modules of ./pom.xml
        yq -i \
          'del(.project.modules.module[] | select(. == "bom" or . == "parent"))' \
          pom.xml
        # Remove optimize/qa module as a bug in FOSSA prevents scope filtering
        # TODO remove this workaround once FOSSA is fixed
        yq -i \
          'del(.project.modules.module[] | select(. == "qa"))' \
          optimize/pom.xml
    - name: Analyze project
      uses: camunda/infra-global-github-actions/fossa/analyze@e69e67a1f623d13e474bdf0362de5750e4bb9062
      with:
        api-key: ${{ steps.secrets.outputs.FOSSA_API_KEY }}
        branch: ${{  steps.info.outputs.head-ref }}
        path: ${{ matrix.project.path }}
        revision-id: ${{ steps.info.outputs.head-revision }}
    # PR-only: Check for newly introduced license issues
    # This step only fails if the PR introduces new license violations.
    # It does not fail for pre-existing issues already present in the base branch.
    - name: Check Pull Request for new License Issues
      if: steps.info.outputs.is-pull-request == 'true'
      uses: camunda/infra-global-github-actions/fossa/pr-check@e69e67a1f623d13e474bdf0362de5750e4bb9062
      with:
        api-key: ${{ steps.secrets.outputs.FOSSA_API_KEY }}
        base-ref: ${{ steps.info.outputs.base-ref }}
        # Use the most recent base commit with a FOSSA scan for comparison.
        # If none is found, fall back to the original base commit â€” this will cause the check to fail.
        base-revision: >-
          ${{
            steps.info.outputs.base-revision-most-recent-with-scanning-results || 
            steps.info.outputs.base-revision
          }}
        path: ${{ matrix.project.path }}
        project: ${{ matrix.project.name }}
        revision: ${{ steps.info.outputs.head-revision }}
