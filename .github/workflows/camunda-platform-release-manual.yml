---
name: Camunda Platform Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'releaseVersion:'
        type: string
        required: true
      nextDevelopmentVersion:
        description: 'nextDevelopmentVersion: e.g. 8.X.X-SNAPSHOT'
        type: string
        required: true
      isLatest:
        description: 'isLatest: updates the `latest` docker tag'
        type: boolean
        required: false
        default: false
      releaseBranch:
        description: 'releaseBranch: defaults to `release-$releaseVersion` if not set'
        type: string
        required: false
        default: ''
      dryRun:
        description: 'dryRun: Whether to perform a dry release where no changes/artifacts are pushed'
        type: boolean
        required: true
        default: false

concurrency:
  # cannot use the inputs context here as on this level only the github context is accessible, see
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
  group: ${{ github.event.inputs.releaseBranch != '' && github.event.inputs.releaseBranch || format('release-{0}', github.event.inputs.releaseVersion) }}
  cancel-in-progress: true

jobs:
  run-release:
    name: "Release ${{ inputs.releaseVersion }} from ${{ inputs.releaseBranch }}"
    uses: ./.github/workflows/camunda-platform-release.yml
    secrets: inherit
    with:
      releaseBranch: ${{ inputs.releaseBranch }}
      releaseVersion: ${{ inputs.releaseVersion }}
      nextDevelopmentVersion: ${{ inputs.nextDevelopmentVersion }}
      isLatest: ${{ inputs.isLatest }}
      dryRun: ${{ inputs.dryRun }}

  notify-if-failed:
    name: Send Slack notification on failure
    runs-on: ubuntu-latest
    needs: [run-release]
    # if it's a dry run => no slack notification (remove noise in slack due to manual testing)
    # else => send slack notification as an actual release failed
    if: ${{ failure() && inputs.dryRun == false }}
    timeout-minutes: 5
    permissions: {}  # GITHUB_TOKEN unused in this job
    steps:
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3.3.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/camunda/ci/github-actions SLACK_TOPMONOREPORELEASE_WEBHOOK_URL;

      - name: Send failure Slack notification
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          webhook: ${{ steps.secrets.outputs.SLACK_TOPMONOREPORELEASE_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          # For posting a rich message using Block Kit
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":alarm: *Release job for ${{ inputs.releaseVersion }}* failed!\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please check this <https://github.com/camunda/camunda/actions/runs/${{ github.run_id }}|GHA workflow run>."
                  }
                }
              ]
            }
