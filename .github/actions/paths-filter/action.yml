---
name: Common paths filter for camunda/camunda

# owner: @camunda/monorepo-devops-team

description: |
  Common filters to detect and group changes against a base branch
  It leverages the `dorny/paths-filter` action to filter paths
  Said third-party action uses picomatch patterns to filter paths

outputs:
  actionlint:
    description: Output whether `actionlint` should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true'
      }}
  commitlint:
    description: Output whether commit messages should be linted based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'pull_request' &&
        !contains(github.event.pull_request.labels.*.name, 'ci:ignore-commitlint') &&
        steps.filter-special-branch.outputs.release-branch != 'true'
      }}
  maven-spotless-linter:
    description: Output whether jobs depending on files relevant for Maven spotless should be run, related checks are based on GitHub events and file changes
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-common.outputs.java-code-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true' ||
        steps.filter-common.outputs.markdown-change == 'true'
      }}
  java-code-changes:
    description: Output whether jobs depending on Java code changes should be run, related checks are based on GitHub events and java files changes
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-common.outputs.java-code-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true'
      }}
  identity-frontend-tests:
    description: Output whether Identity frontend tests should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-identity.outputs.identity-frontend-change == 'true'
      }}
  operate-backend-changes:
    description: Output whether Operate backend build should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-operate.outputs.operate-backend-change == 'true' ||
        steps.filter-common.outputs.webapps-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true' ||
        steps.filter-common.outputs.dockerfile-change == 'true'
      }}
  tasklist-frontend-changes:
    description: Output whether Tasklist frontend tests should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-tasklist.outputs.tasklist-frontend-change == 'true'
      }}
  tasklist-backend-changes:
    description: Output whether Tasklist backend build should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-tasklist.outputs.tasklist-backend-change == 'true' ||
        steps.filter-common.outputs.webapps-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true' ||
        steps.filter-common.outputs.dockerfile-change == 'true'
      }}
  optimize-frontend-changes:
    description: Output whether Optimize frontend tests should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-optimize.outputs.optimize-frontend-change == 'true'
      }}
  optimize-backend-changes:
    description: Output whether Optimize backend tests should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-optimize.outputs.optimize-backend-change == 'true' ||
        steps.filter-common.outputs.webapps-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true'
      }}
  camunda-docker-tests:
    description: Output whether Camunda Docker tests should be run based on GitHub event and files changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-common.outputs.java-code-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true' ||
        steps.filter-common.outputs.dockerfile-change == 'true' ||
        steps.filter-common.outputs.frontend-change == 'true'
      }}
  frontend-changes:
    description: Output whether any frontend has changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-common.outputs.frontend-change == 'true' ||
        steps.filter-identity.outputs.frontend-identity == 'true'
      }}
  zeebe-changes:
    description: Output whether any Zeebe code has changed
    value: >-
      ${{
        github.event_name == 'push' ||
        steps.filter-common.outputs.github-actions-change == 'true' ||
        steps.filter-common.outputs.webapps-change == 'true' ||
        steps.filter-common.outputs.maven-change == 'true' ||
        steps.filter-zeebe.outputs.zeebe-change == 'true'
      }}
  protobuf-changes:
    description: Output whether any Protobuf files have changed
    value: >-
      ${{
        github.event_name == 'push' ||
        (steps.filter-common.outputs.protobuf-change == 'true' && github.event_name != 'schedule')
      }}
  stable-branch-changes:
    description: Output whether the change is occurring on a stable/X.Y branch or not
    value: >-
      ${{
        github.event_name == 'push' &&
        steps.filter-special-branch.outputs.stable-branch == 'true'
      }}

runs:
  using: composite
  steps:

  - uses: dorny/paths-filter@v3
    id: filter-common
    with:
      base: ${{ github.event.merge_group.base_ref || '' }}
      ref: ${{ github.event.merge_group.head_ref || github.ref }}
      filters: |
        github-actions-change:
          - '.github/actions/**'
          - '.github/workflows/**'
          - '.github/actionlint*'
          - '.github/conftest-*.rego'

        # We use specific src/main and src/test path to:
        #  * react on java code (production + test) changes
        #  * react on resource changes like bpmn, XML, etc.
        #  * but _not_ react on frontend src folder changes
        java-code-change:
          - '**/src/main/**'
          - '**/src/test/**'

        maven-change:
          - 'bom/**'
          - 'build-tools/**'
          - 'dist/**'
          - 'parent/**'
          - '**/pom.xml'

        dockerfile-change:
          - 'Dockerfile'
          - '*.Dockerfile'

        markdown-change:
          - '**/*.md'

        webapps-change:
          - 'webapps-backup/**'
          - 'webapps-common/**'
          - 'webapps-schema/**'

        frontend-change:
          - 'operate/client/**'
          - 'tasklist/client/**'
          - 'identity/client/**'
          - 'optimize/client/**'

        protobuf-change:
          - '**/*.proto'
          - 'buf.yaml'

  - uses: dorny/paths-filter@v3
    id: filter-identity
    with:
      base: ${{ github.event.merge_group.base_ref || '' }}
      ref: ${{ github.event.merge_group.head_ref || github.ref }}
      filters: |
        identity-frontend-change:
          - 'identity/client/**'

  - uses: dorny/paths-filter@v3
    id: filter-zeebe
    with:
      base: ${{ github.event.merge_group.base_ref || '' }}
      ref: ${{ github.event.merge_group.head_ref || github.ref }}
      filters: |
        zeebe-change:
          - 'zeebe/**'
          - 'clients/**'
          - 'Dockerfile'

  - uses: dorny/paths-filter@v3
    id: filter-operate
    with:
      base: ${{ github.event.merge_group.base_ref || '' }}
      ref: ${{ github.event.merge_group.head_ref || github.ref }}
      filters: |
        operate-backend-change:
          - 'operate/!(client/**)/**'

  - uses: dorny/paths-filter@v3
    id: filter-tasklist
    with:
      base: ${{ github.event.merge_group.base_ref || '' }}
      ref: ${{ github.event.merge_group.head_ref || github.ref }}
      filters: |
        tasklist-backend-change:
          - 'tasklist/!(client/**)/**'

        tasklist-frontend-change:
          - tasklist/client/**

  - uses: dorny/paths-filter@v3
    id: filter-optimize
    with:
      base: ${{ github.event.merge_group.base_ref || '' }}
      ref: ${{ github.event.merge_group.head_ref || github.ref }}
      filters: |
        optimize-backend-change:
          - optimize/backend/**
          - optimize/upgrade/**
          - optimize/util/**
          - optimize/plugins/**

        optimize-frontend-change:
          - optimize/client/**
          - optimize/c4/**
          - optimize/backend/src/main/resources/localization/**

  # only works `on: push` and `on: pull_request` GitHub trigger events
  - id: filter-special-branch
    shell: bash
    run: |
      if [[ $GITHUB_EVENT_NAME == 'push' ]]; then
        test_branch_name="$GITHUB_REF_NAME"
      elif [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
        test_branch_name="$GITHUB_HEAD_REF"
      fi
      echo "Branch name: $test_branch_name"

      if [[ $test_branch_name =~ ^stable\/[0-9]+\.[0-9]+$ ]]; then
        echo "Stable branch: true"
        echo "stable-branch=true" >> "$GITHUB_OUTPUT"
      else
        echo "Stable branch: false"
        echo "stable-branch=false" >> "$GITHUB_OUTPUT"
      fi

      if [[ $test_branch_name =~ ^release.*$ ]]; then
        echo "Release branch: true"
        echo "release-branch=true" >> "$GITHUB_OUTPUT"
      else
        echo "Release branch: false"
        echo "release-branch=false" >> "$GITHUB_OUTPUT"
      fi
