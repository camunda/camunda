---
name: Flaky Tests Summary Comment

description: Creates or updates a PR comment with flaky test summary across all test jobs

inputs:
  flaky-tests-data:
    description: 'JSON array containing flaky test data from all jobs'
    required: true
  pr-number:
    description: 'Pull request number for the comment'
    required: true
  branch-name:
    description: 'Branch name where the comment will be posted'
    required: true

runs:
  using: composite
  steps:
    - name: Flaky Tests Summary Comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          const flakyTestsDataInput = `${{ inputs.flaky-tests-data }}`;

          if (!flakyTestsDataInput) {
            console.log('[flaky-tests] No flaky tests data provided - skipping flaky summary comment.');
            return;
          }

          let flakyTestsData;
          try {
            flakyTestsData = JSON.parse(flakyTestsDataInput);
            console.log('Received flaky tests data:', flakyTestsData);
          } catch (error) {
            console.error('[flaky-tests] Failed to parse flaky tests data:', error.message);
            return;
          }

          // Exit if no flaky tests found
          if (!Array.isArray(flakyTestsData) || flakyTestsData.length === 0) {
            console.log('[flaky-tests] No flaky tests found - skipping flaky summary comment.');
            return;
          }

          // Step 1: Process and structure the flaky test data
          const { processFlakyTestsData } = require('./.github/actions/flaky-tests-summary-comment/src/flaky-tests-data-processor');
          const processedData = processFlakyTestsData(flakyTestsData);
          console.log('[flaky-tests] Processed data:', JSON.stringify(processedData, null, 2));

          // Step 2: Generate and post the PR comment
          const { main } = require('./.github/actions/flaky-tests-summary-comment/src/flaky-tests-comment-generator');
          console.log('[flaky-tests] Generating comment...');
          await main(context, github, processedData, ${{ inputs.pr-number }}, '${{ inputs.branch-name }}');
