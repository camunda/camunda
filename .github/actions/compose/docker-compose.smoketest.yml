services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-8.13.0}
    environment:
      - TZ=Europe/Berlin
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - cluster.name=elasticsearch
      - action.destructive_requires_name=false
      # We usually run our integration tests concurrently, as some cleanup methods like #deleteAllOptimizeData
      # internally make usage of scroll contexts this lead to hits on the scroll limit.
      # Thus this increased scroll context limit.
      - search.max_open_scroll_context=1000
      - http.port=9200
      - ES_JAVA_OPTS=-Xms${ELASTIC_JVM_MEMORY:-1}g -Xmx${ELASTIC_JVM_MEMORY:-1}g
      - path.repo=/var/tmp
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:9200/_cat/health | grep -qE 'green|yellow'",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    volumes:
      - /var/tmp:/var/tmp
  optimize:
    container_name: optimize
    image: registry.camunda.cloud/team-optimize/optimize:${OPTIMIZE_IMAGE_TAG:-8-latest}
    environment:
      - TZ=Europe/Berlin
      - OPTIMIZE_API_ACCESS_TOKEN=secret
      - OPTIMIZE_SUPER_USER_IDS=[demo]
      - OPTIMIZE_JAVA_OPTS=-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m
      - OPTIMIZE_ELASTICSEARCH_HOST=elasticsearch
      - OPTIMIZE_ELASTICSEARCH_HTTP_PORT=9200
      - WAIT_FOR=elasticsearch:9200
      - WAIT_FOR_TIMEOUT=300
      - SPRING_PROFILES_ACTIVE=ccsm
      - ZEEBE_IMPORT_ENABLED=true
      - CAMUNDA_OPTIMIZE_ZEEBE_ENABLED=true
      - CAMUNDA_OPTIMIZE_IDENTITY_ISSUER_URL=http://localhost:18080/auth/realms/camunda-platform
      - CAMUNDA_OPTIMIZE_IDENTITY_ISSUER_BACKEND_URL=http://keycloak:8080/auth/realms/camunda-platform
      - CAMUNDA_OPTIMIZE_IDENTITY_CLIENTID=optimize
      - CAMUNDA_OPTIMIZE_IDENTITY_CLIENTSECRET=XALaRPl5qwTEItdwCMiPS62nVpKs7dL7
      - CAMUNDA_OPTIMIZE_IDENTITY_AUDIENCE=optimize-api
      - CAMUNDA_OPTIMIZE_SECURITY_AUTH_COOKIE_SAME_SITE_ENABLED=false
      - CAMUNDA_OPTIMIZE_ENTERPRISE=false
      - CAMUNDA_OPTIMIZE_ZEEBE_NAME=zeebe-record
      - CAMUNDA_OPTIMIZE_ZEEBE_PARTITION_COUNT=2
      - CAMUNDA_OPTIMIZE_IDENTITY_BASE_URL=http://localhost:8081/
      - CAMUNDA_OPTIMIZE_API_AUDIENCE=optimize
      - CAMUNDA_OPTIMIZE_IMPORT_DATA_SKIP_DATA_AFTER_NESTED_DOC_LIMIT_REACHED=true
      # This should only be set if you plan to use JWTs for the public API rather than a statically configured token
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/auth/realms/camunda-platform/protocol/openid-connect/certs
      - OPTIMIZE_LOG_LEVEL=DEBUG
    depends_on:
      - zeebe
      - identity
      - elasticsearch
    ports:
      - 8090:8090
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -q -f -I http://localhost:8090/api/readyz | grep -q 'HTTP/1.1 200'",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
  zeebe:
    image: camunda/zeebe:${ZEEBE_VERSION:-latest}
    container_name: zeebe
    environment:
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
    ports:
      - "26500:26500"
      - "9600:9600"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1",
        ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    volumes:
      - ../../../optimize/zeebe-application.yml:/usr/local/zeebe/config/application.yaml
    depends_on:
      - elasticsearch
  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:26.1.2@sha256:f7fbc4e9270e11fff1f8cf08e29bfb39bdf9e7866de731d7368cdfcfb6501d50
    ports:
      - "18080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    environment:
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_DATABASE_VENDOR: dev-file
      KEYCLOAK_HTTP_RELATIVE_PATH: /auth
  identity:
    depends_on:
      - keycloak
    restart: on-failure
    container_name: identity
    image: camunda/identity:${IDENTITY_VERSION:-latest}
    ports:
      - "8081:8081"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "--tries=1",
          "--spider",
          "http://localhost:8082/actuator/health",
        ]
      interval: 5s
      timeout: 15s
      retries: 30
      start_period: 60s
    environment:
      SERVER_PORT: 8081
      KEYCLOAK_URL: http://keycloak:8080/auth
      IDENTITY_AUTH_PROVIDER_BACKEND_URL: http://keycloak:8080/auth/realms/camunda-platform
      KEYCLOAK_INIT_OPTIMIZE_SECRET: XALaRPl5qwTEItdwCMiPS62nVpKs7dL7
      KEYCLOAK_INIT_OPTIMIZE_ROOT_URL: http://localhost:8090
      KEYCLOAK_USERS_0_USERNAME: "demo"
      KEYCLOAK_USERS_0_PASSWORD: "demo"
      KEYCLOAK_USERS_0_EMAIL: "demo@demo.com"
      KEYCLOAK_USERS_0_FIRST_NAME: "demo"
      KEYCLOAK_USERS_0_ROLES_0: "Optimize"
      KEYCLOAK_USERS_0_ROLES_1: "Identity"
