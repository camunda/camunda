# Group endpoints
/groups:
  post:
    tags:
      - Group
    operationId: createGroup
    summary: Create group
    description: Create a new group.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../schemas/groups/group-models.yaml#/GroupCreateRequest'
    responses:
      "201":
        description: The group was created successfully.
        content:
          application/json:
            schema:
              $ref: '../schemas/groups/group-models.yaml#/GroupCreateResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/groups/search:
  post:
    tags:
      - Group
    operationId: searchGroups
    summary: Search groups
    description: Search for groups based on given criteria.
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/groups/group-models.yaml#/GroupSearchQueryRequest'
    responses:
      "200":
        description: The groups search result.
        content:
          application/json:
            schema:
              $ref: '../schemas/groups/group-models.yaml#/GroupSearchQueryResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        description: An internal error occurred while processing the request.
    x-eventually-consistent: true

/groups/{groupId}:
  get:
    tags:
      - Group
    operationId: getGroup
    summary: Get group
    description: Get a group by its ID.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    responses:
      "200":
        description: The group is successfully returned.
        content:
          application/json:
            schema:
              $ref: '../schemas/groups/group-models.yaml#/GroupResult'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

  put:
    tags:
      - Group
    operationId: updateGroup
    summary: Update group
    description: Update a group with the given ID.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/groups/group-models.yaml#/GroupUpdateRequest'
    responses:
      "200":
        description: The group was updated successfully.
        content:
          application/json:
            schema:
              $ref: '../schemas/groups/group-models.yaml#/GroupUpdateResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

  delete:
    tags:
      - Group
    operationId: deleteGroup
    summary: Delete group
    description: Deletes the group with the given ID.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    responses:
      "204":
        description: The group was deleted successfully.
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/groups/{groupId}/users/{username}:
  put:
    tags:
      - Group
    operationId: assignUserToGroup
    summary: Assign a user to a group
    description: |
      Assigns a user to a group, making the user a member of the group.
      Group members inherit the group authorizations, roles, and tenant assignments.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
      - name: username
        in: path
        required: true
        description: The user username.
        schema:
          $ref: '../schemas/common/identifiers.yaml#/Username'
    responses:
      "204":
        description: The user was assigned successfully to the group.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group or user with the given ID or username was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "409":
        description: The user with the given ID is already assigned to the group.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

  delete:
    tags:
      - Group
    operationId: unassignUserFromGroup
    summary: Unassign a user from a group
    description: |
      Unassigns a user from a group.
      The user is removed as a group member, with associated authorizations, roles, and tenant assignments no longer applied.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
      - name: username
        in: path
        required: true
        description: The user username.
        schema:
          $ref: '../schemas/common/identifiers.yaml#/Username'
    responses:
      "204":
        description: The user was unassigned successfully from the group.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group or user with the given ID was not found, or the user is not assigned to this group.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/groups/{groupId}/users/search:
  post:
    tags:
      - Group
    operationId: searchUsersForGroup
    summary: Search group users
    description: Search users assigned to a group.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/groups/group-models.yaml#/GroupUserSearchQueryRequest'
    responses:
      "200":
        description: The users assigned to the group.
        content:
          application/json:
            schema:
              $ref: '../schemas/groups/group-models.yaml#/GroupUserSearchResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/groups/{groupId}/clients/{clientId}:
  put:
    tags:
      - Group
    operationId: assignClientToGroup
    summary: Assign a client to a group
    description: |
      Assigns a client to a group, making it a member of the group.
      Members of the group inherit the group authorizations, roles, and tenant assignments.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        description: The client ID.
        schema:
          type: string
    responses:
      "204":
        description: The client was assigned successfully to the group.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "409":
        description: The client with the given ID is already assigned to the group.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

  delete:
    tags:
      - Group
    operationId: unassignClientFromGroup
    summary: Unassign a client from a group
    description: |
      Unassigns a client from a group.
      The client is removed as a group member, with associated authorizations, roles, and tenant assignments no longer applied.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        description: The client ID.
        schema:
          type: string
    responses:
      "204":
        description: The client was unassigned successfully from the group.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found, or the client is not assigned to this group.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/groups/{groupId}/clients/search:
  post:
    tags:
      - Group
    operationId: searchClientsForGroup
    summary: Search group clients
    description: Search clients assigned to a group.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/groups/group-models.yaml#/GroupClientSearchQueryRequest'
    responses:
      "200":
        description: The clients assigned to the group.
        content:
          application/json:
            schema:
              $ref: '../schemas/groups/group-models.yaml#/GroupClientSearchResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/groups/{groupId}/mapping-rules/{mappingRuleId}:
  put:
    tags:
      - Group
    operationId: assignMappingRuleToGroup
    summary: Assign a mapping rule to a group
    description: Assigns a mapping rule to a group.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
      - name: mappingRuleId
        in: path
        required: true
        description: The mapping rule ID.
        schema:
          type: string
    responses:
      "204":
        description: The mapping rule was assigned successfully to the group.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group or mapping rule with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "409":
        description: The mapping rule with the given ID is already assigned to the group.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

  delete:
    tags:
      - Group
    operationId: unassignMappingRuleFromGroup
    summary: Unassign a mapping rule from a group
    description: Unassigns a mapping rule from a group.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
      - name: mappingRuleId
        in: path
        required: true
        description: The mapping rule ID.
        schema:
          type: string
    responses:
      "204":
        description: The mapping rule was unassigned successfully from the group.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group or mapping rule with the given ID was not found, or the mapping rule is not assigned to this group.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/groups/{groupId}/mapping-rules/search:
  post:
    tags:
      - Group
    operationId: searchMappingRulesForGroup
    summary: Search group mapping rules
    description: Search mapping rules assigned to a group.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/search/search-models.yaml#/SearchQueryRequest'
    responses:
      "200":
        description: The mapping rules assigned to the group.
        content:
          application/json:
            schema:
              $ref: '../schemas/search/search-models.yaml#/SearchQueryResponse'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/groups/{groupId}/roles/search:
  post:
    tags:
      - Group
    operationId: searchRolesForGroup
    summary: Search group roles
    description: Search roles assigned to a group.
    parameters:
      - name: groupId
        in: path
        required: true
        description: The group ID.
        schema:
          type: string
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/search/search-models.yaml#/SearchQueryRequest'
    responses:
      "200":
        description: The roles assigned to the group.
        content:
          application/json:
            schema:
              $ref: '../schemas/search/search-models.yaml#/SearchQueryResponse'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The group with the given ID was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true
