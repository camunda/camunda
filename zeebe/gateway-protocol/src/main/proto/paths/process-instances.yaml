# Process instance endpoints
/process-instances:
  post:
    tags:
      - Process instance
    operationId: createProcessInstance
    summary: Create process instance
    description: |
      Creates and starts an instance of the specified process.
      The process definition to use to create the instance can be specified either using its unique key
      (as returned by Deploy resources), or using the BPMN process ID and a version.

      Waits for the completion of the process instance before returning a result
      when awaitCompletion is enabled.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceCreationInstruction'	
          examples:
            By process definition key:
              summary: Create a process instance by processDefinitionKey.
              value:
                processDefinitionKey: "12345543223453245"
                variables: {}
            By process definition ID:
              summary: Create a process instance by processDefinitionId and version.
              value:
                processDefinitionId: my-business-process
                processDefinitionVersion: 1
                variables: {}
    responses:
      "200":
        description: The process instance was created.
        content:
          application/json:
            schema:
              $ref: '../schemas/processes/process-instance-models.yaml#/CreateProcessInstanceResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
      "504":
        description: |
          The process instance creation request timed out in the gateway.
          This can happen if the `awaitCompletion` request parameter is set to `true`
          and the created process instance did not complete within the defined request timeout.
          This often happens when the created instance is not fully automated or contains wait states.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
    x-eventually-consistent: false

/process-instances/{processInstanceKey}:
  get:
    tags:
      - Process instance
    operationId: getProcessInstance
    summary: Get process instance
    description: Get the process instance by the process instance key.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The process instance key.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    responses:
      "200":
        description: The process instance is successfully returned.
        content:
          application/json:
            schema:
              $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The process instance with the given key was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/{processInstanceKey}/sequence-flows:
  get:
    tags:
      - Process instance
    operationId: getProcessInstanceSequenceFlows
    summary: Get process instance sequence flows
    description: Get sequence flows taken by the process instance.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The assigned key of the process instance, which acts as a unique identifier for this process instance.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    responses:
      "200":
        description: The process instance sequence flows result.
        content:
          application/json:
            schema:
              $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceSequenceFlowsQueryResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/{processInstanceKey}/statistics/element-instances:
  get:
    tags:
      - Process instance
    operationId: getProcessInstanceStatistics
    summary: Get process instance statistics
    description: Get statistics about elements by the process instance key.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The assigned key of the process instance, which acts as a unique identifier for this process instance.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    responses:
      "200":
        description: The process instance statistics result.
        content:
          application/json:
            schema:
              $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceElementStatisticsQueryResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/search:
  post:
    tags:
      - Process instance
    operationId: searchProcessInstances
    summary: Search process instances
    description: Search for process instances based on given criteria.
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceSearchQuery'
    responses:
      "200":
        description: The process instance search result.
        content:
          application/json:
            schema:
              $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceSearchQueryResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/{processInstanceKey}/incidents/search:
  post:
    tags:
      - Process instance
    operationId: searchProcessInstanceIncidents
    summary: Search for incidents associated with a process instance
    description: | 
      Search for incidents caused by the process instance or any of its called process or decision instances.

      Although the `processInstanceKey` is provided as a path parameter to indicate the root process instance,
      you may also include a `processInstanceKey` within the filter object to narrow results to specific
      child process instances. This is useful, for example, if you want to isolate incidents associated with
      subprocesses or called processes under the root instance while excluding incidents directly tied to the root.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The assigned key of the process instance, which acts as a unique identifier for this process instance.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceIncidentSearchQuery'
    responses:
      "200":
        description: The process instance search result.
        content:
          application/json:
            schema:
              $ref: '../schemas/incidents/incident-models.yaml#/IncidentSearchQueryResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The process instance with the given key was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/{processInstanceKey}/incident-resolution:
  post:
    x-eventually-consistent: true
    tags:
      - Process instance
    operationId: resolveProcessInstanceIncidents
    summary: Resolve process instance incidents
    description: Creates a batch operation to resolve multiple incidents of a process instance.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The key of the process instance to resolve incidents for.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    responses:
      "200":
        description: The batch operation request for incident resolution was created.
        content:
          application/json:
            schema:
              $ref: '../schemas/batch-operations/batch-operation-models.yaml#/BatchOperationCreatedResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "404":
        description: The process instance is not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'

/process-instances/{processInstanceKey}/cancellation:
  post:
    tags:
      - Process instance
    operationId: cancelProcessInstance
    summary: Cancel process instance
    description: Cancels a running process instance. As a cancelation includes more than just the removal of the process instance resource, the cancelation resource must be posted.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The key of the process instance to cancel.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/processes/process-instance-models.yaml#/CancelProcessInstanceRequest'
    responses:
      "204":
        description: The process instance is canceled.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "404":
        description: The process instance is not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/process-instances/cancellation:
  post:
    tags:
      - Process instance
    operationId: cancelProcessInstancesBatchOperation
    summary: Create a batch operation to cancel process instances
    description: |
      Cancels multiple running process instances.
      Since only ACTIVE root instances can be cancelled, any given filters for state and
      parentProcessInstanceKey are ignored and overridden during this batch operation.
      This is done asynchronously, the progress can be tracked using the batchOperationKey from the response and the batch operation status endpoint (/batch-operations/{batchOperationKey}).
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/batch-operations/batch-operation-models.yaml#/ProcessInstanceCancellationBatchOperationRequest'
    responses:
      "200":
        description: The batch operation request was created.
        content:
          application/json:
            schema:
              $ref: '../schemas/batch-operations/batch-operation-models.yaml#/BatchOperationCreatedResult'
      "400":
        description: >
          The process instance batch operation failed.
          More details are provided in the response body.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/incident-resolution:
  post:
    tags:
      - Process instance
    operationId: resolveIncidentsBatchOperation
    summary: Create a batch operation to resolve incidents of process instances
    description: |
      Resolves multiple instances of process instances.
      Since only process instances with ACTIVE state can have unresolved incidents, any given
      filters for state are ignored and overridden during this batch operation.
      This is done asynchronously, the progress can be tracked using the batchOperationKey from the response and the batch operation status endpoint (/batch-operations/{batchOperationKey}).
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/batch-operations/batch-operation-models.yaml#/ProcessInstanceIncidentResolutionBatchOperationRequest'
    responses:
      "200":
        description: The batch operation request was created.
        content:
          application/json:
            schema:
              $ref: '../schemas/batch-operations/batch-operation-models.yaml#/BatchOperationCreatedResult'
      "400":
        description: >
          The process instance batch operation failed.
          More details are provided in the response body.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/migration:
  post:
    tags:
      - Process instance
    operationId: migrateProcessInstancesBatchOperation
    summary: Create a batch operation to migrate process instances
    description: |
      Migrate multiple instances of process instances.
      Since only process instances with ACTIVE state can be migrated, any given
      filters for state are ignored and overridden during this batch operation.
      This is done asynchronously, the progress can be tracked using the batchOperationKey from the response and the batch operation status endpoint (/batch-operations/{batchOperationKey}).
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/batch-operations/batch-operation-models.yaml#/ProcessInstanceMigrationBatchOperationRequest'
    responses:
      "200":
        description: The batch operation request was created.
        content:
          application/json:
            schema:
              $ref: '../schemas/batch-operations/batch-operation-models.yaml#/BatchOperationCreatedResult'
      "400":
        description: >
          The process instance batch operation failed.
          More details are provided in the response body.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/modification:
  post:
    tags:
      - Process instance
    operationId: modifyProcessInstancesBatchOperation
    summary: Create a batch operation to modify process instances
    description: |
      Modify multiple process instances.
      Since only process instances with ACTIVE state can be modified, any given
      filters for state are ignored and overridden during this batch operation.
      In contrast to single modification operation, it is not possible to add variable instructions or modify by element key.
      It is only possible to use the element id of the source and target.
      This is done asynchronously, the progress can be tracked using the batchOperationKey from the response and the batch operation status endpoint (/batch-operations/{batchOperationKey}).
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/batch-operations/batch-operation-models.yaml#/ProcessInstanceModificationBatchOperationRequest'
    responses:
      "200":
        description: The batch operation request was created.
        content:
          application/json:
            schema:
              $ref: '../schemas/batch-operations/batch-operation-models.yaml#/BatchOperationCreatedResult'
      "400":
        description: >
          The process instance batch operation failed.
          More details are provided in the response body.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/process-instances/{processInstanceKey}/migration:
  post:
    tags:
      - Process instance
    operationId: migrateProcessInstance
    summary: Migrate process instance
    description: |
      Migrates a process instance to a new process definition.
      This request can contain multiple mapping instructions to define mapping between the active
      process instance's elements and target process definition elements.

      Use this to upgrade a process instance to a new version of a process or to
      a different process definition, e.g. to keep your running instances up-to-date with the
      latest process improvements.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The key of the process instance that should be migrated.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceMigrationInstruction'
    responses:
      "204":
        description: The process instance is migrated.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "404":
        description: The process instance is not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "409":
        description: >
          The process instance migration failed.
          More details are provided in the response body.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/process-instances/{processInstanceKey}/modification:
  post:
    tags:
      - Process instance
    operationId: modifyProcessInstance
    summary: Modify process instance
    description: |
      Modifies a running process instance.
      This request can contain multiple instructions to activate an element of the process or
      to terminate an active instance of an element.

      Use this to repair a process instance that is stuck on an element or took an unintended path.
      For example, because an external system is not available or doesn't respond as expected.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The key of the process instance that should be modified.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceModificationInstruction'
    responses:
      "204":
        description: The process instance is modified.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "404":
        description: The process instance is not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/process-instances/{processInstanceKey}/call-hierarchy:
  get:
    tags:
      - Process instance
    operationId: getProcessInstanceCallHierarchy
    summary: Get call hierarchy for process instance
    description: Returns the call hierarchy for a given process instance, showing its ancestry up to the root instance.
    parameters:
      - name: processInstanceKey
        in: path
        required: true
        description: The key of the process instance to fetch the hierarchy for.
        schema:
          $ref: '../schemas/common/keys.yaml#/ProcessInstanceKey'
    responses:
      "200":
        description: The call hierarchy is successfully returned.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/processes/process-instance-models.yaml#/ProcessInstanceCallHierarchyEntry'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The process instance is not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true
