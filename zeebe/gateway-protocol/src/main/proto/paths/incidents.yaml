# Incident endpoints
/incidents/search:
  post:
    tags:
      - Incident
    operationId: searchIncidents
    summary: Search incidents
    description: |
      Search for incidents based on given criteria.
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/incidents/incident-models.yaml#/IncidentSearchQuery'
    responses:
      "200":
        description: The incident search result.
        content:
          application/json:
            schema:
              $ref: '../schemas/incidents/incident-models.yaml#/IncidentSearchQueryResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/incidents/{incidentKey}:
  get:
    tags:
      - Incident
    operationId: getIncident
    summary: Get incident
    description: |
      Returns incident as JSON.
    parameters:
      - name: incidentKey
        in: path
        required: true
        description: The assigned key of the incident, which acts as a unique identifier for this incident.
        schema:
          $ref: '../schemas/common/keys.yaml#/IncidentKey'
    responses:
      "200":
        description: The incident is successfully returned.
        content:
          application/json:
            schema:
              $ref: '../schemas/incidents/incident-models.yaml#/IncidentResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "401":
        $ref: '../responses/common-responses.yaml#/Unauthorized'
      "403":
        $ref: '../responses/common-responses.yaml#/Forbidden'
      "404":
        description: The incident with the given key was not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: true

/incidents/{incidentKey}/resolution:
  post:
    tags:
      - Incident
    operationId: resolveIncident
    summary: Resolve incident
    description: |
      Marks the incident as resolved; most likely a call to Update job will be necessary
      to reset the job's retries, followed by this call.
    parameters:
      - name: incidentKey
        in: path
        required: true
        description: Key of the incident to resolve.
        schema:
          $ref: '../schemas/common/keys.yaml#/IncidentKey'
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/incidents/incident-models.yaml#/IncidentResolutionRequest'
    responses:
      "204":
        description: The incident is marked as resolved.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "404":
        description: The incident with the incidentKey is not found.
        content:
          application/problem+json:
            schema:
              $ref: '../schemas/common/problem-detail.yaml#/ProblemDetail'
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false
