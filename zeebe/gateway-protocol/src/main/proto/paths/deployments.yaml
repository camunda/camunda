# Deployment and resource endpoints
/deployments:
  post:
    tags:
      - Resource
    operationId: createDeployment
    summary: Deploy resources
    description: |
      Deploys one or more resources (e.g. processes, decision models, or forms).
      This is an atomic call, i.e. either all resources are deployed or none of them are.
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            additionalProperties: false
            type: object
            properties:
              resources:
                type: array
                description: |
                  The binary data to create the deployment resources. It is possible to have more than one form part with different form part names for the binary data to create a deployment.
                items:
                  type: string
                  format: binary
              tenantId:
                $ref: '../schemas/common/identifiers.yaml#/TenantId'
            required:
              - resources
    responses:
      "200":
        description: The resources are deployed.
        content:
          application/json:
            schema:
              $ref: '../schemas/deployments/deployment-models.yaml#/DeploymentResult'
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false

/resources/{resourceKey}:
  get:
    tags:
      - Resource
    operationId: getResource
    summary: Get resource
    description: |
      Returns a deployed resource.
      :::info
      Currently, this endpoint only supports RPA resources.
      :::
    parameters:
      - name: resourceKey
        in: path
        required: true
        description: The unique key identifying the resource.
        schema:
          $ref: '../schemas/common/keys.yaml#/ResourceKey'
    responses:
      "200":
        description: The resource is successfully returned.
        content:
          application/json:
            schema:
              $ref: '../schemas/deployments/deployment-models.yaml#/ResourceResult'
      "404":
        description: A resource with the given key was not found.
        content:
          application/problem+json:
            schema:
              $ref: "../schemas/common/problem-detail.yaml#/ProblemDetail"
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: false

/resources/{resourceKey}/content:
  get:
    tags:
      - Resource
    operationId: getResourceContent
    summary: Get resource content
    description: |
      Returns the content of a deployed resource.
      :::info
      Currently, this endpoint only supports RPA resources.
      :::
    parameters:
      - name: resourceKey
        in: path
        required: true
        description: The unique key identifying the resource.
        schema:
          $ref: '../schemas/common/keys.yaml#/ResourceKey'
    responses:
      "200":
        description: The resource content is successfully returned.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      "404":
        description: A resource with the given key was not found.
        content:
          application/problem+json:
            schema:
              $ref: "../schemas/common/problem-detail.yaml#/ProblemDetail"
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
    x-eventually-consistent: false

/resources/{resourceKey}/deletion:
  post:
    tags:
      - Resource
    operationId: deleteResource
    summary: Delete resource
    description: |
      Deletes a deployed resource.
      This can be a process definition, decision requirements definition, or form definition
      deployed using the deploy resources endpoint. Specify the resource you want to delete in the `resourceKey` parameter.
    parameters:
      - name: resourceKey
        in: path
        required: true
        description: |
          The key of the resource to delete.
          This can be the key of a process definition, the key of a decision requirements
          definition or the key of a form definition
        schema:
          $ref: '../schemas/common/keys.yaml#/ResourceKey'
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../schemas/deployments/deployment-models.yaml#/DeleteResourceRequest'
    responses:
      "200":
        description: The resource is deleted.
      "400":
        $ref: '../responses/common-responses.yaml#/InvalidData'
      "404":
        description: The resource is not found.
        content:
          application/problem+json:
            schema:
              $ref: "../schemas/common/problem-detail.yaml#/ProblemDetail"
      "500":
        $ref: '../responses/common-responses.yaml#/InternalServerError'
      "503":
        $ref: '../responses/common-responses.yaml#/ServiceUnavailable'
    x-eventually-consistent: false
