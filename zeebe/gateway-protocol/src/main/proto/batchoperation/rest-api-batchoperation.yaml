openapi: "3.0.3"
info:
  title: Camunda 8 REST API
  version: "0.1"
  description: API for communicating with a Camunda 8 cluster.
  license:
    name: Camunda License Version 1.0
    url: https://github.com/camunda/camunda/blob/main/licenses/CAMUNDA-LICENSE-1.0.txt
externalDocs:
  description: Find out more
  url: https://docs.camunda.io/docs/apis-tools/camunda-api-rest/camunda-api-rest-overview/

servers:
  - url: "{schema}://{host}:{port}/v2"
    variables:
      host:
        default: localhost
        description: The hostname of the Camunda 8 REST Gateway.
      port:
        default: "8080"
        description: The port of the Camunda 8 REST API server.
      schema:
        default: http
        description: The schema of the Camunda 8 REST API server.

tags:
  - name: Batch operation

paths:
  /batch-operations/{batchOperationId}:
    get:
      tags:
        - Batch operation
      operationId: getBatchOperation
      summary: Get batch operation
      description: Get batch operation by key.
      parameters:
        - name: batchOperationId
          in: path
          required: true
          description: |
            The key (or operate legacy ID) of the batch operation.
          schema:
            type: string
      responses:
        "200":
          description: The batch operation was found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationResponse"
        "400":
          description: The provided data is not valid.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "404":
          description: The batch operation is not found.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /batch-operations/search:
    post:
      tags:
        - Batch operation
      operationId: searchBatchOperations
      summary: Search batch operations
      description: Search for batch operations based on given criteria.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchOperationSearchQuery"
      responses:
        "200":
          description: The batch operation search result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationSearchQueryResult"
        "400":
          description: The provided data is not valid.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /batch-operations/{batchOperationId}/cancellation:
    put:
      tags:
        - Batch operation
      operationId: cancelBatchOperation
      summary: Cancel Batch operation
      description: |
        Cancels a running batch operation.
        This is done asynchronously, the progress can be tracked using the batch operation status endpoint (/batch-operations/{batchOperationId}).
      parameters:
        - name: batchOperationId
          in: path
          required: true
          description: |
            The key (or operate legacy ID) of the batch operation.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
        required: false
      responses:
        "204":
          description: The batch operation cancel request was created.
          content: { }
        "400":
          $ref: "#/components/responses/InvalidData"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not found. The batch operation was not found.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /batch-operations/{batchOperationId}/suspension:
    put:
      tags:
        - Batch operation
      operationId: suspendBatchOperation
      summary: Suspend Batch operation
      description: |
        Suspends a running batch operation.
        This is done asynchronously, the progress can be tracked using the batch operation status endpoint (/batch-operations/{batchOperationId}).
      parameters:
        - name: batchOperationId
          in: path
          required: true
          description: |
            The key (or operate legacy ID) of the batch operation.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
        required: false
      responses:
        "204":
          description: The batch operation pause request was created.
          content: { }
        "400":
          $ref: "#/components/responses/InvalidData"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not found. The batch operation was not found.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /batch-operations/{batchOperationId}/resumption:
    put:
      tags:
        - Batch operation
      operationId: resumeBatchOperation
      summary: Resume Batch operation
      description: |
        Resumes a suspended batch operation.
        This is done asynchronously, the progress can be tracked using the batch operation status endpoint (/batch-operations/{batchOperationId}).
      parameters:
        - name: batchOperationId
          in: path
          required: true
          description: |
            The key (or operate legacy ID) of the batch operation.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
        required: false
      responses:
        "204":
          description: The batch operation resume request was created.
          content: { }
        "400":
          $ref: "#/components/responses/InvalidData"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not found. The batch operation was not found.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /batch-operation-items/search:
    post:
      tags:
        - Batch operation
      operationId: searchBatchOperationItems
      summary: Search batch operation items
      description: Search for batch operation items based on given criteria.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchOperationItemSearchQuery"
      responses:
        "200":
          description: The batch operation search result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationItemSearchQueryResult"
        "400":
          description: The provided data is not valid.
          content:
            application/problem+json:
              schema:
                $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  schemas:
    BatchOperationTypeEnum:
      description: The type of the batch operation.
      type: string
      enum:
        - CANCEL_PROCESS_INSTANCE
        - RESOLVE_INCIDENT
        - MIGRATE_PROCESS_INSTANCE
        - MODIFY_PROCESS_INSTANCE
    BatchOperationSearchQuerySortRequest:
      type: object
      properties:
        field:
          description: The field to sort by.
          type: string
          enum:
            - batchOperationId
            - operationType
            - state
            - startDate
            - endDate
        order:
          $ref: "../rest-api.yaml#/components/schemas/SortOrderEnum"
      required:
        - field
    BatchOperationSearchQuery:
      description: Batch operation search request.
      type: object
      allOf:
        - $ref: "../rest-api.yaml#/components/schemas/SearchQueryRequest"
      properties:
        sort:
          description: Sort field criteria.
          type: array
          items:
            $ref: "#/components/schemas/BatchOperationSearchQuerySortRequest"
        filter:
          description: The batch operation search filters.
          allOf:
            - $ref: "#/components/schemas/BatchOperationFilter"
    BatchOperationFilter:
      description: Batch operation filter request.
      type: object
      properties:
        batchOperationId:
          description: The key (or operate legacy ID) of the batch operation.
          type: string
        operationType:
          $ref: "#/components/schemas/BatchOperationTypeEnum"
        state:
          type: string
          description: The state of the batch operation.
          enum:
            - CREATED
            - ACTIVE
            - SUSPENDED
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - CANCELED
            - INCOMPLETED
    BatchOperationItemSearchQuerySortRequest:
      type: object
      properties:
        field:
          description: The field to sort by.
          type: string
          enum:
            - batchOperationId
            - itemKey
            - processInstanceKey
            - state
        order:
          $ref: "../rest-api.yaml#/components/schemas/SortOrderEnum"
      required:
        - field
    BatchOperationItemSearchQuery:
      description: Batch operation item search request.
      type: object
      allOf:
        - $ref: "../rest-api.yaml#/components/schemas/SearchQueryRequest"
      properties:
        sort:
          description: Sort field criteria.
          type: array
          items:
            $ref: "#/components/schemas/BatchOperationItemSearchQuerySortRequest"
        filter:
          description: The batch operation search filters.
          allOf:
            - $ref: "#/components/schemas/BatchOperationItemFilter"
    BatchOperationItemFilter:
      description: Batch operation item filter request.
      type: object
      properties:
        batchOperationId:
          description: The key (or operate legacy ID) of the batch operation.
          type: string
        itemKey:
          description: The key of the item, e.g. a process instance key.
          type: string
        processInstanceKey:
          description: The process instance key of the processed item.
          type: string
        state:
          type: string
          description: The state of the batch operation.
          enum:
            - ACTIVE
            - COMPLETED
            - CANCELED
            - FAILED
    BatchOperationSearchQueryResult:
      type: object
      allOf:
        - $ref: "../rest-api.yaml#/components/schemas/SearchQueryResponse"
      properties:
        items:
          description: The matching batch operations.
          type: array
          items:
            $ref: "#/components/schemas/BatchOperationResponse"
    BatchOperationResponse:
      type: object
      properties:
        batchOperationId:
          description: Key or (Operate Legacy ID = UUID) of the batch operation.
          type: string
        state:
          description: The state of the batch operation.
          type: string
          enum:
            - CREATED
            - ACTIVE
            - SUSPENDED
            - COMPLETED
            - COMPLETED_WITH_ERRORS
            - CANCELED
            - INCOMPLETED
        batchOperationType:
          $ref: "#/components/schemas/BatchOperationTypeEnum"
        startDate:
          type: string
          description: The start date of the batch operation.
          format: date-time
        endDate:
          type: string
          description: The end date of the batch operation.
          format: date-time
        operationsTotalCount:
          type: integer
          description: The total number of items contained in this stacking process.
          format: int32
        operationsFailedCount:
          type: integer
          description: The number of items which failed during execution of the batch operation. (e.g. because they are rejected by the machine)
          format: int32
        operationsCompletedCount:
          type: integer
          description: The number of successfully completed tasks.
          format: int32
    BatchOperationItemSearchQueryResult:
      type: object
      allOf:
        - $ref: "../rest-api.yaml#/components/schemas/SearchQueryResponse"
      properties:
        items:
          description: The matching batch operations.
          type: array
          items:
            $ref: "#/components/schemas/BatchOperationItemResponse"
    BatchOperationItemResponse:
      type: object
      properties:
        batchOperationId:
          description: The key (or operate legacy ID) of the batch operation.
          type: string
        itemKey:
          description: Key of the item, e.g. a process instance key.
          type: string
        processInstanceKey:
          description: the process instance key of the processed item.
          type: string
        state:
          description: State of the item.
          type: string
          enum:
            - ACTIVE
            - COMPLETED
            - CANCELED
            - FAILED
        processedDate:
          description: the date this item was processed. This can be either completed, canceled or failed.
          type: string
          format: date-time
        errorMessage:
          description: the error message from the engine in case of a failed operation.
          type: string

  responses:
    InternalServerError:
      description: >
        An internal error occurred while processing the request.
      content:
        application/problem+json:
          schema:
            $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
    Unauthorized:
      description: The request lacks valid authentication credentials.
      content:
        application/problem+json:
          schema:
            $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
    Forbidden:
      description: Forbidden. The request is not allowed.
      content:
        application/problem+json:
          schema:
            $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"
    InvalidData:
      description: The provided data is not valid.
      content:
        application/problem+json:
          schema:
            $ref: "../rest-api.yaml#/components/schemas/ProblemDetail"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

