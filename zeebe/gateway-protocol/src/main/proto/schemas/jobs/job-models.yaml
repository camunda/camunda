# Job domain schemas
JobActivationRequest:
  type: object
  additionalProperties: false
  properties:
    type:
      description: The job type, as defined in the BPMN process (e.g. <zeebe:taskDefinition type="payment-service" />)
      type: string
      example: create-new-user-record
    worker:
      description: The name of the worker activating the jobs, mostly used for logging purposes.
      type: string
      example: worker-324
    timeout:
      description: >
        A job returned after this call will not be activated by another call until the
        timeout (in ms) has been reached.
      type: integer
      format: int64
      example: 20000
    maxJobsToActivate:
      description: The maximum jobs to activate by this request.
      type: integer
      format: int32
      example: 5
    fetchVariable:
      description: A list of variables to fetch as the job variables; if empty, all visible variables at the time of activation for the scope of the job will be returned.
      type: array
      items:
        type: string
    requestTimeout:
      description: >
        The request will be completed when at least one job is activated or after the
        requestTimeout (in ms). If the requestTimeout = 0, a default timeout is used.
        If the requestTimeout < 0, long polling is disabled and the request is completed
        immediately, even when no job is activated.
      type: integer
      format: int64
      example: 60000
    tenantIds:
      description: A list of IDs of tenants for which to activate jobs.
      type: array
      items:
        $ref: '../common/identifiers.yaml#/TenantId'
  required:
    - type
    - timeout
    - maxJobsToActivate

JobActivationResult:
  description: The list of activated jobs
  type: object
  required:
    - jobs
  properties:
    jobs:
      description: The activated jobs.
      type: array
      items:
        $ref: '#/ActivatedJobResult'

ActivatedJobResult:
  x-semantic-provider:
    - elementId
    - jobKey
    - elementInstanceKey
  type: object
  required:
    - type
    - processDefinitionId
    - processDefinitionVersion
    - elementId
    - customHeaders
    - worker
    - retries
    - deadline
    - variables
    - tenantId
    - jobKey
    - processInstanceKey
    - processDefinitionKey
    - elementInstanceKey
    - kind
    - listenerEventType
  properties:
    type:
      description: The type of the job (should match what was requested).
      type: string
      example: create-new-user-record
    processDefinitionId:
      allOf:
        - $ref: '../common/identifiers.yaml#/ProcessDefinitionId'
      description: The bpmn process ID of the job's process definition.
    processDefinitionVersion:
      description: The version of the job's process definition.
      type: integer
      format: int32
      example: 1
    elementId:
      allOf:
        - $ref: '../common/identifiers.yaml#/ElementId'
      description: The associated task element ID.
    customHeaders:
      description: A set of custom headers defined during modelling; returned as a serialized JSON document.
      type: object
      additionalProperties: true
      example: {}
    worker:
      description: The name of the worker which activated this job.
      type: string
      example: worker-324
    retries:
      description: The amount of retries left to this job (should always be positive).
      type: integer
      format: int32
      example: 3
    deadline:
      description: When the job can be activated again, sent as a UNIX epoch timestamp.
      type: integer
      format: int64
      example: 1757280974277
    variables:
      description: All variables visible to the task scope, computed at activation time.
      type: object
      additionalProperties: true
    tenantId:
      allOf:
        - $ref: '../common/identifiers.yaml#/TenantId'
      description: The ID of the tenant that owns the job.
    jobKey:
      allOf:
        - $ref: '../common/keys.yaml#/JobKey'
      description: The key, a unique identifier for the job.
    processInstanceKey:
      allOf:
        - $ref: '../common/keys.yaml#/ProcessInstanceKey'
      description: The job's process instance key.
    processDefinitionKey:
      allOf:
        - $ref: '../common/keys.yaml#/ProcessDefinitionKey'
      description: The key of the job's process definition.
    elementInstanceKey:
      allOf:
        - $ref: '../common/keys.yaml#/ElementInstanceKey'
    kind:
      $ref: '../common/enums.yaml#/JobKindEnum'
    listenerEventType:
      $ref: '../common/enums.yaml#/JobListenerEventTypeEnum'
    userTask:
      $ref: '../user-tasks/user-task-models.yaml#/UserTaskProperties'
    tags:
      $ref: '../common/identifiers.yaml#/TagSet'

JobFailRequest:
  type: object
  additionalProperties: false
  properties:
    retries:
      description: The amount of retries the job should have left
      type: integer
      format: int32
      default: 0
    errorMessage:
      description: An optional error message describing why the job failed; if not provided, an empty string is used.
      type: string
    retryBackOff:
      description: An optional retry back off for the failed job. The job will not be retryable before the current time plus the back off time. The default is 0 which means the job is retryable immediately.
      type: integer
      format: int64
      default: 0
    variables:
      type: object
      additionalProperties: true

JobErrorRequest:
  type: object
  additionalProperties: false
  properties:
    errorCode:
      description: >
        The error code that will be matched with an error catch event.
      type: string
    errorMessage:
      description: >
        An error message that provides additional context.
      type: string
      nullable: true
    variables:
      additionalProperties: true
      description: >
        JSON object that will instantiate the variables at the local scope of the error catch event that catches the thrown error.
      type: object
      nullable: true
  required:
    - errorCode

JobCompletionRequest:
  type: object
  additionalProperties: false
  properties:
    variables:
      additionalProperties: true
      description: The variables to complete the job with.
      type: object
      nullable: true
    result:
      $ref: "#/JobResult"

JobResult:
  description: >
    The result of the completed job as determined by the worker.
  discriminator:
    propertyName: type
    mapping:
      userTask: '#/JobResultUserTask'
      adHocSubProcess: '#/JobResultAdHocSubProcess'
  oneOf:
    - $ref: '#/JobResultUserTask'
    - $ref: '#/JobResultAdHocSubProcess'

JobResultUserTask:
  description: >
    Job result details for a user task completion, optionally including a denial
    reason and corrected task properties.
  type: object
  nullable: true
  properties:
    denied:
      type: boolean
      description: >
        Indicates whether the worker denies the work, i.e. explicitly doesn't approve it.
        For example, a user task listener can deny the completion of a task by setting this flag to true.
        In this example, the completion of a task is represented by a job that the worker can complete as denied.
        As a result, the completion request is rejected and the task remains active.
        Defaults to false.
      nullable: true
    deniedReason:
      type: string
      description: The reason provided by the user task listener for denying the work.
      nullable: true
    corrections:
      $ref: "#/JobResultCorrections"
    type:
      description: Used to distinguish between different types of job results.
      type: string
      example: userTask

JobResultCorrections:
  type: object
  description: |
    JSON object with attributes that were corrected by the worker.

    The following attributes can be corrected, additional attributes will be ignored:

    * `assignee` - clear by providing an empty String
    * `dueDate` - clear by providing an empty String
    * `followUpDate` - clear by providing an empty String
    * `candidateGroups` - clear by providing an empty list
    * `candidateUsers` - clear by providing an empty list
    * `priority` - minimum 0, maximum 100, default 50

    Providing any of those attributes with a `null` value or omitting it preserves
    the persisted attribute's value.
  nullable: true
  properties:
    assignee:
      type: string
      description: Assignee of the task.
      nullable: true
    dueDate:
      type: string
      format: date-time
      description: The due date of the task.
      nullable: true
    followUpDate:
      type: string
      format: date-time
      description: The follow-up date of the task.
      nullable: true
    candidateUsers:
      type: array
      description: The list of candidate users of the task.
      items:
        type: string
      nullable: true
    candidateGroups:
      type: array
      description: The list of candidate groups of the task.
      items:
        type: string
      nullable: true
    priority:
      type: integer
      format: int32
      description: The priority of the task.
      minimum: 0
      maximum: 100
      nullable: true

JobResultAdHocSubProcess:
  description: >
    Job result details for an ad‑hoc sub‑process, including elements to activate
    and flags indicating completion or cancellation behavior.
  type: object
  nullable: true
  properties:
    activateElements:
      type: array
      description: Indicates which elements need to be activated in the ad-hoc subprocess.
      items:
        $ref: "#/JobResultActivateElement"
    isCompletionConditionFulfilled:
      type: boolean
      description: Indicates whether the completion condition of the ad-hoc subprocess is fulfilled.
      default: false
      nullable: false
    isCancelRemainingInstances:
      type: boolean
      description: Indicates whether the remaining instances of the ad-hoc subprocess should be canceled.
      default: false
      nullable: false
    type:
      description: Used to distinguish between different types of job results.
      type: string
      example: adHocSubProcess

JobResultActivateElement:
  description: Instruction to activate a single BPMN element within an ad‑hoc sub‑process, optionally providing variables scoped to that element.
  type: object
  properties:
    elementId:
      $ref: '../common/identifiers.yaml#/ElementId'
      description: The element ID to activate.
    variables:
      type: object
      additionalProperties: true
      description: Variables for the element.

JobUpdateRequest:
  type: object
  additionalProperties: false
  properties:
    changeset:
      $ref: "#/JobChangeset"
    operationReference:
      $ref: "../common/keys.yaml#/OperationReference"
  required:
    - changeset

JobChangeset:
  description: JSON object with changed job attribute values. The job cannot be completed or failed with this endpoint, use the complete job or fail job endpoints instead.
  type: object
  properties:
    retries:
      type: integer
      format: int32
      description: The new number of retries for the job.
    timeout:
      type: integer
      format: int64
      description: The new timeout for the job in milliseconds.

JobSearchQuery:
  description: Job search request.
  type: object
  additionalProperties: false
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryRequest'
  properties:
    sort:
      description: Sort field criteria.
      type: array
      items:
        $ref: '#/JobSearchQuerySortRequest'
    filter:
      $ref: '#/JobFilter'
      description: The job search filters.

JobSearchQuerySortRequest:
  type: object
  properties:
    field:
      description: The field to sort by.
      type: string
      enum:
        - deadline
        - deniedReason
        - elementId
        - elementInstanceKey
        - endTime
        - errorCode
        - errorMessage
        - hasFailedWithRetriesLeft
        - isDenied
        - jobKey
        - kind
        - listenerEventType
        - processDefinitionId
        - processDefinitionKey
        - processInstanceKey
        - retries
        - state
        - tenantId
        - type
        - worker
    order:
      $ref: '../common/enums.yaml#/SortOrderEnum'
  required:
    - field

JobFilter:
  description: Job search filter.
  type: object
  properties:
    deadline:
      description: When the job can next be activated.
      nullable: true
      allOf:
        - $ref: '../common/filters.yaml#/DateTimeFilterProperty'
    deniedReason:
      description: The reason provided by the user task listener for denying the work.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    elementId:
      description: The element ID associated with the job.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    elementInstanceKey:
      description: The element instance key associated with the job.
      allOf:
        - $ref: '../common/filters.yaml#/ElementInstanceKeyFilterProperty'
    endTime:
      description: When the job ended.
      allOf:
        - $ref: '../common/filters.yaml#/DateTimeFilterProperty'
    errorCode:
      description: The error code provided for the failed job.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    errorMessage:
      description: The error message that provides additional context for a failed job.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    hasFailedWithRetriesLeft:
      description: Indicates whether the job has failed with retries left.
      type: boolean
    isDenied:
      description: Indicates whether the user task listener denies the work.
      type: boolean
      nullable: true
    jobKey:
      description: The key, a unique identifier for the job.
      allOf:
        - $ref: '../common/filters.yaml#/JobKeyFilterProperty'
    kind:
      description: The kind of the job.
      allOf:
        - $ref: '../common/filters.yaml#/JobKindFilterProperty'
    listenerEventType:
      description: The listener event type of the job.
      allOf:
        - $ref: '../common/filters.yaml#/JobListenerEventTypeFilterProperty'
    processDefinitionId:
      description: The process definition ID associated with the job.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    processDefinitionKey:
      description: The process definition key associated with the job.
      allOf:
        - $ref: '../common/filters.yaml#/ProcessDefinitionKeyFilterProperty'
    processInstanceKey:
      description: The process instance key associated with the job.
      allOf:
        - $ref: '../common/filters.yaml#/ProcessInstanceKeyFilterProperty'
    retries:
      description: The number of retries left.
      allOf:
        - $ref: '../common/filters.yaml#/IntegerFilterProperty'
    state:
      description: The state of the job.
      allOf:
        - $ref: '../common/filters.yaml#/JobStateFilterProperty'
    tenantId:
      description: The tenant ID.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    type:
      description: The type of the job.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'
    worker:
      description: The name of the worker for this job.
      allOf:
        - $ref: '../common/filters.yaml#/StringFilterProperty'

JobSearchQueryResult:
  description: Job search response.
  type: object
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryResponse'
  properties:
    items:
      description: The matching jobs.
      type: array
      items:
        $ref: '#/JobSearchResult'

JobSearchResult:
  type: object
  required:
    - customHeaders
    - elementId
    - elementInstanceKey
    - hasFailedWithRetriesLeft
    - jobKey
    - kind
    - listenerEventType
    - processDefinitionId
    - processDefinitionKey
    - processInstanceKey
    - retries
    - state
    - tenantId
    - type
    - worker
  properties:
    customHeaders:
      description: A set of custom headers defined during modelling.
      type: object
      additionalProperties:
        type: string
    deadline:
      description: If the job has been activated, when it will next be available to be activated.
      type: string
      format: date-time
      nullable: true
    deniedReason:
      description: The reason provided by the user task listener for denying the work.
      type: string
      nullable: true
    elementId:
      description: The element ID associated with the job.
      allOf:
        - $ref: "../common/identifiers.yaml#/ElementId"
    elementInstanceKey:
      allOf:
        - $ref: "../common/keys.yaml#/ElementInstanceKey"
      description: The element instance key associated with the job.
    endTime:
      description: When the job ended.
      type: string
      format: date-time
    errorCode:
      description: The error code provided for a failed job.
      type: string
      nullable: true
    errorMessage:
      description: The error message that provides additional context for a failed job.
      type: string
      nullable: true
    hasFailedWithRetriesLeft:
      description: Indicates whether the job has failed with retries left.
      type: boolean
    isDenied:
      description: Indicates whether the user task listener denies the work.
      type: boolean
      nullable: true
    jobKey:
      allOf:
        - $ref: "../common/keys.yaml#/JobKey"
      description: The key, a unique identifier for the job.
    kind:
      $ref: "../common/enums.yaml#/JobKindEnum"
    listenerEventType:
      $ref: "../common/enums.yaml#/JobListenerEventTypeEnum"
    processDefinitionId:
      description: The process definition ID associated with the job.
      allOf:
        - $ref: "../common/identifiers.yaml#/ProcessDefinitionId"
    processDefinitionKey:
      allOf:
        - $ref: "../common/keys.yaml#/ProcessDefinitionKey"
      description: The process definition key associated with the job.
    processInstanceKey:
      allOf:
        - $ref: "../common/keys.yaml#/ProcessInstanceKey"
      description: The process instance key associated with the job.
    retries:
      description: The amount of retries left to this job.
      type: integer
      format: int32
    state:
      $ref: "../common/enums.yaml#/JobStateEnum"
    tenantId:
      $ref: "../common/identifiers.yaml#/TenantId"
    type:
      description: The type of the job.
      type: string
    worker:
      description: The name of the worker of this job.
      type: string
