# Tenant domain schemas
TenantCreateRequest:
  type: object
  additionalProperties: false
  properties:
    tenantId:
      type: string
      description: The unique ID for the tenant. Must be 255 characters or less. Can contain letters, numbers, [`_`, `-`, `+`, `.`, `@`].
      minLength: 1
      maxLength: 256
      pattern: ^[A-Za-z0-9_@.+-]+$
    name:
      type: string
      description: The name of the tenant.
    description:
      type: string
      description: The description of the tenant.
  required:
    - tenantId
    - name

TenantCreateResult:
  type: object
  x-semantic-provider:
    - tenantId
  properties:
    tenantId:
      $ref: '../common/identifiers.yaml#/TenantId'
    name:
      type: string
      example: Customer Service Department
    description:
      type: string
      example: Customer Service department business processes

TenantUpdateRequest:
  type: object
  additionalProperties: false
  properties:
    name:
      type: string
      description: The new name of the tenant.
    description:
      type: string
      description: The new description of the tenant.
  required:
    - name
    - description

TenantUpdateResult:
  type: object
  properties:
    tenantId:
      $ref: '../common/identifiers.yaml#/TenantId'
    name:
      type: string
      description: The name of the tenant.
    description:
      type: string
      description: The description of the tenant.

TenantResult:
  description: Tenant search response item.
  type: object
  properties:
    name:
      type: string
      description: The tenant name.
      example: Customer Service department
    tenantId:
      $ref: '../common/identifiers.yaml#/TenantId'
    description:
      type: string
      description: The tenant description.
      example: Customer Service department business processes

TenantSearchQuerySortRequest:
  type: object
  properties:
    field:
      description: The field to sort by.
      type: string
      enum:
        - key
        - name
        - tenantId
    order:
      $ref: '../common/enums.yaml#/SortOrderEnum'
  required:
    - field

TenantSearchQueryRequest:
  description: Tenant search request
  additionalProperties: false
  type: object
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryRequest'
  properties:
    sort:
      description: Sort field criteria.
      type: array
      items:
        $ref: '#/TenantSearchQuerySortRequest'
    filter:
      $ref: '#/TenantFilter'
      description: The tenant search filters.

TenantFilter:
  description: Tenant filter request
  type: object
  properties:
    tenantId:
      $ref: '../common/identifiers.yaml#/TenantId'
    name:
      type: string
      description: The name of the tenant.

TenantSearchQueryResult:
  description: Tenant search response.
  type: object
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryResponse'
  properties:
    items:
      description: The matching tenants.
      type: array
      items:
        $ref: '#/TenantResult'

# Tenant-related association results
TenantUserResult:
  type: object
  properties:
    username:
      $ref: '../common/identifiers.yaml#/Username'

TenantUserSearchResult:
  type: object
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryResponse'
  properties:
    items:
      description: The matching users.
      type: array
      items:
        $ref: '#/TenantUserResult'

TenantUserSearchQueryRequest:
  additionalProperties: false
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryRequest'
  type: object
  properties:
    sort:
      description: Sort field criteria.
      type: array
      items:
        $ref: '#/TenantUserSearchQuerySortRequest'

TenantUserSearchQuerySortRequest:
  type: object
  properties:
    field:
      description: The field to sort by.
      type: string
      enum:
        - username
    order:
      $ref: '../common/enums.yaml#/SortOrderEnum'
  required:
    - field

TenantClientResult:
  type: object
  properties:
    clientId:
      description: The ID of the client.
      type: string

TenantClientSearchResult:
  type: object
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryResponse'
  properties:
    items:
      description: The matching clients.
      type: array
      items:
        $ref: '#/TenantClientResult'

TenantClientSearchQueryRequest:
  additionalProperties: false
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryRequest'
  type: object
  properties:
    sort:
      description: Sort field criteria.
      type: array
      items:
        $ref: '#/TenantClientSearchQuerySortRequest'

TenantClientSearchQuerySortRequest:
  type: object
  properties:
    field:
      description: The field to sort by.
      type: string
      enum:
        - clientId
    order:
      $ref: '../common/enums.yaml#/SortOrderEnum'
  required:
    - field

TenantGroupResult:
  type: object
  properties:
    groupId:
      description: The groupId of the group.
      type: string

TenantGroupSearchResult:
  type: object
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryResponse'
  properties:
    items:
      description: The matching groups.
      type: array
      items:
        $ref: '#/TenantGroupResult'

TenantGroupSearchQueryRequest:
  allOf:
    - $ref: '../search/search-models.yaml#/SearchQueryRequest'
  type: object
  additionalProperties: false
  properties:
    sort:
      description: Sort field criteria.
      type: array
      items:
        $ref: '#/TenantGroupSearchQuerySortRequest'

TenantGroupSearchQuerySortRequest:
  type: object
  additionalProperties: false
  properties:
    field:
      description: The field to sort by.
      type: string
      enum:
        - groupId
    order:
      $ref: '../common/enums.yaml#/SortOrderEnum'
  required:
    - field
