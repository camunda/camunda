# A shared config map for all benchmark clients, starters and workers alike.
# Do not include configuration that is specific to a single client type.
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "bench.name" . }}-clients
  labels:
    app.kubernetes.io/component: client
    {{- include "bench.labels" . | nindent 4 }}
data:
  # HOCON configuration file for the clients, to be mounted as a volume mount
  clients.conf: |
    include "application"

    app {
      brokerUrl = "{{- include "bench.gatewayGrpcAddress" . -}}"
      brokerRestUrl = "{{- include "bench.gatewayRestAddress" . -}}"
      tls = {{ include "bench.tlsEnabled" . }}
      preferRest = {{ .Values.clients.preferRest }}

      auth {
        type = "{{- .Values.clients.auth.type | upper -}}"
        {{- if eq .Values.clients.auth.type "basic" }}
        basic {
          username = "{{- .Values.clients.auth.basic.username -}}"
          password = "{{- .Values.clients.auth.basic.password -}}"
        }
        {{- else if eq .Values.clients.auth.type "oauth" }}
        oauth {
          {{- if eq .Values.cluster.type "saas" }}
          audience = "{{- default (include "bench.saasAudience" .) .Values.clients.auth.oauth.audience -}}"
          authzUrl = "{{- default (include "bench.saasAuthzServerUrl" .) .Values.clients.auth.oauth.authzServer -}}"
          scope = "Zeebe,Operate,Tasklist"
          {{- else }}
          audience = "{{- .Values.clients.auth.oauth.audience -}}"
          authzUrl = "{{- .Values.clients.auth.oauth.authzUrl -}}"
          {{- end }}
          clientId = "{{- .Values.clients.auth.oauth.clientId -}}"
          clientSecret = "{{- .Values.clients.auth.oauth.clientSecret -}}"
        }
        {{- end }}
      }
    }

