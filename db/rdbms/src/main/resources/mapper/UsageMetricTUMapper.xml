<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.camunda.db.rdbms.sql.UsageMetricTUMapper">

  <resultMap id="UsageMetricTUStatisticsResultMap"
    type="io.camunda.db.rdbms.write.domain.UsageMetricTUDbModel$UsageMetricTUStatisticsDbModel">
    <constructor>
      <arg column="TU" javaType="java.lang.Long"/>
    </constructor>
  </resultMap>

  <resultMap id="UsageMetricTUStatisticsResultMap2"
    type="io.camunda.db.rdbms.write.domain.UsageMetricTUDbModel$UsageMetricTUTenantStatisticsDbModel">
    <constructor>
      <arg column="TENANT_ID" javaType="java.lang.String"/>
      <arg column="TU" javaType="java.lang.Long"/>
    </constructor>
  </resultMap>

  <select id="usageMetricTUStatistics"
    parameterType="io.camunda.search.filter.UsageMetricsFilter"
    resultMap="UsageMetricTUStatisticsResultMap"
    statementType="PREPARED">
    SELECT COUNT(DISTINCT ASSIGNEE_HASH) AS TU
        FROM ${prefix}USAGE_METRIC_TU
    <bind name="filter" value="_parameter"/>
    <include refid="io.camunda.db.rdbms.sql.UsageMetricTUMapper.usageMetricStatisticsFilter"/>
  </select>

  <select id="usageMetricTUTenantsStatistics"
    parameterType="io.camunda.search.filter.UsageMetricsFilter"
    resultMap="UsageMetricTUStatisticsResultMap2"
    statementType="PREPARED">
    SELECT TENANT_ID,
           COUNT(DISTINCT ASSIGNEE_HASH) AS TU
    FROM ${prefix}USAGE_METRIC_TU
    <bind name="filter" value="_parameter"/>
    <include refid="io.camunda.db.rdbms.sql.UsageMetricTUMapper.usageMetricStatisticsFilter"/>
    GROUP BY TENANT_ID
  </select>

  <sql id="usageMetricStatisticsFilter">
    <where>
      <if test="filter.startTime != null">
        AND END_TIME &gt;= #{filter.startTime}
      </if>
      <if test="filter.endTime != null">
        AND END_TIME &lt; #{filter.endTime}
      </if>
      <if test="filter.tenantId != null">
        AND TENANT_ID = #{filter.tenantId}
      </if>
    </where>
  </sql>

  <insert id="insert" parameterType="io.camunda.db.rdbms.write.domain.UsageMetricTUDbModel">
    INSERT INTO ${prefix}USAGE_METRIC_TU (USAGE_METRIC_KEY,
                                          START_TIME,
                                          END_TIME,
                                          TENANT_ID,
                                          ASSIGNEE_HASH,
                                          PARTITION_ID)
    VALUES (#{key},
            #{startTime, jdbcType=TIMESTAMP},
            #{endTime, jdbcType=TIMESTAMP},
            #{tenantId},
            #{assigneeHash},
            #{partitionId})
  </insert>

  <delete flushCache="true"
    id="cleanupMetrics"
    statementType="PREPARED">
    DELETE
    FROM ${prefix}USAGE_METRIC_TU
    WHERE PARTITION_ID = #{partitionId}
      AND END_TIME &lt; #{cleanupDate} LIMIT #{limit}
  </delete>

  <delete flushCache="true"
    id="cleanupMetrics"
    statementType="PREPARED"
    databaseId="oracle">
    DELETE
    FROM ${prefix}USAGE_METRIC_TU
    WHERE rowid IN (SELECT rowid
                    FROM ${prefix}USAGE_METRIC_TU
                    WHERE PARTITION_ID = #{partitionId}
                      AND END_TIME &lt; #{cleanupDate}
                      AND ROWNUM &lt;= #{limit})
  </delete>

  <delete flushCache="true"
    id="cleanupMetrics"
    statementType="PREPARED"
    databaseId="postgresql">
    DELETE
    FROM ${prefix}USAGE_METRIC_TU
    WHERE ctid IN (SELECT ctid
                   FROM ${prefix}USAGE_METRIC_TU
                   WHERE PARTITION_ID = #{partitionId}
                     AND END_TIME &lt; #{cleanupDate}
      LIMIT #{limit})
  </delete>

</mapper>
