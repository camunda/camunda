<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.camunda.db.rdbms.sql.TenantMapper">

  <select id="count" parameterType="io.camunda.db.rdbms.read.domain.TenantDbQuery">
    SELECT COUNT(*)
    FROM ${prefix}TENANT t
    <if test="filter.memberIds != null">
      JOIN ${prefix}TENANT_MEMBER tm ON t.TENANT_ID = tm.TENANT_ID
      AND tm.ENTITY_TYPE = #{filter.childMemberType}
    </if>
    <include refid="io.camunda.db.rdbms.sql.TenantMapper.searchFilter"/>
  </select>

  <select id="search" parameterType="io.camunda.db.rdbms.read.domain.TenantDbQuery"
    resultMap="io.camunda.db.rdbms.sql.TenantMapper.tenantResultMap">
    SELECT * FROM (
    SELECT
    TENANT_KEY,
    t.TENANT_ID,
    NAME,
    DESCRIPTION
    FROM ${prefix}TENANT t
    LEFT JOIN ${prefix}TENANT_MEMBER tm ON t.TENANT_ID = tm.TENANT_ID
    <include refid="io.camunda.db.rdbms.sql.TenantMapper.searchFilter"/>
    ) t
    <include refid="io.camunda.db.rdbms.sql.Commons.keySetPageFilter"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.orderBy"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.paging"/>
  </select>

  <sql id="searchFilter">
    WHERE 1 = 1
    <if test="filter.key != null">AND TENANT_KEY = #{filter.key}</if>
    <if test="filter.tenantId != null">AND TENANT_ID = #{filter.tenantId}</if>
    <if test="filter.name != null">AND NAME = #{filter.name}</if>
    <if test="filter.memberIds != null">
      AND tm.ENTITY_ID IN
      <foreach collection="filter.memberIds" item="memberId" open="(" separator="," close=")">
        #{memberId}
      </foreach>
      AND tm.ENTITY_TYPE = #{filter.childMemberType}
    </if>
  </sql>

  <resultMap id="tenantResultMap" type="io.camunda.db.rdbms.write.domain.TenantDbModel">
    <id column="TENANT_ID" property="tenantId"/>
    <result column="TENANT_KEY" property="tenantKey"/>
    <result column="NAME" property="name"/>
    <result column="DESCRIPTION" property="description"/>
  </resultMap>

  <insert id="insert" parameterType="io.camunda.db.rdbms.write.domain.TenantDbModel">
    INSERT INTO ${prefix}TENANT (TENANT_KEY, TENANT_ID, NAME, DESCRIPTION)
    VALUES (#{tenantKey}, #{tenantId}, #{name}, #{description})
  </insert>

  <update id="update" parameterType="io.camunda.db.rdbms.write.domain.TenantDbModel">
    UPDATE ${prefix}TENANT SET
                    NAME = #{name},
                    DESCRIPTION = #{description}
    WHERE TENANT_ID = #{tenantId}
  </update>

  <delete id="delete" parameterType="java.lang.String">
    DELETE
    FROM ${prefix}TENANT
    WHERE TENANT_ID = #{tenantId}
  </delete>

  <insert id="insertMember" parameterType="io.camunda.db.rdbms.write.domain.TenantMemberDbModel">
    INSERT INTO ${prefix}TENANT_MEMBER (TENANT_ID, ENTITY_ID, ENTITY_TYPE)
    VALUES (#{tenantId}, #{entityId}, #{entityType})
  </insert>

  <delete id="deleteMember" parameterType="io.camunda.db.rdbms.write.domain.TenantMemberDbModel">
    DELETE
    FROM ${prefix}TENANT_MEMBER
    WHERE TENANT_ID = #{tenantId}
      AND ENTITY_ID = #{entityId}
      AND ENTITY_TYPE = #{entityType}
  </delete>

</mapper>
