<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.camunda.db.rdbms.sql.UserTaskMapper">

  <insert
    flushCache="true"
    id="insert"
    parameterType="io.camunda.db.rdbms.write.domain.UserTaskDbModel"
    statementType="PREPARED">
    INSERT INTO ${prefix}USER_TASK (USER_TASK_KEY, ELEMENT_ID, PROCESS_DEFINITION_ID, CREATION_DATE,
                           COMPLETION_DATE, ASSIGNEE, STATE,
                           FORM_KEY,
                           PROCESS_DEFINITION_KEY, PROCESS_INSTANCE_KEY,
                           ELEMENT_INSTANCE_KEY, TENANT_ID, DUE_DATE, FOLLOW_UP_DATE,
                           EXTERNAL_FORM_REFERENCE, PROCESS_DEFINITION_VERSION, CUSTOM_HEADERS,
                                    PRIORITY, PARTITION_ID, HISTORY_CLEANUP_DATE)
    VALUES (#{userTaskKey}, #{elementId}, #{processDefinitionId}, #{creationDate},
            #{completionDate},
            #{assignee}, #{state}, #{formKey},
            #{processDefinitionKey}, #{processInstanceKey}, #{elementInstanceKey}, #{tenantId},
            #{dueDate}, #{followUpDate},
            #{externalFormReference}, #{processDefinitionVersion}, #{serializedCustomHeaders},
            #{priority}, #{partitionId}, #{historyCleanupDate})
  </insert>

  <insert flushCache="true"
    id="insertCandidateUsers"
    parameterType="io.camunda.db.rdbms.write.domain.UserTaskDbModel"
    statementType="PREPARED">
    INSERT INTO ${prefix}CANDIDATE_USER (USER_TASK_KEY, CANDIDATE_USER)
    VALUES
    <foreach collection="candidateUsers" item="candidateUser" separator=", ">
      (#{userTaskKey}, #{candidateUser})
    </foreach>
  </insert>

  <insert flushCache="true"
    id="insertCandidateGroups"
    parameterType="io.camunda.db.rdbms.write.domain.UserTaskDbModel"
    statementType="PREPARED">
    INSERT INTO ${prefix}CANDIDATE_GROUP (USER_TASK_KEY, CANDIDATE_GROUP)
    VALUES
    <foreach collection="candidateGroups" item="candidateGroup" separator=", ">
      (#{userTaskKey}, #{candidateGroup})
    </foreach>
  </insert>

  <resultMap id="searchResultMap" type="io.camunda.db.rdbms.write.domain.UserTaskDbModel">
    <constructor>
      <idArg column="USER_TASK_KEY" javaType="java.lang.Long"/>
    </constructor>
    <result property="elementId" column="ELEMENT_ID" javaType="java.lang.String"/>
    <result property="processDefinitionId" column="PROCESS_DEFINITION_ID"
      javaType="java.lang.String"/>
    <result property="creationDate" column="CREATION_DATE" javaType="java.time.OffsetDateTime"/>
    <result property="completionDate" column="COMPLETION_DATE" javaType="java.time.OffsetDateTime"/>
    <result property="assignee" column="ASSIGNEE" javaType="java.lang.String"/>
    <result property="state" column="STATE"
      javaType="io.camunda.db.rdbms.write.domain.UserTaskDbModel$UserTaskState"/>
    <result property="formKey" column="FORM_KEY" javaType="java.lang.Long"/>
    <result property="processDefinitionKey" column="PROCESS_DEFINITION_KEY"
      javaType="java.lang.Long"/>
    <result property="processInstanceKey" column="PROCESS_INSTANCE_KEY" javaType="java.lang.Long"/>
    <result property="elementInstanceKey" column="ELEMENT_INSTANCE_KEY" javaType="java.lang.Long"/>
    <result property="tenantId" column="TENANT_ID" javaType="java.lang.String"/>
    <result property="dueDate" column="DUE_DATE" javaType="java.time.OffsetDateTime"/>
    <result property="followUpDate" column="FOLLOW_UP_DATE" javaType="java.time.OffsetDateTime"/>
    <result property="externalFormReference" column="EXTERNAL_FORM_REFERENCE"
      javaType="java.lang.String"/>
    <result property="processDefinitionVersion" column="PROCESS_DEFINITION_VERSION"
      javaType="java.lang.Integer"/>
    <result property="serializedCustomHeaders" column="CUSTOM_HEADERS" javaType="java.lang.String"/>
    <result property="priority" column="PRIORITY" javaType="java.lang.Integer"/>
    <result property="historyCleanupDate" column="HISTORY_CLEANUP_DATE" javaType="java.time.OffsetDateTime"/>
    <collection property="candidateGroups" ofType="java.lang.String" javaType="java.util.List">
      <id column="CANDIDATE_GROUP"/>
    </collection>
    <collection property="candidateUsers" ofType="java.lang.String" javaType="java.util.List">
      <id column="CANDIDATE_USER"/>
    </collection>
  </resultMap>

  <!-- default search statement for databases supporting LIMIT/OFFSET-->
  <select id="search"
    parameterType="io.camunda.db.rdbms.read.domain.UserTaskDbQuery"
    resultMap="io.camunda.db.rdbms.sql.UserTaskMapper.searchResultMap"
    statementType="PREPARED">
    SELECT * FROM (
    SELECT
    ut.*,
    cg.CANDIDATE_GROUP,
    cu.CANDIDATE_USER
    FROM
    ( SELECT * FROM (
    SELECT
    ut.USER_TASK_KEY,
    ut.ELEMENT_ID,
    ut.PROCESS_DEFINITION_ID,
    ut.CREATION_DATE,
    ut.COMPLETION_DATE,
    ut.ASSIGNEE,
    ut.STATE,
    ut.FORM_KEY,
    ut.PROCESS_DEFINITION_KEY,
    ut.PROCESS_INSTANCE_KEY,
    ut.ELEMENT_INSTANCE_KEY,
    ut.TENANT_ID,
    ut.DUE_DATE,
    ut.FOLLOW_UP_DATE,
    ut.EXTERNAL_FORM_REFERENCE,
    ut.PROCESS_DEFINITION_VERSION,
    ut.CUSTOM_HEADERS,
    ut.PRIORITY,
    ut.HISTORY_CLEANUP_DATE
    FROM ${prefix}USER_TASK ut
    <include refid="io.camunda.db.rdbms.sql.UserTaskMapper.searchFilter"/>
    ) filtered
    <include refid="io.camunda.db.rdbms.sql.Commons.keySetPageFilter"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.orderBy"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.paging"/>
    ) ut
    LEFT JOIN ${prefix}CANDIDATE_USER cu ON (cu.USER_TASK_KEY = ut.USER_TASK_KEY)
    LEFT JOIN ${prefix}CANDIDATE_GROUP cg ON (cg.USER_TASK_KEY = ut.USER_TASK_KEY)
    ) sorted
    <include refid="io.camunda.db.rdbms.sql.Commons.orderBy"/>
  </select>

  <select id="count"
    resultType="java.lang.Long"
    statementType="PREPARED">
    SELECT COUNT(*)
    FROM ${prefix}USER_TASK ut
    <include refid="io.camunda.db.rdbms.sql.UserTaskMapper.searchFilter"/>
  </select>

  <sql id="searchFilter">
    WHERE 1 = 1
    <!-- basic filters -->
    <if test="filter.userTaskKeys != null and !filter.userTaskKeys.isEmpty()">
      AND ut.USER_TASK_KEY IN
      <foreach close=")" collection="filter.userTaskKeys" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.elementIds != null and !filter.elementIds.isEmpty()">
      AND ut.ELEMENT_ID IN
      <foreach close=")" collection="filter.elementIds" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.elementInstanceKeys != null and !filter.elementInstanceKeys.isEmpty()">
      AND ut.ELEMENT_INSTANCE_KEY IN
      <foreach close=")" collection="filter.elementInstanceKeys" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.bpmnProcessIds != null and !filter.bpmnProcessIds.isEmpty()">
      AND ut.PROCESS_DEFINITION_ID IN
      <foreach close=")" collection="filter.bpmnProcessIds" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.assigneeOperations != null and !filter.assigneeOperations.isEmpty()">
      <foreach collection="filter.assigneeOperations" item="operation">
        AND ut.ASSIGNEE
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
    </if>
    <if test="filter.priorityOperations != null and !filter.priorityOperations.isEmpty()">
      <foreach collection="filter.priorityOperations" item="operation">
        AND ut.PRIORITY
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
    </if>
    <if test="filter.states != null and !filter.states.isEmpty()">
      AND ut.STATE IN
      <foreach close=")" collection="filter.states" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.processInstanceKeys != null and !filter.processInstanceKeys.isEmpty()">
      AND ut.PROCESS_INSTANCE_KEY IN
      <foreach close=")" collection="filter.processInstanceKeys" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.processDefinitionKeys != null and !filter.processDefinitionKeys.isEmpty()">
      AND ut.PROCESS_DEFINITION_KEY IN
      <foreach close=")" collection="filter.processDefinitionKeys" item="value" open="("
        separator=", ">#{value}
      </foreach>
    </if>
    <if test="filter.tenantIds != null and !filter.tenantIds.isEmpty()">
      AND ut.TENANT_ID IN
      <foreach close=")" collection="filter.tenantIds" item="value" open="(" separator=", ">
        #{value}
      </foreach>
    </if>

    <!-- candidate groups and users -->
    <if
      test="filter.candidateGroupOperations != null and !filter.candidateGroupOperations.isEmpty()">
      AND EXISTS (Select * from ${prefix}CANDIDATE_GROUP cg where cg.USER_TASK_KEY = ut.USER_TASK_KEY
      <foreach collection="filter.candidateGroupOperations" item="operation">
        AND cg.CANDIDATE_GROUP
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
      )
    </if>
    <if test="filter.candidateUserOperations != null and !filter.candidateUserOperations.isEmpty()">
      AND EXISTS (Select * from ${prefix}CANDIDATE_USER cu where cu.USER_TASK_KEY = ut.USER_TASK_KEY
      <foreach collection="filter.candidateUserOperations" item="operation">
        AND cu.CANDIDATE_USER
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
      )
    </if>

    <!-- Creation Date Filters -->
    <if test="filter.creationDateOperations != null and !filter.creationDateOperations.isEmpty()">
      <foreach collection="filter.creationDateOperations" item="operation">
        AND ut.CREATION_DATE
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
    </if>

    <!-- Completion Date Filters -->
    <if test="filter.completionDateOperations != null and !filter.completionDateOperations.isEmpty()">
      <foreach collection="filter.completionDateOperations" item="operation">
        AND ut.COMPLETION_DATE
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
    </if>

    <!-- Due Date Filters -->
    <if test="filter.dueDateOperations != null and !filter.dueDateOperations.isEmpty()">
      <foreach collection="filter.dueDateOperations" item="operation">
        AND ut.DUE_DATE
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
    </if>

    <!-- Follow-Up Date Filters -->
    <if test="filter.followUpDateOperations != null and !filter.followUpDateOperations.isEmpty()">
      <foreach collection="filter.followUpDateOperations" item="operation">
        AND ut.FOLLOW_UP_DATE
        <include refid="io.camunda.db.rdbms.sql.Commons.operationCondition"/>
      </foreach>
    </if>


    <!-- Variables Filter -->
    <if test="filter.processInstanceVariableFilter != null and !filter.processInstanceVariableFilter.isEmpty()">
      AND EXISTS (Select * from ${prefix}VARIABLE v where v.PROCESS_INSTANCE_KEY = ut.PROCESS_INSTANCE_KEY
      AND ( 1 = 1
      <foreach collection="filter.processInstanceVariableFilter" item="variableValueFilter">
        AND ( v.VAR_NAME = #{variableValueFilter.name}
        <if
          test="variableValueFilter.valueOperations != null and !variableValueFilter.valueOperations.isEmpty()">
          <foreach collection="variableValueFilter.valueOperations" item="operation">
            AND
            <include refid="io.camunda.db.rdbms.sql.Commons.variableOperationCondition"/>
          </foreach>
        </if>
        )
      </foreach>
      ))
    </if>

    <!-- Local Variables Filter -->
    <if test="filter.localVariableFilters != null and !filter.localVariableFilters.isEmpty()">
      AND EXISTS (Select * from ${prefix}VARIABLE v where v.SCOPE_KEY = ut.ELEMENT_INSTANCE_KEY
      AND (
      <foreach collection="filter.localVariableFilters" item="variableValueFilter" separator=" OR ">
        ( v.VAR_NAME = #{variableValueFilter.name}
        <if
          test="variableValueFilter.valueOperations != null and !variableValueFilter.valueOperations.isEmpty()">
          <foreach collection="variableValueFilter.valueOperations" item="operation">
            AND
            <include refid="io.camunda.db.rdbms.sql.Commons.variableOperationCondition"/>
          </foreach>
        </if>
        )
      </foreach>
      ))
    </if>



  </sql>

  <update
    flushCache="true"
    id="update"
    parameterType="io.camunda.db.rdbms.write.domain.UserTaskDbModel"
    statementType="PREPARED">
    UPDATE ${prefix}USER_TASK
    SET
    COMPLETION_DATE = #{completionDate},
    DUE_DATE = #{dueDate},
    <if test="state != null">
      STATE = #{state},
    </if>
    FOLLOW_UP_DATE = #{followUpDate},
    CUSTOM_HEADERS = #{serializedCustomHeaders},
    PRIORITY = #{priority},
    ASSIGNEE = #{assignee},
    HISTORY_CLEANUP_DATE = #{historyCleanupDate, jdbcType=TIMESTAMP}
    WHERE USER_TASK_KEY = #{userTaskKey}
  </update>

  <delete
    flushCache="true"
    id="deleteCandidateUsers"
    parameterType="java.lang.Long"
    statementType="PREPARED">
    DELETE
    FROM ${prefix}CANDIDATE_USER
    WHERE USER_TASK_KEY = #{userTaskKey}
  </delete>

  <delete
    flushCache="true"
    id="deleteCandidateGroups"
    parameterType="java.lang.Long"
    statementType="PREPARED">
    DELETE
    FROM ${prefix}CANDIDATE_GROUP
    WHERE USER_TASK_KEY = #{userTaskKey}
  </delete>

  <update
    flushCache="true"
    id="updateHistoryCleanupDate"
    statementType="PREPARED">
    UPDATE ${prefix}USER_TASK SET
    HISTORY_CLEANUP_DATE = #{historyCleanupDate, jdbcType=TIMESTAMP}
    WHERE PROCESS_INSTANCE_KEY = #{processInstanceKey}
  </update>

  <update
    flushCache="true"
    id="migrateToProcess"
    parameterType="java.util.Map"
    statementType="PREPARED">
    UPDATE ${prefix}USER_TASK SET
    ELEMENT_ID = #{elementId},
    PROCESS_DEFINITION_ID = #{processDefinitionId},
    PROCESS_DEFINITION_KEY = #{processDefinitionKey},
    PROCESS_DEFINITION_VERSION = #{processDefinitionVersion}
    WHERE USER_TASK_KEY = #{userTaskKey}
  </update>

  <delete
    flushCache="true"
    id="cleanupHistory"
    statementType="PREPARED">
    <bind name="tableName" value="'USER_TASK'"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.historyCleanup"/>
  </delete>

</mapper>
