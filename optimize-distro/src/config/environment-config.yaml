---
###############################################################################
#                                                                             #
#                     Optimize Environment Configuration                      #
#                                                                             #
###############################################################################

# Note: for all possible configuration options please have a look
#       at the Optimize documentation:
#       https://docs.camunda.io/optimize/${docs.version}/self-managed/optimize-deployment/configuration/getting-started/

# A global access token used by all public APIs of Optimize
api:
  # Secret token to be provided on public APIs of Optimize.
  # If set `null` an error will be thrown on any API access
  accessToken: ${OPTIMIZE_API_ACCESS_TOKEN:null}

container:
  # A host name or IP address, to identify a specific network interface on
  # which to listen.
  host: 0.0.0.0
  ports:
    # A port number that will be used by Optimize to process HTTP connections.
    # If set to null, ~ or left empty, http connections won't be accepted.
    http: 8090
    # A port number that will be used by Optimize to process
    # secure HTTPS connections.
    https: 8091
  # Optional url to access Optimize (used for links to Optimize in e.g. alert emails)
  # If no value specified the container host and port are used instead.
  accessUrl: null

# everything that is related with configuring Elasticsearch or creating
# a connection to it.
es:
  connection:
    # a list of Elasticsearch nodes Optimize can connect to. If you  have built
    # an Elasticsearch cluster with several nodes it is recommended to define
    # several connection points in case one node fails.
    nodes:
      # the address/hostname under which the Elasticsearch node is available.
      - host: 'localhost'
        # A port number used by Elasticsearch to accept HTTP connections.
        httpPort: 9200
    # HTTP forward proxy configuration
    proxy:
      # whether an HTTP proxy should be used for requests to elasticsearch
      enabled: false
      # the host of the proxy to use
      host: null
      # the port of the proxy to use
      port: null
      # whether this proxy is using a secured connection
      sslEnabled: false

  # Elasticsearch security settings
  security:
    # the basic auth (x-pack) username
    username: null
    # the basic auth (x-pack) password
    password: null
    # SSL/HTTPS secured connection settings
    ssl:
      # path to a PEM encoded file containing the certificate (or certificate chain)
      # that will be presented to clients when they connect.
      certificate: null
      # A list of paths to PEM encoded CA certificate files that should be trusted, e.g. ['/path/to/ca.crt'].
      # Note: if you are using a public CA that is already trusted by the Java runtime,
      # you do not need to set the certificate_authorities.
      certificate_authorities: []
      # used to enable or disable TLS/SSL for the HTTP connection
      enabled: false

  settings:
    index:
      # the prefix prepended to all Optimize index and alias names
      # NOTE: Changing this after Optimize was already run before, will create new empty indexes
      prefix: 'optimize'
      # How often should the data replicated in case of node failure.
      number_of_replicas: 1
      # How many shards should be used in the cluster for process instance and decision instance indices.
      # All other indices will be made up of a single shard
      # NOTE: this property only applies the first time Optimize is started and
      # the schema/mapping is deployed on Elasticsearch. If you want to take
      # this property to take effect again, you need to delete all indexes (with it all data)
      # and restart Optimize.
      number_of_shards: 1

import:
  data:
    dmn:
      # Determines if the DMN/decision data, such as decision definitions and instances
      # should be imported.
      enabled: true
    user-task-worker:
      # Determines if the user task worker data, such as assignee or candidate group id of a user task, should be imported.
      enabled: true
      # This sub-section controls to what extent and how Optimize fetches and displays metadata of user task workers.
      # The particular metadata is first-, last name and the email of the users or the names of the candidate groups.
      # The data is displayed in the context of reports when grouping/distributing by assignees/candidateGroups or
      # when filtering on them.
      metadata:
        # Determines whether Optimize imports and displays assignee user metadata, otherwise only the user id is shown.
        includeUserMetaData: true
        # Cron expression for when to fully refresh the internal metadata cache, it defaults to every third hour.
        # Otherwise deleted assignees/candidateGroups or metadata changes are not reflected in Optimize.
        cronTrigger: '0 */3 * * *'
  # The identity sync enables Optimize to build up a in memory cache containing Optimize authorized users & groups.
  # This data is used in the collection permissions to allow convenient search capabilities
  # and to display member meta-data such as first name, last name or email.
  identitySync:
    # Whether to include metaData (firstName, lastName, email) when synchronizing users
    includeUserMetaData: true
    # Cron expression for when the identity sync should run, defaults to every second hour.
    cronTrigger: '0 */2 * * *'

serialization:
  # Define a custom date format that should be used for
  # fetching date data from the engine(should be the same as in the engine)
  engineDateFormat: yyyy-MM-dd'T'HH:mm:ss.SSSZ

email:
  # A switch to control email sending process.
  enabled: false
  # Email address that can be used to send alerts or digest emails
  address: ''
  # The smtp server name
  hostname: ''
  # The smtp server port. This one is also used as SSL port for the security connection.
  port: 587
  # Define configuration properties for the authentication of the email server
  authentication:
    # A switch to control whether the email server requires authentication
    enabled: true
    # Username of your smtp server
    username: ''
    # Corresponding password to the given user of your smtp server
    password: ''
    # States how the connection to the server should be secured.
    # Possible values are 'NONE', 'STARTTLS' or 'SSL/TLS'
    securityProtocol: 'NONE'

webhookAlerting:
  webhooks:
  # Name of the webhook, must be unique.
#    'myWebhook':
#      # URL of the webhook which can receive alerts from Optimize
#      url: 'someUrl'
#      # Map of the headers of the request sent to the webhook URL
#      headers:
#        'Authorization': 'auth token'
#        'Content-type': 'application/json'
#      # HTTP Method for the webhook request
#      httpMethod: 'POST'
#      # The default payload structure with the alertMessagePlaceholder {{ALERT_MESSAGE}} for the alert text.
#      # Optimize will replace this placeholder with the content of the alert message.
#      defaultPayload: '{"text": "{{ALERT_MESSAGE}}"}'

sharing:
  # decides if the sharing feature of Optimize can be used in the UI.
  enabled: true

historyCleanup:
  # cron expression for when the cleanup should run
  cronTrigger: '0 1 * * *'
  # default time to live (ttl) for data, when reached the corresponding process/decision/event instances will get cleaned up
  # Format is ISO_8601 duration  https://en.wikipedia.org/wiki/ISO_8601#Durations
  ttl: 'P2Y'
  processDataCleanup:
    # switch for the Camunda process data cleanup, defaults to false
    enabled: false
    # type of process data cleanup to perform, possible values:
    # 'all' - delete everything related to the process instance
    # 'variables' - only delete associated variables of a process instance
    cleanupMode: 'all'
    # process definition specific configuration parameters that will overwrite the general parameters (ttl, processDataCleanupMode)
    # for the specific processDefinition key
    perProcessDefinitionConfig:
    # 'myProcessDefinitionKey':
    #   ttl: 'P2M'
    #   cleanupMode: 'variables'

locales:
  # all locales available
  # Note: for others than the default there must be a <localeCode>.json file available under ./config/localization.
  availableLocales: ['en', 'de']
  # the fallback locale is used if there is a locale requested that is not available in availableLocales
  fallbackLocale: 'en'

ui:
  # If you have SSO enabled, you can set the property below to hide the logout option if it is not needed
  logoutHidden: false

telemetry:
  # Sets the initial property value of telemetry configuration once when it has never been enabled/disabled before.
  initializeTelemetry: false
