<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda.optimize</groupId>
    <artifactId>optimize-qa</artifactId>
    <version>8.7.0-SNAPSHOT</version>
  </parent>

  <artifactId>optimize-schema-integrity-tests</artifactId>

  <properties>
    <old.database.port>9250</old.database.port>
    <new.database.port>9200</new.database.port>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-high-level-client</artifactId>
      <version>7.17.24</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opensearch.client</groupId>
      <artifactId>opensearch-java</artifactId>
      <version>${opensearch.client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.camunda.optimize</groupId>
      <artifactId>optimize-backend</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.camunda.optimize</groupId>
      <artifactId>optimize-backend</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.camunda.optimize</groupId>
      <artifactId>upgrade-optimize</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/java/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-test-resources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>false</redirectTestOutputToFile>
          <failIfNoTests>true</failIfNoTests>
          <systemPropertyVariables>
            <previousVersion>${project.previousVersion}</previousVersion>
            <currentVersion>${project.version}</currentVersion>
            <buildDirectory>${project.build.directory}</buildDirectory>
            <oldDatabasePort>${old.database.port}</oldDatabasePort>
            <newDatabasePort>${new.database.port}</newDatabasePort>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.dkanejs.maven.plugins</groupId>
        <artifactId>docker-compose-maven-plugin</artifactId>
        <version>4.0.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-previous-and-current-optimize</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>io.camunda.optimize</groupId>
                  <artifactId>camunda-optimize</artifactId>
                  <version>${project.previousVersion}</version>
                  <type>tar.gz</type>
                  <classifier>production</classifier>
                  <!-- we want to use environment variables as present in the internal service-config -->
                  <!-- thus excluding the default environment-config -->
                  <excludes>**/environment-config.yaml</excludes>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/${project.previousVersion}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>io.camunda.optimize</groupId>
                  <artifactId>camunda-optimize</artifactId>
                  <version>${project.version}</version>
                  <type>tar.gz</type>
                  <classifier>production</classifier>
                  <!-- we want to use environment variables as present in the internal service-config -->
                  <!-- thus excluding the default environment-config -->
                  <excludes>**/environment-config.yaml</excludes>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/${project.version}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
            <configuration>
              <composeFile>${project.basedir}/docker-compose.yml</composeFile>
              <detachedMode>true</detachedMode>
              <removeVolumes>true</removeVolumes>
              <envVars>
                <NEW_ES_VERSION>${elasticsearch.test.version}</NEW_ES_VERSION>
                <NEW_ES_PORT>${new.database.port}</NEW_ES_PORT>
                <OLD_ES_VERSION>${previous.optimize.elasticsearch.version}</OLD_ES_VERSION>
                <OLD_ES_PORT>${old.database.port}</OLD_ES_PORT>
              </envVars>
            </configuration>
            <executions>
              <!-- Starting old and new ES through docker-compose -->
              <execution>
                <id>docker-compose-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>up</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-compose-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>down</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>es-schema-integrity-tests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/UpgradeElasticsearchSchemaIT.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>os-schema-integrity-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/UpgradeOpenSearchSchemaIT.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
