<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda</groupId>
    <artifactId>zeebe-parent</artifactId>
    <version>8.8.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>

  <groupId>io.camunda.optimize</groupId>
  <artifactId>optimize-parent</artifactId>
  <version>8.8.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Optimize Parent</name>

  <organization>
    <name>Camunda Services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <modules>
    <!-- client should be built before distro -->
    <module>client</module>
    <module>util</module>
    <module>backend</module>
    <module>../optimize-distro</module>
    <module>upgrade</module>
    <module>qa</module>
  </modules>

  <scm>
    <connection>scm:git:https://${env.GITHUB_TOKEN_USR}:${env.GITHUB_TOKEN_PSW}@github.com/camunda/camunda.git</connection>
    <developerConnection>scm:git:https://${env.GITHUB_TOKEN_USR}:${env.GITHUB_TOKEN_PSW}@github.com/camunda/camunda.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/camunda/camunda</url>
  </scm>

  <issueManagement>
    <system>Jira</system>
    <url>https://app.camunda.com/jira/browse/OPT/</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-optimize/</url>
    </repository>
    <snapshotRepository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-optimize-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.previousVersion>8.7.0</project.previousVersion>
    <camunda.maven.artifacts.version>7.22.0</camunda.maven.artifacts.version>

    <!-- We use this version to compile but run IT against containers with zeebe.docker.version -->
    <zeebe.version>8.6.0</zeebe.version>
    <identity.version>8.6.0</identity.version>
    <!-- We use this for the Zeebe test container version only -->
    <zeebe.docker.version>8.7.0-alpha4</zeebe.docker.version>

    <!-- maven plugins -->
    <surefire-plugin.version>3.5.2</surefire-plugin.version>

    <!-- maven dependency plugin -->
    <dependencyAnalyzeFailOnWarning>false</dependencyAnalyzeFailOnWarning>
    <dependencyAnalyze.failOnWarning>${dependencyAnalyzeFailOnWarning}</dependencyAnalyze.failOnWarning>

    <!-- DATABASE -->
    <!-- Elasticsearch-->
    <elasticsearch.client.version>8.13.0</elasticsearch.client.version>
    <elasticsearch.client.test.version>7.17.25</elasticsearch.client.test.version>

    <!--The least supported opensearch version we should test against-->
    <opensearch.test.version>2.10.0</opensearch.test.version>
    <!--the opensearch version of the previous Optimize version -->
    <previous.optimize.opensearch.version>2.9.0</previous.optimize.opensearch.version>
    <!--The least supported elasticsearch version we should test against-->
    <elasticsearch.test.version>8.13.0</elasticsearch.test.version>
    <!--the ElasticSearch version of the previous Optimize version -->
    <previous.optimize.elasticsearch.version>8.13.0</previous.optimize.elasticsearch.version>
    <!-- https://www.elastic.co/guide/en/elasticsearch/client/java-api/6.5/_using_another_logger.html -->
    <elasticsearch.log4j.version>2.24.2</elasticsearch.log4j.version>
    <!-- OpenSearch-->
    <opensearch.client.version>2.10.4</opensearch.client.version>
    <!--The least supported opensearch version we should test against-->
    <opensearch.test.version>2.10.0</opensearch.test.version>
    <!-- the opensearch version of the previous Optimize version -->
    <previous.optimize.opensearch.version>2.9.0</previous.optimize.opensearch.version>
    <awssdk.version>2.29.32</awssdk.version>
    <jsonpath.version>2.9.0</jsonpath.version>
    <apache.http5-client.version>5.4</apache.http5-client.version>
    <quartz.version>2.5.0</quartz.version>
    <jakarta.rs-api.version>4.0.0</jakarta.rs-api.version>

    <!-- remove these versions.anything properties once we inherit from zeebe-parent -->
    <version.node>v20.9.0</version.node>
    <version.yarn>v1.22.19</version.yarn>
    <version.jackson>2.18.2</version.jackson>

    <!-- testing config -->
    <mockito.version>5.15.2</mockito.version>
    <mockito-inline.version>5.2.0</mockito-inline.version>
    <junit.jupiter.version>5.11.4</junit.jupiter.version>
    <junit.platform.version>1.11.4</junit.platform.version>
    <mockserver.version>5.15.0</mockserver.version>
    <assertj.version>3.27.3</assertj.version>
    <google-java-format.plugin.version>1.25.2</google-java-format.plugin.version>
    <!-- This is the default profile used for the DB selection in tests -->
    <database.type>elasticsearch</database.type>

    <quickly>false</quickly>
    <skipTests>${quickly}</skipTests>
    <skip.docker>${skipTests}</skip.docker>
    <skip.unit.tests>${skipTests}</skip.unit.tests>
    <skip.docker>false</skip.docker>
    <docker.compose.file>docker-compose.yml</docker.compose.file>

    <maven.compiler.target>21</maven.compiler.target>
    <maven.compiler.source>21</maven.compiler.source>
    <spring-boot.version>3.4.3</spring-boot.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${version.spring}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${version.jackson}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Common test dependencies-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit.platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <version>${junit.platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito-inline.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-junit-jupiter</artifactId>
      <version>${mockserver.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.github.netmikey.logunit</groupId>
      <artifactId>logunit-core</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>${version.httpclient}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.2.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http</artifactId>
    </dependency>
  </dependencies>

  <!-- Fix for bug with downloading snapshots from Camunda Nexus using groups with RELEASE and SNAPSHOTS -->
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>camunda-nexus</id>
      <name>Camunda Nexus</name>
      <url>https://artifacts.camunda.com/artifactory/internal/</url>
    </repository>

    <repository>
      <id>central</id>
      <name>Maven Central</name>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>

    <!-- add the elasticsearch repo -->
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>elasticsearch-releases</id>
      <url>https://artifacts.elastic.co/maven</url>
      <layout>default</layout>
    </repository>

    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>camunda-cpm</id>
      <name>Camunda BPM Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-bpm/</url>
    </repository>

    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>camunda-bpm-snapshots</id>
      <name>Camunda BPM Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-bpm-snapshots/</url>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <failOnWarning>${dependencyAnalyze.failOnWarning}</failOnWarning>
            <ignoredUnusedDeclaredDependencies combine.children="append">
              <dep>io.camunda:identity-spring-boot-starter</dep>
              <dep>io.micrometer:micrometer-registry-prometheus-simpleclient</dep>
              <dep>jakarta.annotation:jakarta.annotation-api</dep>
              <dep>jakarta.servlet:jakarta.servlet-api</dep>
              <dep>org.apache.httpcomponents.core5:httpcore5</dep>
              <dep>org.apache.logging.log4j:log4j-api</dep>
              <dep>org.apache.logging.log4j:log4j-slf4j2-impl</dep>
              <dep>org.codehaus.janino:janino</dep>
              <dep>org.eclipse.angus:jakarta.mail</dep>
              <dep>org.springframework:spring-tx</dep>
              <dep>org.springframework.boot:spring-boot-starter-tomcat</dep>
              <dep>org.springframework.boot:spring-boot-starter-web</dep>
              <dep>software.amazon.awssdk:sdk-core</dep>
              <dep>software.amazon.awssdk:sts</dep>
              <dep>org.javassist:javassist</dep>

              <!-- test dependencies -->
              <dep>com.sun.mail:jakarta.mail</dep>
              <dep>io.camunda:zeebe-build-tools</dep>
              <dep>io.camunda.optimize:optimize-backend</dep>
              <dep>io.camunda.optimize:optimize-backend:test-jar</dep>
              <dep>io.camunda.optimize:upgrade-optimize</dep>
              <dep>io.github.netmikey.logunit:logunit-core</dep>
              <dep>io.github.netmikey.logunit:logunit-log4j2</dep>
              <dep>io.netty:netty-codec-http</dep>
              <dep>org.apache.httpcomponents:httpmime</dep>
              <dep>org.apache.logging.log4j:log4j-core</dep>
              <dep>org.apache.logging.log4j:log4j-slf4j-impl</dep>
              <dep>org.apache.logging.log4j:log4j-slf4j2-impl</dep>
              <dep>org.assertj:assertj-core</dep>
              <dep>org.awaitility:awaitility</dep>
              <dep>org.junit.jupiter:junit-jupiter-api</dep>
              <dep>org.junit.jupiter:junit-jupiter-engine</dep>
              <dep>org.junit.jupiter:junit-jupiter-params</dep>
              <dep>org.junit.platform:junit-platform-commons</dep>
              <dep>org.junit.platform:junit-platform-launcher</dep>
              <dep>org.mock-server:mockserver-junit-jupiter</dep>
              <dep>org.mockito:mockito-inline</dep>
              <dep>org.mockito:mockito-junit-jupiter</dep>
              <dep>org.springframework.boot:spring-boot-starter-test</dep>
              <dep>org.glassfish.jersey.core:jersey-client</dep>
              <dep>org.glassfish.jersey.media:jersey-media-json-jackson</dep>
            </ignoredUnusedDeclaredDependencies>
            <ignoredNonTestScopedDependencies combine.children="append">
              <dep>com.fasterxml.jackson.datatype:jackson-datatype-jdk8</dep>
              <dep>com.fasterxml.jackson.datatype:jackson-datatype-jsr310</dep>
              <dep>commons-collections:commons-collections</dep>
              <dep>org.apache.httpcomponents:httpcore-nio</dep>
              <dep>org.apache.tika:tika-core</dep>
              <dep>org.opensearch.client:opensearch-java</dep>
              <dep>org.opensearch.client:opensearch-rest-client</dep>
            </ignoredNonTestScopedDependencies>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>templating-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire-plugin.version}</version>
          <configuration>
            <skipTests>${skip.unit.tests}</skipTests>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <useModulePath>false</useModulePath>
            <argLine>--add-opens java.base/java.lang=ALL-UNNAMED
              --add-opens java.base/java.util=ALL-UNNAMED</argLine>
            <systemPropertyVariables>
              <database.type>${database.type}</database.type>
            </systemPropertyVariables>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit.jupiter.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${surefire-plugin.version}</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <useModulePath>false</useModulePath>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.7.0</version>
          <extensions>true</extensions>
          <configuration>
            <serverId>camunda-nexus</serverId>
            <nexusUrl>https://artifacts.camunda.com/artifactory/</nexusUrl>
            <skipStaging>true</skipStaging>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.3</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.15.1</version>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.6</version>
        </plugin>
        <!-- Google code format plugin -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.44.3</version>
          <configuration>
            <java>
              <includes>
                <include>**/*.java</include>
              </includes>
              <googleJavaFormat>
                <version>${google-java-format.plugin.version}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
            </java>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.google.googlejavaformat</groupId>
              <artifactId>google-java-format</artifactId>
              <version>${google-java-format.plugin.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>directory-of</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <property>parent.basedir</property>
              <project>
                <groupId>io.camunda.optimize</groupId>
                <artifactId>optimize-parent</artifactId>
              </project>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <licenseSets>
            <licenseSet>
              <header>${maven.multiModuleProjectDirectory}/parent/COPYING-HEADER.txt</header>
              <includes>
                <include>**/*.java</include>
              </includes>
            </licenseSet>
          </licenseSets>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <id>check-java-copyright</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <release>${maven.compiler.target}</release>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <profiles>

    <!-- release profile-->
    <profile>
      <id>release</id>
      <properties>
        <skip.docker>true</skip.docker>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>3.1.1</version>
            <configuration>
              <localCheckout>true</localCheckout>
              <scmCommentPrefix xml:space="preserve">build: </scmCommentPrefix>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>attach-test-sources</id>
                <goals>
                  <goal>test-jar-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- testing profiles-->
    <profile>
      <id>it</id>
      <properties>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>
    <profile>
      <id>ccsm-it</id>
      <properties>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>

    <!-- database profiles-->
    <profile>
      <id>elasticsearch</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <database.type>elasticsearch</database.type>
      </properties>
    </profile>
    <!-- database profiles-->
    <profile>
      <id>opensearch</id>
      <properties>
        <database.type>opensearch</database.type>
      </properties>
    </profile>

    <!-- profile to auto format -->
    <profile>
      <id>autoFormat</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-format</id>
                <goals>
                  <goal>apply</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- profile to perform strict validation checks -->
    <profile>
      <id>checkFormat</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
