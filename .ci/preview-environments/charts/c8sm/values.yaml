---
# Default values for the Connectors preview environment

# Global values
global:

  # Common labels
  labels:
    # app label will be dynamically set according to preview envrionment name
    app: monorepo
    camunda.cloud/managed-by: Helm
    camunda.cloud/source: argocd
    team: monorepo-devops
  
  image:
    pullSecrets:
    - name: dockerhub-registry
    - name: registry-camunda-cloud

  # still required by some subcharts (e.g. elasticsearch)
  imagePullSecrets:
  - name: dockerhub-registry
  - name: registry-camunda-cloud

  # Preview environment configurations
  preview:
    git:
      # GitHub references for annotating resources
      # Branch name will be dynamically set with PR branch name
      branch: main
      repoUrl: https://github.com/camunda/camunda
    ingress:
      # The domain name under which to expose the preview environment
      domain: camunda.camunda.cloud

  # Camunda 8 Self-Managed global configurations
  elasticsearch:
    # necessary due to name override bugs
    url:
      host: elasticsearch

  identity:
    auth:
      # Enable Camunda Identity-based authentication
      enabled: true
      # Token issuer (Keycloak) URL
      publicIssuerUrl: https://{{ include "ingress.domain" . }}/auth/realms/camunda-platform
      admin:
        enabled: true
      console:
        redirectUrl: https://{{ include "ingress.domain" . }}/console
        secret:
          existingSecret: camunda-credentials
          existingSecretKey: identity-console-client-token
      orchestration:
        redirectUrl: https://{{ include "ingress.domain" . }}/orchestration
      optimize:
        redirectUrl: https://{{ include "ingress.domain" . }}/optimize
        secret:
          existingSecret: camunda-credentials
          existingSecretKey: identity-optimize-client-token
      webModeler:
        redirectUrl: https://{{ include "ingress.domain" . }}/modeler
    keycloak:
      contextPath: /auth

  secrets:
    name: camunda-credentials

  zeebeClusterName: zeebe-cluster


# Camunda 8 Self-Managed configurations
camunda-platform:

  fullnameOverride: camunda

  connectors:
    enabled: true
    fullnameOverride: connectors
    contextPath: /connectors
    # image:
    #   registry: camunda/connectors-bundle
    security:
      authentication:
        method: oidc
        oidc:
          secret:
            existingSecret: camunda-credentials
            existingSecretKey: identity-connectors-client-token
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 0.5
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    persistence:
      enabled: true
      size: 50Mi
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  console:
    enabled: true
    fullnameOverride: console
    contextPath: /console
    # image:
    #   registry: camunda/console
    # Overrides the default service URL because the preview environment
    # is exposed through its own (separate)ingress controller.
    overrideConfiguration: |
      camunda:
        console:
          managed:
            method: plain
            releases:
            - name: {{ .Release.Name }}
              namespace: {{ .Release.Namespace }}
              components:
              - id: console
                url: https://{{ include "ingress.domain" . }}{{ .Values.console.contextPath }}
              - id: keycloak
                url: https://{{ include "ingress.domain" . }}{{ .Values.global.identity.keycloak.contextPath }}
              - id: identity
                url: https://{{ include "ingress.domain" . }}{{ .Values.identity.contextPath }}
              - id: webModelerWebApp
                url: https://{{ include "ingress.domain" . }}{{ .Values.webModeler.contextPath }}
              - id: optimize
                url: https://{{ include "ingress.domain" . }}{{ .Values.optimize.contextPath }}
              - id: operate
                url: https://{{ include "ingress.domain" . }}{{ .Values.orchestration.contextPath }}/operate
              - id: tasklist
                url: https://{{ include "ingress.domain" . }}{{ .Values.orchestration.contextPath }}/tasklist
              - id: coreIdentity
                url: https://{{ include "ingress.domain" . }}{{ .Values.orchestration.contextPath }}/identity
              - id: connectors
                url: https://{{ include "ingress.domain" . }}{{ .Values.connectors.contextPath }}
              - id: core
                urls:
                  http: https://{{ include "ingress.domain" . }}{{ .Values.orchestration.contextPath }}
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 0.5
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  orchestration:
    enabled: true
    fullnameOverride: orchestration
    contextPath: /orchestration
    image:
      registry: registry.camunda.cloud
      repository: team-camunda/camunda
    clusterSize: "1"
    partitionCount: "1"
    replicationFactor: "1"
    persistenceType: disk
    pvcSize: 1Gi
    javaOpts: >-
      -Xms512m -Xmx512m
      -XX:+HeapDumpOnOutOfMemoryError
      -XX:HeapDumpPath=/usr/local/zeebe/data
      -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log
      -XX:+ExitOnOutOfMemoryError
    security:
      authentication:
        method: oidc
        oidc:
          secret:
            existingSecret: camunda-credentials
            existingSecretKey: identity-orchestration-client-token
    data:
      disk:
        ## Adjustement required due to PVC size
        freeSpace:
          processing: 110MB
          replication: 10MB
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: "500m"
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  elasticsearch:
    enabled: true
    fullnameOverride: elasticsearch
    # image:
    #   repository: bitnami/elasticsearch
    #   tag: latest
    master:
      fullnameOverride: elasticsearch-master
      replicaCount: 1
      heapSize: 512m
      persistence:
        enabled: true
        size: 1Gi
      resources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 0.5
          memory: 512Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"

  identity:
    enabled: true
    fullnameOverride: identity
    contextPath: /identity
    fullURL: https://{{ include "ingress.domain" . }}{{ .Values.identity.contextPath }}
    # image:
    #     repository: camunda/identity
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    persistence:
      enabled: true
      size: 50Mi
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  identityKeycloak:
    enabled: true
    fullnameOverride: identity-keycloak
    extraEnvVars:
    # Required as TLS is enabled 
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"
    postgresql:
      fullnameOverride: identity-keycloak-postgresql
      primary:
        persistence:
          enabled: true
          size: 1Gi
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        nodeSelector:
          cloud.google.com/gke-nodepool: previews
        tolerations:
        - key: "previews"
          operator: "Exists"
          effect: "NoSchedule"

  optimize:
    enabled: true
    fullnameOverride: optimize
    contextPath: /optimize
    partitionCount: "1"
    image:
      registry: registry.camunda.cloud
      repository: team-camunda/optimize
    security:
      authentication:
        method: oidc
        oidc:
          secret:
            existingSecret: camunda-credentials
            existingSecretKey: identity-optimize-client-token
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    persistence:
      enabled: false
      size: 50Mi
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  webModeler:
    enabled: true
    fullnameOverride: web-modeler
    contextPath: /modeler
    restapi:
      # image:
      #   repository: camunda/web-modeler-restapi
      mail:
        # This value is required, otherwise, the restapi pod won't start.
        fromAddress: noreply@example.com
      # Override cluster configuration to provide valid version and complete config
      # The Helm chart would auto-generate cluster config but uses the image tag as version
      # which fails validation for PR builds (e.g., "pr-abc123...")
      # When providing clusters override, ALL fields must be specified
      clusters:
        - id: "default-cluster"
          name: "Default Cluster"
          version: "8.8.0"
          authentication: "BEARER_TOKEN"
          authorizations:
            enabled: true
          url:
            grpc: "grpc://orchestration-gateway:26500"
            rest: "http://orchestration-gateway:8080/orchestration"
            web-app: "https://{{ include \"ingress.domain\" . }}/orchestration"
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"
    webapp:
      # image:
      #   repository: camunda/web-modeler-webapp
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 40m
          memory: 256Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"
    websockets:
      # image:
      #   repository: camunda/web-modeler-websockets
      resources:
        limits:
          cpu: 20m
          memory: 64Mi
        requests:
          cpu: 20m
          memory: 64Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"

  # WebModeler PostgreSQL
  webModelerPostgresql:
    enabled: true
    fullnameOverride: web-modeler-postgresql
    auth:
      # fixed secret, to avoid generating a random password each time
      existingSecret: camunda-credentials
    primary:
      persistence:
        enabled: true
        size: 1Gi
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"
