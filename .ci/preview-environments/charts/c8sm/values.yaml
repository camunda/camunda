---
# Default values for the Connectors preview environment

# Global values accessible from any chart or subchart
global:

  # Common labels
  labels:
    # app label will be dynamically set according to preview envrionment name
    app: monorepo
    camunda.cloud/managed-by: Helm
    camunda.cloud/source: argocd
    team: monorepo-devops
  
  image:
    pullSecrets:
    - name: dockerhub-registry
    - name: registry-camunda-cloud

  # still required by some subcharts (e.g. elasticsearch)
  imagePullSecrets:
  - name: dockerhub-registry
  - name: registry-camunda-cloud

  # Preview environment configurations
  preview:
    git:
      # GitHub references for annotating resources
      # Branch name will be dynamically set with PR branch name
      branch: main
      repoUrl: https://github.com/camunda/camunda
    ingress:
      # The domain name under which to expose the preview environment
      domain: camunda.camunda.cloud

  # Camunda 8 Self-Managed global configurations
  elasticsearch:
    # necessary due to name override bugs
    url:
      host: elasticsearch
  identity:
    auth:
      # Enable Camunda Identity-based authentication
      enabled: true
      # Token issuer (Keycloak) URL
      publicIssuerUrl: https://{{ include "ingress.domain" . }}/auth/realms/camunda-platform
      connectors:
        # fixed secret, to avoid generating a random one each time
        existingSecret: connectors
      operate:
        # fixed secret, to avoid generating a random one each time
        existingSecret: operate
        redirectUrl: https://{{ include "ingress.domain" . }}/operate
      optimize:
        # fixed secret, to avoid generating a random one each time
        existingSecret: optimize
        redirectUrl: https://{{ include "ingress.domain" . }}/optimize
      tasklist:
        # fixed secret, to avoid generating a random one each time
        existingSecret: tasklist
        redirectUrl: https://{{ include "ingress.domain" . }}/tasklist
      webModeler:
        redirectUrl: https://{{ include "ingress.domain" . }}/modeler
      zeebe:
        # fixed secret, to avoid generating a random one each time
        existingSecret: zeebe
    keycloak:
      auth:
        # necessary due to name override bugs
        adminUser: admin
        existingSecret: identity-keycloak
        existingSecretKey: admin-password
  zeebeClusterName: zeebe-cluster


# Camunda 8 Self-Managed configurations
camunda-platform:

  fullnameOverride: camunda

  # Out-of-the-box Connectors
  connectors:
    enabled: true
    fullnameOverride: connectors
    # image:
    #   registry: registry.camunda.cloud
    #   repository: team-connectors/connectors-bundle
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  elasticsearch:
    enabled: true
    fullnameOverride: elasticsearch
    # image:
    #   repository: bitnami/elasticsearch
    #   tag: latest
    master:
      fullnameOverride: elasticsearch-master
      replicaCount: 1
      heapSize: 512m
      persistence:
        enabled: true
        size: 1Gi
      resources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"

  identity:
    enabled: true
    fullnameOverride: identity
    contextPath: /identity
    fullURL: https://{{ include "ingress.domain" . }}{{ .Values.identity.contextPath }}
    # image:
    #     repository: camunda/identity
    #     tag: latest
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  identityKeycloak:
    enabled: true
    fullnameOverride: identity-keycloak
    auth:
      adminUser: admin
      adminPassword: admin
    externalDatabase:
      password: postgresql
    extraEnvVars:
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"
    postgresql:
      fullnameOverride: identity-keycloak-postgresql
      auth:
        # fixed secret, to avoid generating a random password each time
        password: postgresql
      primary:
        persistence:
          enabled: true
          size: 1Gi
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        nodeSelector:
          cloud.google.com/gke-nodepool: previews
        tolerations:
        - key: "previews"
          operator: "Exists"
          effect: "NoSchedule"

  operate:
    enabled: true
    fullnameOverride: operate
    contextPath: /operate
    # image:
    #   registry: registry.camunda.cloud
    #   repository: team-camunda/operate
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    # - name: SPRING_PROFILES_ACTIVE
    #   value: dev-data
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    livenessProbe:
      enabled: true
      # Force restart if not ready
      probePath: /actuator/health/readiness
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  optimize:
    enabled: true
    fullnameOverride: optimize
    contextPath: /optimize
    partitionCount: 1
    image:
      registry: registry.camunda.cloud
      repository: team-camunda/optimize
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  tasklist:
    enabled: true
    fullnameOverride: tasklist
    contextPath: /tasklist
    # image:
    #   registry: registry.camunda.cloud
    #   repository: team-camunda/tasklist
    env:
    - name: JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  webModeler:
    enabled: true
    fullnameOverride: web-modeler
    contextPath: /modeler
    restapi:
      # image:
      #   repository: web-modeler-ee/modeler-restapi
      mail:
        # This value is required, otherwise, the restapi pod won't start.
        fromAddress: noreply@example.com
      resources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"
    webapp:
      # image:
      #   repository: web-modeler-ee/modeler-webapp
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 40m
          memory: 256Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"
    websockets:
      # image:
      #   repository: web-modeler-ee/modeler-websockets
      resources:
        limits:
          cpu: 20m
          memory: 64Mi
        requests:
          cpu: 20m
          memory: 64Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"

  # WebModeler PostgreSQL
  postgresql:
    enabled: true
    fullnameOverride: web-modeler-postgresql
    auth:
      password: postgresql
    primary:
      persistence:
        enabled: true
        size: 1Gi
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      nodeSelector:
        cloud.google.com/gke-nodepool: previews
      tolerations:
      - key: "previews"
        operator: "Exists"
        effect: "NoSchedule"

  zeebe:
    enabled: true
    fullnameOverride: zeebe-cluster
    # image:
    #   registry: registry.camunda.cloud
    #   repository: team-camunda/zeebe
    clusterSize: 1
    partitionCount: 1
    replicationFactor: 1
    persistenceType: disk
    pvcSize: 1Gi
    env:
      ## Adjustement required due to PVC size
      - name: ZEEBE_BROKER_DATA_DISK_FREESPACE_REPLICATION
        value: "100MB"
      - name: ZEEBE_BROKER_DATA_DISK_FREESPACE_PROCESSING
        value: "150MB"
    javaOpts: >-
      -Xms512m -Xmx512m
      -XX:+HeapDumpOnOutOfMemoryError
      -XX:HeapDumpPath=/usr/local/zeebe/data
      -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log
      -XX:+ExitOnOutOfMemoryError
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"

  zeebeGateway:
    fullnameOverride: zeebe-cluster-gateway
    replicas: 1
    # image:
    #   repository: camunda/zeebe
    #   tag: latest
    javaOpts: >-
      -Xms512m -Xmx512m
      -XX:+ExitOnOutOfMemoryError
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      cloud.google.com/gke-nodepool: previews
    tolerations:
    - key: "previews"
      operator: "Exists"
      effect: "NoSchedule"