<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda</groupId>
    <artifactId>zeebe-parent</artifactId>
    <version>8.9.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>

  <artifactId>camunda-qa</artifactId>
  <packaging>pom</packaging>

  <name>Camunda QA</name>

  <modules>
    <module>acceptance-tests</module>
    <module>archunit-tests</module>
    <module>util</module>
    <!--
    We don't add the load-tests project here on purpose.
    In several cases we want to exclude the QA code to not being build, fex. on releases
    or running unit-tests. But the load-test/project code need to build in all cases, can be
    seen as production code that needs to be released as well (and docker images have been created).

    While we could move the load-tests out of the qa folder, it fits semantically here, which is
    why we took this approach. This obviously can always be reconsidered.

    <module>load-tests/project</module>
-->
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- combine both surefire and failsafe include patterns for now -->
          <includes>
            <include>**/IT*.java</include>
            <include>**/*IT.java</include>
            <include>**/*ITCase.java</include>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
            <include>**/*TestCase.java</include>
          </includes>
        </configuration>
      </plugin>

      <!-- hardcode skipping surefire for now since we're not renaming all the files just yet -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!--
        hardcode skipping JaCoCo for integration tests as they most likely just end up touching
        everything without really giving us an idea on the coverage
        -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
