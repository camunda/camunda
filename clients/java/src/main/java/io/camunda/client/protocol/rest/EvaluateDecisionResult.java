/*
 * Orchestration Cluster REST API
 * API for communicating with a Camunda 8 cluster.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.camunda.client.protocol.rest;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.camunda.client.protocol.rest.EvaluatedDecisionResult;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * EvaluateDecisionResult
 */
@JsonPropertyOrder({
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_DEFINITION_ID,
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_DEFINITION_NAME,
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_DEFINITION_VERSION,
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_REQUIREMENTS_ID,
  EvaluateDecisionResult.JSON_PROPERTY_OUTPUT,
  EvaluateDecisionResult.JSON_PROPERTY_FAILED_DECISION_DEFINITION_ID,
  EvaluateDecisionResult.JSON_PROPERTY_FAILURE_MESSAGE,
  EvaluateDecisionResult.JSON_PROPERTY_TENANT_ID,
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_DEFINITION_KEY,
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_REQUIREMENTS_KEY,
  EvaluateDecisionResult.JSON_PROPERTY_DECISION_INSTANCE_KEY,
  EvaluateDecisionResult.JSON_PROPERTY_EVALUATED_DECISIONS
})
@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-24T12:02:12.602366536Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class EvaluateDecisionResult {
  public static final String JSON_PROPERTY_DECISION_DEFINITION_ID = "decisionDefinitionId";
  @javax.annotation.Nullable
  private String decisionDefinitionId;

  public static final String JSON_PROPERTY_DECISION_DEFINITION_NAME = "decisionDefinitionName";
  @javax.annotation.Nullable
  private String decisionDefinitionName;

  public static final String JSON_PROPERTY_DECISION_DEFINITION_VERSION = "decisionDefinitionVersion";
  @javax.annotation.Nullable
  private Integer decisionDefinitionVersion;

  public static final String JSON_PROPERTY_DECISION_REQUIREMENTS_ID = "decisionRequirementsId";
  @javax.annotation.Nullable
  private String decisionRequirementsId;

  public static final String JSON_PROPERTY_OUTPUT = "output";
  @javax.annotation.Nullable
  private String output;

  public static final String JSON_PROPERTY_FAILED_DECISION_DEFINITION_ID = "failedDecisionDefinitionId";
  @javax.annotation.Nullable
  private String failedDecisionDefinitionId;

  public static final String JSON_PROPERTY_FAILURE_MESSAGE = "failureMessage";
  @javax.annotation.Nullable
  private String failureMessage;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @javax.annotation.Nullable
  private String tenantId;

  public static final String JSON_PROPERTY_DECISION_DEFINITION_KEY = "decisionDefinitionKey";
  @javax.annotation.Nullable
  private String decisionDefinitionKey;

  public static final String JSON_PROPERTY_DECISION_REQUIREMENTS_KEY = "decisionRequirementsKey";
  @javax.annotation.Nullable
  private String decisionRequirementsKey;

  public static final String JSON_PROPERTY_DECISION_INSTANCE_KEY = "decisionInstanceKey";
  @javax.annotation.Nullable
  private String decisionInstanceKey;

  public static final String JSON_PROPERTY_EVALUATED_DECISIONS = "evaluatedDecisions";
  @javax.annotation.Nullable
  private List<EvaluatedDecisionResult> evaluatedDecisions = new ArrayList<>();

  public EvaluateDecisionResult() {
  }

  public EvaluateDecisionResult decisionDefinitionId(@javax.annotation.Nullable String decisionDefinitionId) {
    
    this.decisionDefinitionId = decisionDefinitionId;
    return this;
  }

  /**
   * The ID of the decision which was evaluated.
   * @return decisionDefinitionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecisionDefinitionId() {
    return decisionDefinitionId;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionDefinitionId(@javax.annotation.Nullable String decisionDefinitionId) {
    this.decisionDefinitionId = decisionDefinitionId;
  }

  public EvaluateDecisionResult decisionDefinitionName(@javax.annotation.Nullable String decisionDefinitionName) {
    
    this.decisionDefinitionName = decisionDefinitionName;
    return this;
  }

  /**
   * The name of the decision which was evaluated.
   * @return decisionDefinitionName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecisionDefinitionName() {
    return decisionDefinitionName;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionDefinitionName(@javax.annotation.Nullable String decisionDefinitionName) {
    this.decisionDefinitionName = decisionDefinitionName;
  }

  public EvaluateDecisionResult decisionDefinitionVersion(@javax.annotation.Nullable Integer decisionDefinitionVersion) {
    
    this.decisionDefinitionVersion = decisionDefinitionVersion;
    return this;
  }

  /**
   * The version of the decision which was evaluated.
   * @return decisionDefinitionVersion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDecisionDefinitionVersion() {
    return decisionDefinitionVersion;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionDefinitionVersion(@javax.annotation.Nullable Integer decisionDefinitionVersion) {
    this.decisionDefinitionVersion = decisionDefinitionVersion;
  }

  public EvaluateDecisionResult decisionRequirementsId(@javax.annotation.Nullable String decisionRequirementsId) {
    
    this.decisionRequirementsId = decisionRequirementsId;
    return this;
  }

  /**
   * The ID of the decision requirements graph that the decision which was evaluated is part of.
   * @return decisionRequirementsId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecisionRequirementsId() {
    return decisionRequirementsId;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionRequirementsId(@javax.annotation.Nullable String decisionRequirementsId) {
    this.decisionRequirementsId = decisionRequirementsId;
  }

  public EvaluateDecisionResult output(@javax.annotation.Nullable String output) {
    
    this.output = output;
    return this;
  }

  /**
   * JSON document that will instantiate the result of the decision which was evaluated. 
   * @return output
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutput() {
    return output;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutput(@javax.annotation.Nullable String output) {
    this.output = output;
  }

  public EvaluateDecisionResult failedDecisionDefinitionId(@javax.annotation.Nullable String failedDecisionDefinitionId) {
    
    this.failedDecisionDefinitionId = failedDecisionDefinitionId;
    return this;
  }

  /**
   * The ID of the decision which failed during evaluation.
   * @return failedDecisionDefinitionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILED_DECISION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFailedDecisionDefinitionId() {
    return failedDecisionDefinitionId;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_DECISION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailedDecisionDefinitionId(@javax.annotation.Nullable String failedDecisionDefinitionId) {
    this.failedDecisionDefinitionId = failedDecisionDefinitionId;
  }

  public EvaluateDecisionResult failureMessage(@javax.annotation.Nullable String failureMessage) {
    
    this.failureMessage = failureMessage;
    return this;
  }

  /**
   * Message describing why the decision which was evaluated failed.
   * @return failureMessage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILURE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFailureMessage() {
    return failureMessage;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureMessage(@javax.annotation.Nullable String failureMessage) {
    this.failureMessage = failureMessage;
  }

  public EvaluateDecisionResult tenantId(@javax.annotation.Nullable String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * The tenant ID of the evaluated decision.
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
  }

  public EvaluateDecisionResult decisionDefinitionKey(@javax.annotation.Nullable String decisionDefinitionKey) {
    
    this.decisionDefinitionKey = decisionDefinitionKey;
    return this;
  }

  /**
   * The unique key identifying the decision which was evaluated.
   * @return decisionDefinitionKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecisionDefinitionKey() {
    return decisionDefinitionKey;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionDefinitionKey(@javax.annotation.Nullable String decisionDefinitionKey) {
    this.decisionDefinitionKey = decisionDefinitionKey;
  }

  public EvaluateDecisionResult decisionRequirementsKey(@javax.annotation.Nullable String decisionRequirementsKey) {
    
    this.decisionRequirementsKey = decisionRequirementsKey;
    return this;
  }

  /**
   * The unique key identifying the decision requirements graph that the decision which was evaluated is part of.
   * @return decisionRequirementsKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecisionRequirementsKey() {
    return decisionRequirementsKey;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionRequirementsKey(@javax.annotation.Nullable String decisionRequirementsKey) {
    this.decisionRequirementsKey = decisionRequirementsKey;
  }

  public EvaluateDecisionResult decisionInstanceKey(@javax.annotation.Nullable String decisionInstanceKey) {
    
    this.decisionInstanceKey = decisionInstanceKey;
    return this;
  }

  /**
   * The unique key identifying this decision evaluation.
   * @return decisionInstanceKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECISION_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDecisionInstanceKey() {
    return decisionInstanceKey;
  }


  @JsonProperty(JSON_PROPERTY_DECISION_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecisionInstanceKey(@javax.annotation.Nullable String decisionInstanceKey) {
    this.decisionInstanceKey = decisionInstanceKey;
  }

  public EvaluateDecisionResult evaluatedDecisions(@javax.annotation.Nullable List<EvaluatedDecisionResult> evaluatedDecisions) {
    
    this.evaluatedDecisions = evaluatedDecisions;
    return this;
  }

  public EvaluateDecisionResult addEvaluatedDecisionsItem(EvaluatedDecisionResult evaluatedDecisionsItem) {
    if (this.evaluatedDecisions == null) {
      this.evaluatedDecisions = new ArrayList<>();
    }
    this.evaluatedDecisions.add(evaluatedDecisionsItem);
    return this;
  }

  /**
   * Decisions that were evaluated within the requested decision evaluation.
   * @return evaluatedDecisions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVALUATED_DECISIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EvaluatedDecisionResult> getEvaluatedDecisions() {
    return evaluatedDecisions;
  }


  @JsonProperty(JSON_PROPERTY_EVALUATED_DECISIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvaluatedDecisions(@javax.annotation.Nullable List<EvaluatedDecisionResult> evaluatedDecisions) {
    this.evaluatedDecisions = evaluatedDecisions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluateDecisionResult evaluateDecisionResult = (EvaluateDecisionResult) o;
    return Objects.equals(this.decisionDefinitionId, evaluateDecisionResult.decisionDefinitionId) &&
        Objects.equals(this.decisionDefinitionName, evaluateDecisionResult.decisionDefinitionName) &&
        Objects.equals(this.decisionDefinitionVersion, evaluateDecisionResult.decisionDefinitionVersion) &&
        Objects.equals(this.decisionRequirementsId, evaluateDecisionResult.decisionRequirementsId) &&
        Objects.equals(this.output, evaluateDecisionResult.output) &&
        Objects.equals(this.failedDecisionDefinitionId, evaluateDecisionResult.failedDecisionDefinitionId) &&
        Objects.equals(this.failureMessage, evaluateDecisionResult.failureMessage) &&
        Objects.equals(this.tenantId, evaluateDecisionResult.tenantId) &&
        Objects.equals(this.decisionDefinitionKey, evaluateDecisionResult.decisionDefinitionKey) &&
        Objects.equals(this.decisionRequirementsKey, evaluateDecisionResult.decisionRequirementsKey) &&
        Objects.equals(this.decisionInstanceKey, evaluateDecisionResult.decisionInstanceKey) &&
        Objects.equals(this.evaluatedDecisions, evaluateDecisionResult.evaluatedDecisions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(decisionDefinitionId, decisionDefinitionName, decisionDefinitionVersion, decisionRequirementsId, output, failedDecisionDefinitionId, failureMessage, tenantId, decisionDefinitionKey, decisionRequirementsKey, decisionInstanceKey, evaluatedDecisions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluateDecisionResult {\n");
    sb.append("    decisionDefinitionId: ").append(toIndentedString(decisionDefinitionId)).append("\n");
    sb.append("    decisionDefinitionName: ").append(toIndentedString(decisionDefinitionName)).append("\n");
    sb.append("    decisionDefinitionVersion: ").append(toIndentedString(decisionDefinitionVersion)).append("\n");
    sb.append("    decisionRequirementsId: ").append(toIndentedString(decisionRequirementsId)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    failedDecisionDefinitionId: ").append(toIndentedString(failedDecisionDefinitionId)).append("\n");
    sb.append("    failureMessage: ").append(toIndentedString(failureMessage)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    decisionDefinitionKey: ").append(toIndentedString(decisionDefinitionKey)).append("\n");
    sb.append("    decisionRequirementsKey: ").append(toIndentedString(decisionRequirementsKey)).append("\n");
    sb.append("    decisionInstanceKey: ").append(toIndentedString(decisionInstanceKey)).append("\n");
    sb.append("    evaluatedDecisions: ").append(toIndentedString(evaluatedDecisions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `decisionDefinitionId` to the URL query string
    if (getDecisionDefinitionId() != null) {
      try {
        joiner.add(String.format("%sdecisionDefinitionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionDefinitionId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `decisionDefinitionName` to the URL query string
    if (getDecisionDefinitionName() != null) {
      try {
        joiner.add(String.format("%sdecisionDefinitionName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionDefinitionName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `decisionDefinitionVersion` to the URL query string
    if (getDecisionDefinitionVersion() != null) {
      try {
        joiner.add(String.format("%sdecisionDefinitionVersion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionDefinitionVersion()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `decisionRequirementsId` to the URL query string
    if (getDecisionRequirementsId() != null) {
      try {
        joiner.add(String.format("%sdecisionRequirementsId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionRequirementsId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `output` to the URL query string
    if (getOutput() != null) {
      try {
        joiner.add(String.format("%soutput%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOutput()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `failedDecisionDefinitionId` to the URL query string
    if (getFailedDecisionDefinitionId() != null) {
      try {
        joiner.add(String.format("%sfailedDecisionDefinitionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFailedDecisionDefinitionId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `failureMessage` to the URL query string
    if (getFailureMessage() != null) {
      try {
        joiner.add(String.format("%sfailureMessage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFailureMessage()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `tenantId` to the URL query string
    if (getTenantId() != null) {
      try {
        joiner.add(String.format("%stenantId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTenantId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `decisionDefinitionKey` to the URL query string
    if (getDecisionDefinitionKey() != null) {
      try {
        joiner.add(String.format("%sdecisionDefinitionKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionDefinitionKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `decisionRequirementsKey` to the URL query string
    if (getDecisionRequirementsKey() != null) {
      try {
        joiner.add(String.format("%sdecisionRequirementsKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionRequirementsKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `decisionInstanceKey` to the URL query string
    if (getDecisionInstanceKey() != null) {
      try {
        joiner.add(String.format("%sdecisionInstanceKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDecisionInstanceKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `evaluatedDecisions` to the URL query string
    if (getEvaluatedDecisions() != null) {
      for (int i = 0; i < getEvaluatedDecisions().size(); i++) {
        if (getEvaluatedDecisions().get(i) != null) {
          joiner.add(getEvaluatedDecisions().get(i).toUrlQueryString(String.format("%sevaluatedDecisions%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

