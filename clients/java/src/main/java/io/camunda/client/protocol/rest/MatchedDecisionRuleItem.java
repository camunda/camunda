/*
 * Orchestration Cluster REST API
 * API for communicating with a Camunda 8 cluster.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.camunda.client.protocol.rest;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.camunda.client.protocol.rest.EvaluatedDecisionOutputItem;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * A decision rule that matched within this decision evaluation.
 */
@JsonPropertyOrder({
  MatchedDecisionRuleItem.JSON_PROPERTY_RULE_ID,
  MatchedDecisionRuleItem.JSON_PROPERTY_RULE_INDEX,
  MatchedDecisionRuleItem.JSON_PROPERTY_EVALUATED_OUTPUTS
})
@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-24T12:02:12.602366536Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class MatchedDecisionRuleItem {
  public static final String JSON_PROPERTY_RULE_ID = "ruleId";
  @javax.annotation.Nullable
  private String ruleId;

  public static final String JSON_PROPERTY_RULE_INDEX = "ruleIndex";
  @javax.annotation.Nullable
  private Integer ruleIndex;

  public static final String JSON_PROPERTY_EVALUATED_OUTPUTS = "evaluatedOutputs";
  @javax.annotation.Nullable
  private List<EvaluatedDecisionOutputItem> evaluatedOutputs = new ArrayList<>();

  public MatchedDecisionRuleItem() {
  }

  public MatchedDecisionRuleItem ruleId(@javax.annotation.Nullable String ruleId) {
    
    this.ruleId = ruleId;
    return this;
  }

  /**
   * The ID of the matched rule.
   * @return ruleId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRuleId() {
    return ruleId;
  }


  @JsonProperty(JSON_PROPERTY_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleId(@javax.annotation.Nullable String ruleId) {
    this.ruleId = ruleId;
  }

  public MatchedDecisionRuleItem ruleIndex(@javax.annotation.Nullable Integer ruleIndex) {
    
    this.ruleIndex = ruleIndex;
    return this;
  }

  /**
   * The index of the matched rule.
   * @return ruleIndex
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RULE_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRuleIndex() {
    return ruleIndex;
  }


  @JsonProperty(JSON_PROPERTY_RULE_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleIndex(@javax.annotation.Nullable Integer ruleIndex) {
    this.ruleIndex = ruleIndex;
  }

  public MatchedDecisionRuleItem evaluatedOutputs(@javax.annotation.Nullable List<EvaluatedDecisionOutputItem> evaluatedOutputs) {
    
    this.evaluatedOutputs = evaluatedOutputs;
    return this;
  }

  public MatchedDecisionRuleItem addEvaluatedOutputsItem(EvaluatedDecisionOutputItem evaluatedOutputsItem) {
    if (this.evaluatedOutputs == null) {
      this.evaluatedOutputs = new ArrayList<>();
    }
    this.evaluatedOutputs.add(evaluatedOutputsItem);
    return this;
  }

  /**
   * The evaluated decision outputs.
   * @return evaluatedOutputs
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVALUATED_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EvaluatedDecisionOutputItem> getEvaluatedOutputs() {
    return evaluatedOutputs;
  }


  @JsonProperty(JSON_PROPERTY_EVALUATED_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvaluatedOutputs(@javax.annotation.Nullable List<EvaluatedDecisionOutputItem> evaluatedOutputs) {
    this.evaluatedOutputs = evaluatedOutputs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchedDecisionRuleItem matchedDecisionRuleItem = (MatchedDecisionRuleItem) o;
    return Objects.equals(this.ruleId, matchedDecisionRuleItem.ruleId) &&
        Objects.equals(this.ruleIndex, matchedDecisionRuleItem.ruleIndex) &&
        Objects.equals(this.evaluatedOutputs, matchedDecisionRuleItem.evaluatedOutputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ruleId, ruleIndex, evaluatedOutputs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchedDecisionRuleItem {\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    ruleIndex: ").append(toIndentedString(ruleIndex)).append("\n");
    sb.append("    evaluatedOutputs: ").append(toIndentedString(evaluatedOutputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ruleId` to the URL query string
    if (getRuleId() != null) {
      try {
        joiner.add(String.format("%sruleId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRuleId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `ruleIndex` to the URL query string
    if (getRuleIndex() != null) {
      try {
        joiner.add(String.format("%sruleIndex%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRuleIndex()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `evaluatedOutputs` to the URL query string
    if (getEvaluatedOutputs() != null) {
      for (int i = 0; i < getEvaluatedOutputs().size(); i++) {
        if (getEvaluatedOutputs().get(i) != null) {
          joiner.add(getEvaluatedOutputs().get(i).toUrlQueryString(String.format("%sevaluatedOutputs%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

