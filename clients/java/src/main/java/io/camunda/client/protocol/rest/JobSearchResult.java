/*
 * Orchestration Cluster REST API
 * API for communicating with a Camunda 8 cluster.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.camunda.client.protocol.rest;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.camunda.client.protocol.rest.JobKindEnum;
import io.camunda.client.protocol.rest.JobListenerEventTypeEnum;
import io.camunda.client.protocol.rest.JobStateEnum;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * JobSearchResult
 */
@JsonPropertyOrder({
  JobSearchResult.JSON_PROPERTY_CUSTOM_HEADERS,
  JobSearchResult.JSON_PROPERTY_DEADLINE,
  JobSearchResult.JSON_PROPERTY_DENIED_REASON,
  JobSearchResult.JSON_PROPERTY_ELEMENT_ID,
  JobSearchResult.JSON_PROPERTY_ELEMENT_INSTANCE_KEY,
  JobSearchResult.JSON_PROPERTY_END_TIME,
  JobSearchResult.JSON_PROPERTY_ERROR_CODE,
  JobSearchResult.JSON_PROPERTY_ERROR_MESSAGE,
  JobSearchResult.JSON_PROPERTY_HAS_FAILED_WITH_RETRIES_LEFT,
  JobSearchResult.JSON_PROPERTY_IS_DENIED,
  JobSearchResult.JSON_PROPERTY_JOB_KEY,
  JobSearchResult.JSON_PROPERTY_KIND,
  JobSearchResult.JSON_PROPERTY_LISTENER_EVENT_TYPE,
  JobSearchResult.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  JobSearchResult.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  JobSearchResult.JSON_PROPERTY_PROCESS_INSTANCE_KEY,
  JobSearchResult.JSON_PROPERTY_RETRIES,
  JobSearchResult.JSON_PROPERTY_STATE,
  JobSearchResult.JSON_PROPERTY_TENANT_ID,
  JobSearchResult.JSON_PROPERTY_TYPE,
  JobSearchResult.JSON_PROPERTY_WORKER
})
@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-24T12:02:12.602366536Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class JobSearchResult {
  public static final String JSON_PROPERTY_CUSTOM_HEADERS = "customHeaders";
  @javax.annotation.Nullable
  private Map<String, String> customHeaders = new HashMap<>();

  public static final String JSON_PROPERTY_DEADLINE = "deadline";
  @javax.annotation.Nullable
  private OffsetDateTime deadline;

  public static final String JSON_PROPERTY_DENIED_REASON = "deniedReason";
  @javax.annotation.Nullable
  private String deniedReason;

  public static final String JSON_PROPERTY_ELEMENT_ID = "elementId";
  @javax.annotation.Nullable
  private String elementId;

  public static final String JSON_PROPERTY_ELEMENT_INSTANCE_KEY = "elementInstanceKey";
  @javax.annotation.Nullable
  private String elementInstanceKey;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  @javax.annotation.Nullable
  private OffsetDateTime endTime;

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  @javax.annotation.Nullable
  private String errorCode;

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  @javax.annotation.Nullable
  private String errorMessage;

  public static final String JSON_PROPERTY_HAS_FAILED_WITH_RETRIES_LEFT = "hasFailedWithRetriesLeft";
  @javax.annotation.Nullable
  private Boolean hasFailedWithRetriesLeft;

  public static final String JSON_PROPERTY_IS_DENIED = "isDenied";
  @javax.annotation.Nullable
  private Boolean isDenied;

  public static final String JSON_PROPERTY_JOB_KEY = "jobKey";
  @javax.annotation.Nullable
  private String jobKey;

  public static final String JSON_PROPERTY_KIND = "kind";
  @javax.annotation.Nullable
  private JobKindEnum kind;

  public static final String JSON_PROPERTY_LISTENER_EVENT_TYPE = "listenerEventType";
  @javax.annotation.Nullable
  private JobListenerEventTypeEnum listenerEventType;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
  @javax.annotation.Nullable
  private String processDefinitionId;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
  @javax.annotation.Nullable
  private String processDefinitionKey;

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_KEY = "processInstanceKey";
  @javax.annotation.Nullable
  private String processInstanceKey;

  public static final String JSON_PROPERTY_RETRIES = "retries";
  @javax.annotation.Nullable
  private Integer retries;

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nullable
  private JobStateEnum state;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @javax.annotation.Nullable
  private String tenantId;

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nullable
  private String type;

  public static final String JSON_PROPERTY_WORKER = "worker";
  @javax.annotation.Nullable
  private String worker;

  public JobSearchResult() {
  }

  public JobSearchResult customHeaders(@javax.annotation.Nullable Map<String, String> customHeaders) {
    
    this.customHeaders = customHeaders;
    return this;
  }

  public JobSearchResult putCustomHeadersItem(String key, String customHeadersItem) {
    if (this.customHeaders == null) {
      this.customHeaders = new HashMap<>();
    }
    this.customHeaders.put(key, customHeadersItem);
    return this;
  }

  /**
   * A set of custom headers defined during modelling.
   * @return customHeaders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getCustomHeaders() {
    return customHeaders;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomHeaders(@javax.annotation.Nullable Map<String, String> customHeaders) {
    this.customHeaders = customHeaders;
  }

  public JobSearchResult deadline(@javax.annotation.Nullable OffsetDateTime deadline) {
    
    this.deadline = deadline;
    return this;
  }

  /**
   * When the job can be activated.
   * @return deadline
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeadline() {
    return deadline;
  }


  @JsonProperty(JSON_PROPERTY_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeadline(@javax.annotation.Nullable OffsetDateTime deadline) {
    this.deadline = deadline;
  }

  public JobSearchResult deniedReason(@javax.annotation.Nullable String deniedReason) {
    
    this.deniedReason = deniedReason;
    return this;
  }

  /**
   * The reason provided by the user task listener for denying the work.
   * @return deniedReason
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DENIED_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeniedReason() {
    return deniedReason;
  }


  @JsonProperty(JSON_PROPERTY_DENIED_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeniedReason(@javax.annotation.Nullable String deniedReason) {
    this.deniedReason = deniedReason;
  }

  public JobSearchResult elementId(@javax.annotation.Nullable String elementId) {
    
    this.elementId = elementId;
    return this;
  }

  /**
   * The element ID associated with the job.
   * @return elementId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementId() {
    return elementId;
  }


  @JsonProperty(JSON_PROPERTY_ELEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementId(@javax.annotation.Nullable String elementId) {
    this.elementId = elementId;
  }

  public JobSearchResult elementInstanceKey(@javax.annotation.Nullable String elementInstanceKey) {
    
    this.elementInstanceKey = elementInstanceKey;
    return this;
  }

  /**
   * The element instance key associated with the job.
   * @return elementInstanceKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELEMENT_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementInstanceKey() {
    return elementInstanceKey;
  }


  @JsonProperty(JSON_PROPERTY_ELEMENT_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementInstanceKey(@javax.annotation.Nullable String elementInstanceKey) {
    this.elementInstanceKey = elementInstanceKey;
  }

  public JobSearchResult endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

  /**
   * When the job ended.
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public JobSearchResult errorCode(@javax.annotation.Nullable String errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

  /**
   * The error code provided for the failed job.
   * @return errorCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(@javax.annotation.Nullable String errorCode) {
    this.errorCode = errorCode;
  }

  public JobSearchResult errorMessage(@javax.annotation.Nullable String errorMessage) {
    
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * The error message that provides additional context for a failed job.
   * @return errorMessage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMessage(@javax.annotation.Nullable String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public JobSearchResult hasFailedWithRetriesLeft(@javax.annotation.Nullable Boolean hasFailedWithRetriesLeft) {
    
    this.hasFailedWithRetriesLeft = hasFailedWithRetriesLeft;
    return this;
  }

  /**
   * Indicates whether the job has failed with retries left.
   * @return hasFailedWithRetriesLeft
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_FAILED_WITH_RETRIES_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasFailedWithRetriesLeft() {
    return hasFailedWithRetriesLeft;
  }


  @JsonProperty(JSON_PROPERTY_HAS_FAILED_WITH_RETRIES_LEFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasFailedWithRetriesLeft(@javax.annotation.Nullable Boolean hasFailedWithRetriesLeft) {
    this.hasFailedWithRetriesLeft = hasFailedWithRetriesLeft;
  }

  public JobSearchResult isDenied(@javax.annotation.Nullable Boolean isDenied) {
    
    this.isDenied = isDenied;
    return this;
  }

  /**
   * Indicates whether the user task listener denies the work.
   * @return isDenied
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DENIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDenied() {
    return isDenied;
  }


  @JsonProperty(JSON_PROPERTY_IS_DENIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDenied(@javax.annotation.Nullable Boolean isDenied) {
    this.isDenied = isDenied;
  }

  public JobSearchResult jobKey(@javax.annotation.Nullable String jobKey) {
    
    this.jobKey = jobKey;
    return this;
  }

  /**
   * The key, a unique identifier for the job.
   * @return jobKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOB_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJobKey() {
    return jobKey;
  }


  @JsonProperty(JSON_PROPERTY_JOB_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobKey(@javax.annotation.Nullable String jobKey) {
    this.jobKey = jobKey;
  }

  public JobSearchResult kind(@javax.annotation.Nullable JobKindEnum kind) {
    
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobKindEnum getKind() {
    return kind;
  }


  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKind(@javax.annotation.Nullable JobKindEnum kind) {
    this.kind = kind;
  }

  public JobSearchResult listenerEventType(@javax.annotation.Nullable JobListenerEventTypeEnum listenerEventType) {
    
    this.listenerEventType = listenerEventType;
    return this;
  }

  /**
   * Get listenerEventType
   * @return listenerEventType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LISTENER_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobListenerEventTypeEnum getListenerEventType() {
    return listenerEventType;
  }


  @JsonProperty(JSON_PROPERTY_LISTENER_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListenerEventType(@javax.annotation.Nullable JobListenerEventTypeEnum listenerEventType) {
    this.listenerEventType = listenerEventType;
  }

  public JobSearchResult processDefinitionId(@javax.annotation.Nullable String processDefinitionId) {
    
    this.processDefinitionId = processDefinitionId;
    return this;
  }

  /**
   * The process definition ID associated with the job.
   * @return processDefinitionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessDefinitionId() {
    return processDefinitionId;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinitionId(@javax.annotation.Nullable String processDefinitionId) {
    this.processDefinitionId = processDefinitionId;
  }

  public JobSearchResult processDefinitionKey(@javax.annotation.Nullable String processDefinitionKey) {
    
    this.processDefinitionKey = processDefinitionKey;
    return this;
  }

  /**
   * The process definition key associated with the job.
   * @return processDefinitionKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessDefinitionKey() {
    return processDefinitionKey;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinitionKey(@javax.annotation.Nullable String processDefinitionKey) {
    this.processDefinitionKey = processDefinitionKey;
  }

  public JobSearchResult processInstanceKey(@javax.annotation.Nullable String processInstanceKey) {
    
    this.processInstanceKey = processInstanceKey;
    return this;
  }

  /**
   * The process instance key associated with the job.
   * @return processInstanceKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessInstanceKey() {
    return processInstanceKey;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessInstanceKey(@javax.annotation.Nullable String processInstanceKey) {
    this.processInstanceKey = processInstanceKey;
  }

  public JobSearchResult retries(@javax.annotation.Nullable Integer retries) {
    
    this.retries = retries;
    return this;
  }

  /**
   * The amount of retries left to this job.
   * @return retries
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRetries() {
    return retries;
  }


  @JsonProperty(JSON_PROPERTY_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetries(@javax.annotation.Nullable Integer retries) {
    this.retries = retries;
  }

  public JobSearchResult state(@javax.annotation.Nullable JobStateEnum state) {
    
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobStateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@javax.annotation.Nullable JobStateEnum state) {
    this.state = state;
  }

  public JobSearchResult tenantId(@javax.annotation.Nullable String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * The tenant ID.
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
  }

  public JobSearchResult type(@javax.annotation.Nullable String type) {
    
    this.type = type;
    return this;
  }

  /**
   * The type of the job.
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable String type) {
    this.type = type;
  }

  public JobSearchResult worker(@javax.annotation.Nullable String worker) {
    
    this.worker = worker;
    return this;
  }

  /**
   * The name of the worker of this job.
   * @return worker
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorker() {
    return worker;
  }


  @JsonProperty(JSON_PROPERTY_WORKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorker(@javax.annotation.Nullable String worker) {
    this.worker = worker;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobSearchResult jobSearchResult = (JobSearchResult) o;
    return Objects.equals(this.customHeaders, jobSearchResult.customHeaders) &&
        Objects.equals(this.deadline, jobSearchResult.deadline) &&
        Objects.equals(this.deniedReason, jobSearchResult.deniedReason) &&
        Objects.equals(this.elementId, jobSearchResult.elementId) &&
        Objects.equals(this.elementInstanceKey, jobSearchResult.elementInstanceKey) &&
        Objects.equals(this.endTime, jobSearchResult.endTime) &&
        Objects.equals(this.errorCode, jobSearchResult.errorCode) &&
        Objects.equals(this.errorMessage, jobSearchResult.errorMessage) &&
        Objects.equals(this.hasFailedWithRetriesLeft, jobSearchResult.hasFailedWithRetriesLeft) &&
        Objects.equals(this.isDenied, jobSearchResult.isDenied) &&
        Objects.equals(this.jobKey, jobSearchResult.jobKey) &&
        Objects.equals(this.kind, jobSearchResult.kind) &&
        Objects.equals(this.listenerEventType, jobSearchResult.listenerEventType) &&
        Objects.equals(this.processDefinitionId, jobSearchResult.processDefinitionId) &&
        Objects.equals(this.processDefinitionKey, jobSearchResult.processDefinitionKey) &&
        Objects.equals(this.processInstanceKey, jobSearchResult.processInstanceKey) &&
        Objects.equals(this.retries, jobSearchResult.retries) &&
        Objects.equals(this.state, jobSearchResult.state) &&
        Objects.equals(this.tenantId, jobSearchResult.tenantId) &&
        Objects.equals(this.type, jobSearchResult.type) &&
        Objects.equals(this.worker, jobSearchResult.worker);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customHeaders, deadline, deniedReason, elementId, elementInstanceKey, endTime, errorCode, errorMessage, hasFailedWithRetriesLeft, isDenied, jobKey, kind, listenerEventType, processDefinitionId, processDefinitionKey, processInstanceKey, retries, state, tenantId, type, worker);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobSearchResult {\n");
    sb.append("    customHeaders: ").append(toIndentedString(customHeaders)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    deniedReason: ").append(toIndentedString(deniedReason)).append("\n");
    sb.append("    elementId: ").append(toIndentedString(elementId)).append("\n");
    sb.append("    elementInstanceKey: ").append(toIndentedString(elementInstanceKey)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    hasFailedWithRetriesLeft: ").append(toIndentedString(hasFailedWithRetriesLeft)).append("\n");
    sb.append("    isDenied: ").append(toIndentedString(isDenied)).append("\n");
    sb.append("    jobKey: ").append(toIndentedString(jobKey)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    listenerEventType: ").append(toIndentedString(listenerEventType)).append("\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
    sb.append("    processInstanceKey: ").append(toIndentedString(processInstanceKey)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `customHeaders` to the URL query string
    if (getCustomHeaders() != null) {
      for (String _key : getCustomHeaders().keySet()) {
        try {
          joiner.add(String.format("%scustomHeaders%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
              getCustomHeaders().get(_key), URLEncoder.encode(String.valueOf(getCustomHeaders().get(_key)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `deadline` to the URL query string
    if (getDeadline() != null) {
      try {
        joiner.add(String.format("%sdeadline%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDeadline()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `deniedReason` to the URL query string
    if (getDeniedReason() != null) {
      try {
        joiner.add(String.format("%sdeniedReason%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDeniedReason()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `elementId` to the URL query string
    if (getElementId() != null) {
      try {
        joiner.add(String.format("%selementId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `elementInstanceKey` to the URL query string
    if (getElementInstanceKey() != null) {
      try {
        joiner.add(String.format("%selementInstanceKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementInstanceKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `endTime` to the URL query string
    if (getEndTime() != null) {
      try {
        joiner.add(String.format("%sendTime%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEndTime()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `errorCode` to the URL query string
    if (getErrorCode() != null) {
      try {
        joiner.add(String.format("%serrorCode%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getErrorCode()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `errorMessage` to the URL query string
    if (getErrorMessage() != null) {
      try {
        joiner.add(String.format("%serrorMessage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getErrorMessage()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `hasFailedWithRetriesLeft` to the URL query string
    if (getHasFailedWithRetriesLeft() != null) {
      try {
        joiner.add(String.format("%shasFailedWithRetriesLeft%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHasFailedWithRetriesLeft()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `isDenied` to the URL query string
    if (getIsDenied() != null) {
      try {
        joiner.add(String.format("%sisDenied%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsDenied()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `jobKey` to the URL query string
    if (getJobKey() != null) {
      try {
        joiner.add(String.format("%sjobKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getJobKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `kind` to the URL query string
    if (getKind() != null) {
      try {
        joiner.add(String.format("%skind%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getKind()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `listenerEventType` to the URL query string
    if (getListenerEventType() != null) {
      try {
        joiner.add(String.format("%slistenerEventType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getListenerEventType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processDefinitionId` to the URL query string
    if (getProcessDefinitionId() != null) {
      try {
        joiner.add(String.format("%sprocessDefinitionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessDefinitionId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processDefinitionKey` to the URL query string
    if (getProcessDefinitionKey() != null) {
      try {
        joiner.add(String.format("%sprocessDefinitionKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessDefinitionKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processInstanceKey` to the URL query string
    if (getProcessInstanceKey() != null) {
      try {
        joiner.add(String.format("%sprocessInstanceKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessInstanceKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `retries` to the URL query string
    if (getRetries() != null) {
      try {
        joiner.add(String.format("%sretries%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRetries()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `state` to the URL query string
    if (getState() != null) {
      try {
        joiner.add(String.format("%sstate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getState()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `tenantId` to the URL query string
    if (getTenantId() != null) {
      try {
        joiner.add(String.format("%stenantId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTenantId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `type` to the URL query string
    if (getType() != null) {
      try {
        joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `worker` to the URL query string
    if (getWorker() != null) {
      try {
        joiner.add(String.format("%sworker%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWorker()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

