/*
 * Orchestration Cluster REST API
 * API for communicating with a Camunda 8 cluster.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.camunda.client.protocol.rest;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.camunda.client.protocol.rest.MessageSubscriptionTypeEnum;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * MessageSubscriptionResult
 */
@JsonPropertyOrder({
  MessageSubscriptionResult.JSON_PROPERTY_MESSAGE_SUBSCRIPTION_KEY,
  MessageSubscriptionResult.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  MessageSubscriptionResult.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  MessageSubscriptionResult.JSON_PROPERTY_PROCESS_INSTANCE_KEY,
  MessageSubscriptionResult.JSON_PROPERTY_ELEMENT_ID,
  MessageSubscriptionResult.JSON_PROPERTY_ELEMENT_INSTANCE_KEY,
  MessageSubscriptionResult.JSON_PROPERTY_MESSAGE_SUBSCRIPTION_TYPE,
  MessageSubscriptionResult.JSON_PROPERTY_LAST_UPDATED_DATE,
  MessageSubscriptionResult.JSON_PROPERTY_MESSAGE_NAME,
  MessageSubscriptionResult.JSON_PROPERTY_CORRELATION_KEY,
  MessageSubscriptionResult.JSON_PROPERTY_TENANT_ID
})
@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-24T12:02:12.602366536Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class MessageSubscriptionResult {
  public static final String JSON_PROPERTY_MESSAGE_SUBSCRIPTION_KEY = "messageSubscriptionKey";
  @javax.annotation.Nullable
  private String messageSubscriptionKey;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
  @javax.annotation.Nullable
  private String processDefinitionId;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
  @javax.annotation.Nullable
  private String processDefinitionKey;

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_KEY = "processInstanceKey";
  @javax.annotation.Nullable
  private String processInstanceKey;

  public static final String JSON_PROPERTY_ELEMENT_ID = "elementId";
  @javax.annotation.Nullable
  private String elementId;

  public static final String JSON_PROPERTY_ELEMENT_INSTANCE_KEY = "elementInstanceKey";
  @javax.annotation.Nullable
  private String elementInstanceKey;

  public static final String JSON_PROPERTY_MESSAGE_SUBSCRIPTION_TYPE = "messageSubscriptionType";
  @javax.annotation.Nullable
  private MessageSubscriptionTypeEnum messageSubscriptionType;

  public static final String JSON_PROPERTY_LAST_UPDATED_DATE = "lastUpdatedDate";
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdatedDate;

  public static final String JSON_PROPERTY_MESSAGE_NAME = "messageName";
  @javax.annotation.Nullable
  private String messageName;

  public static final String JSON_PROPERTY_CORRELATION_KEY = "correlationKey";
  @javax.annotation.Nullable
  private String correlationKey;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @javax.annotation.Nullable
  private String tenantId;

  public MessageSubscriptionResult() {
  }

  public MessageSubscriptionResult messageSubscriptionKey(@javax.annotation.Nullable String messageSubscriptionKey) {
    
    this.messageSubscriptionKey = messageSubscriptionKey;
    return this;
  }

  /**
   * The message subscription key associated with this message subscription.
   * @return messageSubscriptionKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_SUBSCRIPTION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageSubscriptionKey() {
    return messageSubscriptionKey;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_SUBSCRIPTION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageSubscriptionKey(@javax.annotation.Nullable String messageSubscriptionKey) {
    this.messageSubscriptionKey = messageSubscriptionKey;
  }

  public MessageSubscriptionResult processDefinitionId(@javax.annotation.Nullable String processDefinitionId) {
    
    this.processDefinitionId = processDefinitionId;
    return this;
  }

  /**
   * The process definition ID associated with this message subscription.
   * @return processDefinitionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessDefinitionId() {
    return processDefinitionId;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinitionId(@javax.annotation.Nullable String processDefinitionId) {
    this.processDefinitionId = processDefinitionId;
  }

  public MessageSubscriptionResult processDefinitionKey(@javax.annotation.Nullable String processDefinitionKey) {
    
    this.processDefinitionKey = processDefinitionKey;
    return this;
  }

  /**
   * The process definition key associated with this message subscription.
   * @return processDefinitionKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessDefinitionKey() {
    return processDefinitionKey;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinitionKey(@javax.annotation.Nullable String processDefinitionKey) {
    this.processDefinitionKey = processDefinitionKey;
  }

  public MessageSubscriptionResult processInstanceKey(@javax.annotation.Nullable String processInstanceKey) {
    
    this.processInstanceKey = processInstanceKey;
    return this;
  }

  /**
   * The process instance key associated with this message subscription.
   * @return processInstanceKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProcessInstanceKey() {
    return processInstanceKey;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessInstanceKey(@javax.annotation.Nullable String processInstanceKey) {
    this.processInstanceKey = processInstanceKey;
  }

  public MessageSubscriptionResult elementId(@javax.annotation.Nullable String elementId) {
    
    this.elementId = elementId;
    return this;
  }

  /**
   * The element ID associated with this message subscription.
   * @return elementId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementId() {
    return elementId;
  }


  @JsonProperty(JSON_PROPERTY_ELEMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementId(@javax.annotation.Nullable String elementId) {
    this.elementId = elementId;
  }

  public MessageSubscriptionResult elementInstanceKey(@javax.annotation.Nullable String elementInstanceKey) {
    
    this.elementInstanceKey = elementInstanceKey;
    return this;
  }

  /**
   * The element instance key associated with this message subscription.
   * @return elementInstanceKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELEMENT_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementInstanceKey() {
    return elementInstanceKey;
  }


  @JsonProperty(JSON_PROPERTY_ELEMENT_INSTANCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementInstanceKey(@javax.annotation.Nullable String elementInstanceKey) {
    this.elementInstanceKey = elementInstanceKey;
  }

  public MessageSubscriptionResult messageSubscriptionType(@javax.annotation.Nullable MessageSubscriptionTypeEnum messageSubscriptionType) {
    
    this.messageSubscriptionType = messageSubscriptionType;
    return this;
  }

  /**
   * Get messageSubscriptionType
   * @return messageSubscriptionType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_SUBSCRIPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageSubscriptionTypeEnum getMessageSubscriptionType() {
    return messageSubscriptionType;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_SUBSCRIPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageSubscriptionType(@javax.annotation.Nullable MessageSubscriptionTypeEnum messageSubscriptionType) {
    this.messageSubscriptionType = messageSubscriptionType;
  }

  public MessageSubscriptionResult lastUpdatedDate(@javax.annotation.Nullable OffsetDateTime lastUpdatedDate) {
    
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

  /**
   * The last updated date of the message subscription.
   * @return lastUpdatedDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdatedDate() {
    return lastUpdatedDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdatedDate(@javax.annotation.Nullable OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }

  public MessageSubscriptionResult messageName(@javax.annotation.Nullable String messageName) {
    
    this.messageName = messageName;
    return this;
  }

  /**
   * The name of the message associated with the message subscription.
   * @return messageName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageName() {
    return messageName;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageName(@javax.annotation.Nullable String messageName) {
    this.messageName = messageName;
  }

  public MessageSubscriptionResult correlationKey(@javax.annotation.Nullable String correlationKey) {
    
    this.correlationKey = correlationKey;
    return this;
  }

  /**
   * The correlation key of the message subscription.
   * @return correlationKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORRELATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorrelationKey() {
    return correlationKey;
  }


  @JsonProperty(JSON_PROPERTY_CORRELATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorrelationKey(@javax.annotation.Nullable String correlationKey) {
    this.correlationKey = correlationKey;
  }

  public MessageSubscriptionResult tenantId(@javax.annotation.Nullable String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * The unique external tenant ID.
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageSubscriptionResult messageSubscriptionResult = (MessageSubscriptionResult) o;
    return Objects.equals(this.messageSubscriptionKey, messageSubscriptionResult.messageSubscriptionKey) &&
        Objects.equals(this.processDefinitionId, messageSubscriptionResult.processDefinitionId) &&
        Objects.equals(this.processDefinitionKey, messageSubscriptionResult.processDefinitionKey) &&
        Objects.equals(this.processInstanceKey, messageSubscriptionResult.processInstanceKey) &&
        Objects.equals(this.elementId, messageSubscriptionResult.elementId) &&
        Objects.equals(this.elementInstanceKey, messageSubscriptionResult.elementInstanceKey) &&
        Objects.equals(this.messageSubscriptionType, messageSubscriptionResult.messageSubscriptionType) &&
        Objects.equals(this.lastUpdatedDate, messageSubscriptionResult.lastUpdatedDate) &&
        Objects.equals(this.messageName, messageSubscriptionResult.messageName) &&
        Objects.equals(this.correlationKey, messageSubscriptionResult.correlationKey) &&
        Objects.equals(this.tenantId, messageSubscriptionResult.tenantId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageSubscriptionKey, processDefinitionId, processDefinitionKey, processInstanceKey, elementId, elementInstanceKey, messageSubscriptionType, lastUpdatedDate, messageName, correlationKey, tenantId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageSubscriptionResult {\n");
    sb.append("    messageSubscriptionKey: ").append(toIndentedString(messageSubscriptionKey)).append("\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
    sb.append("    processInstanceKey: ").append(toIndentedString(processInstanceKey)).append("\n");
    sb.append("    elementId: ").append(toIndentedString(elementId)).append("\n");
    sb.append("    elementInstanceKey: ").append(toIndentedString(elementInstanceKey)).append("\n");
    sb.append("    messageSubscriptionType: ").append(toIndentedString(messageSubscriptionType)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("    messageName: ").append(toIndentedString(messageName)).append("\n");
    sb.append("    correlationKey: ").append(toIndentedString(correlationKey)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `messageSubscriptionKey` to the URL query string
    if (getMessageSubscriptionKey() != null) {
      try {
        joiner.add(String.format("%smessageSubscriptionKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMessageSubscriptionKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processDefinitionId` to the URL query string
    if (getProcessDefinitionId() != null) {
      try {
        joiner.add(String.format("%sprocessDefinitionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessDefinitionId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processDefinitionKey` to the URL query string
    if (getProcessDefinitionKey() != null) {
      try {
        joiner.add(String.format("%sprocessDefinitionKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessDefinitionKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processInstanceKey` to the URL query string
    if (getProcessInstanceKey() != null) {
      try {
        joiner.add(String.format("%sprocessInstanceKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessInstanceKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `elementId` to the URL query string
    if (getElementId() != null) {
      try {
        joiner.add(String.format("%selementId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `elementInstanceKey` to the URL query string
    if (getElementInstanceKey() != null) {
      try {
        joiner.add(String.format("%selementInstanceKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementInstanceKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `messageSubscriptionType` to the URL query string
    if (getMessageSubscriptionType() != null) {
      try {
        joiner.add(String.format("%smessageSubscriptionType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMessageSubscriptionType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `lastUpdatedDate` to the URL query string
    if (getLastUpdatedDate() != null) {
      try {
        joiner.add(String.format("%slastUpdatedDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastUpdatedDate()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `messageName` to the URL query string
    if (getMessageName() != null) {
      try {
        joiner.add(String.format("%smessageName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMessageName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `correlationKey` to the URL query string
    if (getCorrelationKey() != null) {
      try {
        joiner.add(String.format("%scorrelationKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCorrelationKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `tenantId` to the URL query string
    if (getTenantId() != null) {
      try {
        joiner.add(String.format("%stenantId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTenantId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

